define("text!jobDefinition/app/views/processDefinition/job-definition-table.html",[],function(){return'<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-table.html -->\n<table class="job-definition cam-table">\n  <thead>\n    <tr>\n      <th class="state">State</th>\n      <th class="activity">Activity</th>\n      <th class="type">Type</th>\n      <th class="configuration">Configuration</th>\n      <th class="overriding-job-priority">Overriding Job Priority</th>\n      <th class="action">Action</th>\n    </tr>\n  </thead>\n\n  <tbody>\n    <tr ng-repeat="jobDefinition in jobDefinitions">\n      <td class="state">\n        <span ng-show="jobDefinition.suspended">\n          Suspended\n        </span>\n        <span ng-hide="jobDefinition.suspended">\n          Active\n        </span>\n      </td>\n      <td class="activity">\n        <a cam-select-activity="jobDefinition.activityId"\n           ng-href="#/process-definition/{{ processDefinition.id }}?activityIds={{ jobDefinition.activityId }}&amp;detailsTab=job-definition-table">\n          {{ jobDefinition.activityName }}\n        </a>\n      </td>\n      <td class="type">\n        {{ jobDefinition.jobType }}\n      </td>\n      <td class="configuration">\n        {{ jobDefinition.jobConfiguration }}\n      </td>\n      <td class="overriding-job-priority">\n        {{ jobDefinition.overridingJobPriority }}\n      </td>\n      <td class="action">\n        <span ng-repeat="actionProvider in jobDefinitionActions">\n          <view provider="actionProvider" vars="jobDefinitionVars"/>\n        </span>\n      </td>\n    </tr>\n\n    <tr ng-if="!jobDefinitions">\n      <td colspan="6">\n        <span class="glyphicon glyphicon-loading"></span>\n        loading job definitions...\n      </td>\n    </tr>\n\n    <tr ng-if="jobDefinitions && !jobDefinitions.length">\n      <td colspan="6">\n        No job definitions matched by current filter.\n      </td>\n    </tr>\n\n  </tbody>\n</table>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-table.html -->\n'}),define("jobDefinition/app/views/processDefinition/jobDefinitionTable",["angular","text!./job-definition-table.html"],function(n,i){var e=["$scope","Views",function(i,e){function t(e,t,o){i.jobDefinitions=null;var s=e.activityIds;if(!s||!s.length)return void(i.jobDefinitions=t);var a=[];n.forEach(t,function(n){var i=n.activityId;-1!=s.indexOf(i)&&a.push(n)}),i.jobDefinitions=a}var o=i.processData.newChild(i);o.observe(["filter","jobDefinitions","bpmnElements"],function(n,i,e){t(n,i,e)}),i.jobDefinitionVars={read:["jobDefinition","processData","filter"]},i.jobDefinitionActions=e.getProviders({component:"cockpit.jobDefinition.action"})}],t=function(n){n.registerDefaultView("cockpit.processDefinition.runtime.tab",{id:"job-definition-table",label:"Job Definitions",template:i,controller:e,priority:2})};return t.$inject=["ViewsProvider"],t}),define("jobDefinition/app/views/processDefinition/jobDefinitionSuspensionState",["angular"],function(n){"use strict";return["$scope","$http","$filter","Uri","Notifications","$modalInstance","jobDefinition",function(i,e,t,o,s,a,r){var l="BEFORE_UPDATE",d="PERFORM_UDPATE",c="SUCCESS",p="FAIL",u=t("date"),b="yyyy-MM-dd'T'HH:mm:ss";i.jobDefinition=r,i.status=l,i.data={includeJobs:!0,executeImmediately:!0,executionDate:u(Date.now(),b)},i.$on("$routeChangeStart",function(){a.close(i.status)}),i.updateSuspensionState=function(){i.status=d;var n={};n.suspended=!r.suspended,n.includeJobs=i.data.includeJobs,n.executionDate=i.data.executeImmediately?null:i.data.executionDate,e.put(o.appUri("engine://engine/:engine/job-definition/"+r.id+"/suspended/"),n).success(function(){i.status=c,i.data.executeImmediately?s.addMessage({status:"Finished",message:"Updated the suspension state of the job definition.",exclusive:!0}):s.addMessage({status:"Finished",message:"The update of the suspension state of the job definition has been scheduled.",exclusive:!0})}).error(function(n){i.status=p,i.data.executeImmediately?s.addError({status:"Finished",message:"Could not update the suspension state of the job definition: "+n.message,exclusive:!0}):s.addError({status:"Finished",message:"The update of the suspension state of the job definition could not be scheduled: "+n.message,exclusive:!0})})},i.isValid=function(){var i=n.element('[name="updateSuspensionStateForm"]').scope();return i&&i.updateSuspensionStateForm?i.updateSuspensionStateForm.$valid:!1},i.close=function(n){var e={};e.status=n,e.suspended=!r.suspended,e.executeImmediately=i.data.executeImmediately,e.executionDate=i.data.executionDate,a.close(e)}}]}),define("text!jobDefinition/app/views/processDefinition/job-definition-suspension-overlay.html",[],function(){return'<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-suspension-overlay.html -->\n<span class="badge badge-warning activity-top-right-position"\n      tooltip="Suspended Job Definition"\n      tooltip-placement="top"\n      ng-show="jobDefinition && jobDefinition.suspended">\n  <span class="glyphicon glyphicon-pause"></span>\n</span>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-suspension-overlay.html -->\n'}),define("jobDefinition/app/views/processDefinition/jobDefinitionSuspensionOverlay",["text!./job-definition-suspension-overlay.html"],function(n){var i=["$scope",function(n){var i=n.bpmnElement,e=n.processData.newChild(n);e.provide("jobDefinition",["jobDefinitions",function(n){for(var e=0;e<n.length;e++){var t=n[e];if(t.activityId===i.id)return t}return null}]),n.jobDefinition=e.observe("jobDefinition",function(e){e&&(i.isSelectable=!0),n.jobDefinition=e})}],e=function(e){e.registerDefaultView("cockpit.processDefinition.diagram.overlay",{id:"job-definition-diagram-overlay",template:n,controller:i,priority:10})};return e.$inject=["ViewsProvider"],e}),define("text!jobDefinition/app/views/processDefinition/suspension-state-action.html",[],function(){return'<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/suspension-state-action.html -->\n<a class="btn btn-default action-button"\n   ng-click="openSuspensionStateDialog(jobDefinition)"\n   ng-show="jobDefinition.suspended"\n   tooltip="Activate Job Definition"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-play"></span>\n</a>\n<a class="btn btn-default action-button"\n   ng-click="openSuspensionStateDialog(jobDefinition)"\n   ng-hide="jobDefinition.suspended"\n   tooltip="Suspend Job Definition"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-pause"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/suspension-state-action.html -->\n'}),define("text!jobDefinition/app/views/processDefinition/job-definition-suspension-state-dialog.html",[],function(){return'<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-suspension-state-dialog.html -->\n<div class="modal-header">\n  <h3>{{ (jobDefinition.suspended ? \'Activate\' : \'Suspend\') }} Job Definition</h3>\n</div>\n\n<div class="job-definition-suspension-state modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n\n    <p ng-show="jobDefinition.suspended">\n      <!-- activation -->\n      This job definition will be activated, so that new jobs based on this job definition are initially active.\n    </p>\n\n    <p ng-hide="jobDefinition.suspended">\n      <!-- suspension -->\n      This job definition will be suspended, so that new jobs based on this job definition are initially suspended.\n    </p>\n\n    <form class="form-horizontal"\n          name="updateSuspensionStateForm"\n          novalidate\n          request-aware\n          ng-submit="updateSuspensionState()">\n\n      <fieldset>\n        <div class="form-group">\n          <label class="col-xs-4 control-label"\n                 for="includeJobsValue">\n            Include Existing Jobs\n            <!-- activation -->\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Including jobs means that all existing jobs of this job definition will be activated too, if the value is set to true."\n                  tooltip-placement="right"\n                  ng-show="jobDefinition.suspended">\n            </span>\n\n            <!-- suspension -->\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Including jobs means that all existing jobs of this job definition will be suspended too, if the value is set to true."\n                  tooltip-placement="right"\n                  ng-hide="jobDefinition.suspended">\n            </span>\n          </label>\n\n\n          <div class="col-xs-8 checkbox">\n            <label>\n              <input id="includeJobsValueId"\n                     name="includeJobsValue"\n                     type="checkbox"\n                     ng-model="data.includeJobs" />\n            </label>\n          </div>\n        </div>\n\n        <div class="form-group">\n          <label class="col-xs-4 control-label"\n                 for="executeImmediately">\n            Execute\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Decide whether the activation of this job definition should be executed immediately or delayed. If the activation should happen delayed then an execution date must be provided on which the activation will be scheduled."\n                  tooltip-placement="right"\n                  ng-show="jobDefinition.suspended">\n            </span>\n\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Decide whether the suspension of this job definition should be executed immediately or delayed. If the suspension should happen delayed then an execution date must be provided on which the suspension will be scheduled."\n                  tooltip-placement="right"\n                  ng-hide="jobDefinition.suspended">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <div class="radio">\n              <label>\n                <input ng-model="data.executeImmediately"\n                       ng-value="true"\n                       type="radio"\n                       name="execute" />\n                Immediately\n              </label>\n            </div>\n\n            <div class="radio">\n              <label>\n                <input ng-model="data.executeImmediately"\n                       ng-value="false"\n                       type="radio"\n                       name="execute" />\n                Delayed\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div class="form-group"\n             ng-show="!data.executeImmediately">\n          <label class="col-xs-4 control-label"\n                 for="executionDateValue">\n            Schedule at\n          </label>\n\n          <div class="col-xs-8">\n            <input name="executionDateValue"\n                   ng-model="data.executionDate"\n                   class="form-control"\n                   type="text"\n                   date\n                   required />\n\n            <p class="invalid"\n               ng-show="this.updateSuspensionStateForm.executionDateValue.$error.date">\n              Supported pattern \'yyyy-MM-ddTHH:mm:ss\'.\n            </p>\n          </div>\n        </div>\n\n      </fieldset>\n    </form>\n\n    <p>\n      Do you really want to {{ (jobDefinition.suspended ? \'activate\' : \'suspend\') }} this job definition?\n    </p>\n\n  </div>\n\n  <div ng-show="status === \'SUCCESS\'">\n    <p ng-show="jobDefinition.suspended && data.executeImmediately">\n      The suspension state of the Job Definition has been updated to "active" successfully.\n    </p>\n    <p ng-show="jobDefinition.suspended && !data.executeImmediately">\n      The activation of the Job Definition has been scheduled to {{ data.executionDate }} successfully.\n    </p>\n    <p ng-show="!jobDefinition.suspended && data.executeImmediately">\n      The suspension state of the Job Definition has been updated to "suspended" successfully.\n    </p>\n    <p ng-show="!jobDefinition.suspended && !data.executeImmediately">\n      The suspension of the Job Definition has been scheduled to {{ data.executionDate }} successfully.\n    </p>\n  </div>\n\n  <div ng-show="status === \'FAIL\'">\n    <p ng-show="jobDefinition.suspended && data.executeImmediately">\n      The suspension state of the Job Definition could not be updated to "active" successfully.\n    </p>\n    <p ng-show="jobDefinition.suspended && !data.executeImmediately">\n      The activation of the Job Definition could not be scheduled to {{ data.executionDate }} successfully.\n    </p>\n    <p ng-show="!jobDefinition.suspended && data.executeImmediately">\n      The suspension state of the Job Definition could not be updated to "suspended" successfully.\n    </p>\n    <p ng-show="!jobDefinition.suspended && !data.executeImmediately">\n      The suspension of the Job Definition could not be scheduled to {{ data.executionDate }} successfully.\n    </p>\n  </div>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-link"\n          ng-click="close(status)"\n          ng-disabled="status === \'PERFORM_UDPATE\'"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n    Close\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="updateSuspensionState()"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'"\n          ng-disabled="!isValid() || status === \'PERFORM_UDPATE\'">\n    {{ (jobDefinition.suspended ? \'Activate\' : \'Suspend\') }}\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'SUCCESS\' || status === \'FAIL\'">\n    OK\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-suspension-state-dialog.html -->\n'}),define("jobDefinition/app/views/processDefinition/suspensionStateAction",["angular","text!./suspension-state-action.html","text!./job-definition-suspension-state-dialog.html"],function(n,i,e){"use strict";var t=function(t){t.registerDefaultView("cockpit.jobDefinition.action",{id:"update-suspension-state",template:i,controller:["$scope","$rootScope","search","$modal",function(i,t,o,s){i.openSuspensionStateDialog=function(o){var a=s.open({resolve:{jobDefinition:function(){return o}},controller:"JobDefinitionSuspensionStateController",template:e});a.result.then(function(e){"SUCCESS"===e.status&&(e.executeImmediately&&(o.suspended=e.suspended,t.$broadcast("$jobDefinition.suspensionState.changed",i.jobDefinition)),i.processData.set("filter",n.extend({},i.filter)))})}}],priority:50})};return t.$inject=["ViewsProvider"],t}),define("jobDefinition/app/views/main",["angular","./processDefinition/jobDefinitionTable","./processDefinition/jobDefinitionSuspensionState","./processDefinition/jobDefinitionSuspensionOverlay","./processDefinition/suspensionStateAction"],function(n,i,e,t,o){var s=n.module("cockpit.plugin.jobDefinition.views",[]);return s.config(i),s.controller("JobDefinitionSuspensionStateController",e),s.config(t),s.config(o),s}),define("jobDefinition/app/data/processDefinition/jobDefinitionData",["angular"],function(n){var i=["$scope","processData","JobDefinitionResource",function(i,e,t){i.$on("$processDefinition.suspensionState.changed",function(n){e.changed("jobDefinitions")}),e.provide("jobDefinitions",["processDefinition",function(n){return t.query({processDefinitionId:n.id}).$promise}]),e.observe(["jobDefinitions","bpmnElements"],function(i,e){n.forEach(i,function(n){var i=n.activityId,t=e[i];n.activityName=t&&(t.name||t.id)||i})})}],e=function(n){n.registerData("cockpit.processDefinition.data",{id:"job-definitions-data",controller:i})};return e.$inject=["DataProvider"],e}),define("jobDefinition/app/data/main",["angular","./processDefinition/jobDefinitionData"],function(n,i){var e=n.module("cockpit.plugin.jobDefinition.data",[]);return e.config(i),e}),define("text!jobDefinition/app/actions/override-job-priority/override-job-priority-action.html",[],function(){return'<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-action.html -->\n<a class="btn btn-default action-button"\n   ng-click="openDialog(jobDefinition)"\n   tooltip="Change Overriding Job Priority"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-cog"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-action.html -->\n'}),define("text!jobDefinition/app/actions/override-job-priority/override-job-priority-dialog.html",[],function(){return'<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-dialog.html -->\n<div class="modal-header">\n  <h3>Change Overriding Job Priority</h3>\n</div>\n\n<div class="job-definition-override-job-priority modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n\n    <p>Change the overriding priority for jobs of the given job definition.</p>\n\n    <form class="form-horizontal"\n          name="overrideJobPriorityForm"\n          novalidate\n          request-aware\n          ng-submit="isValid() && submit()">\n\n      <fieldset>\n\n        <div class="form-group" ng-show="hasOverridingJobPriority()">\n          <label class="col-xs-4 control-label"\n                 for="execute">\n            Execute\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Decide whether to clear the job definition\'s overriding job priority or to set a new priority as job definition\'s overriding job priority."\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <div class="radio">\n              <label>\n                <input ng-model="setJobPriority"\n                       ng-value="false"\n                       type="radio"\n                       name="execute" />\n                Clear Overriding Job Priority\n              </label>\n            </div>\n\n            <div class="radio">\n              <label>\n                <input ng-model="setJobPriority"\n                       ng-value="true"\n                       type="radio"\n                       name="execute" />\n                Set Overriding Job Priority\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div class="form-group" ng-show="setJobPriority">\n          <label class="col-xs-4 control-label"\n                 for="priority">\n            Priority\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="The new priority number for new jobs of the given definition. The new priority overrides any setting specified in the BPMN 2.0 XML."\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <input name="priority"\n                   ng-model="data.priority"\n                   class="form-control"\n                   numeric integer="true"\n                   required />\n            <p class="invalid"\n               ng-show="this.overrideJobPriorityForm.priority.$error.numeric">\n              Invalid value: Only an Integer value is allowed.\n            </p>\n          </div>\n        </div>\n\n        <div class="form-group" ng-show="setJobPriority">\n          <label class="col-xs-4 control-label"\n                 for="includeJobsPriority">\n            Include Existing Jobs\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Including jobs means that all existing jobs of the given definition will receive the priority as well."\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8 checkbox">\n            <label>\n              <input name="includeJobsPriority"\n                     type="checkbox"\n                     ng-model="data.includeJobs" />\n            </label>\n          </div>\n        </div>\n\n      </fieldset>\n    </form>\n\n    <p>\n      Do you really want to change the overriding job priority?\n    </p>\n\n  </div>\n\n  <div ng-show="status === \'SUCCESS\'">\n    <p ng-show="setJobPriority">\n      The overriding job priority has been updated to {{ data.priority }} successfully.\n    </p>\n    <p ng-hide="setJobPriority">\n      The overriding job priority has been cleared successfully.\n    </p>\n  </div>\n\n  <div ng-show="status === \'FAIL\'">\n    <p ng-show="setJobPriority">\n      The overriding job priority could not be updated to {{ data.priority }} successfully.\n    </p>\n    <p ng-hide="setJobPriority">\n      The overriding job priority could not be cleared successfully.\n    </p>\n  </div>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-link"\n          ng-click="close(status)"\n          ng-disabled="status === \'PERFORM_UDPATE\'"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n    Close\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="submit()"\n          ng-hide="setJobPriority || status === \'SUCCESS\' || status === \'FAIL\'"\n          ng-disabled="!isValid() || status === \'PERFORM_UDPATE\'">\n    Clear\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="submit()"\n          ng-hide="!setJobPriority || status === \'SUCCESS\' || status === \'FAIL\'"\n          ng-disabled="!isValid() || status === \'PERFORM_UDPATE\'">\n    Override\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'SUCCESS\' || status === \'FAIL\'">\n    OK\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-dialog.html -->\n'}),define("jobDefinition/app/actions/override-job-priority/override-job-priority-action",["angular","text!./override-job-priority-action.html","text!./override-job-priority-dialog.html"],function(n,i,e){"use strict";var t=function(t){t.registerDefaultView("cockpit.jobDefinition.action",{id:"job-definition-override-job-priority-action",template:i,controller:["$scope","$rootScope","$modal",function(i,t,o){i.openDialog=function(t){var s=o.open({resolve:{jobDefinition:function(){return t}},controller:"JobDefinitionOverrideJobPriorityController",template:e});s.result.then(function(e){"SUCCESS"===e.status&&(i.processData.changed("jobDefinitions"),i.processData.set("filter",n.extend({},i.filter)))})}}],priority:10})};return t.$inject=["ViewsProvider"],t}),define("jobDefinition/app/actions/override-job-priority/override-job-priority-dialog",["angular"],function(n){"use strict";return["$scope","$q","Notifications","JobDefinitionResource","$modalInstance","jobDefinition",function(i,e,t,o,s,a){var r="SUCCESS",l="FAIL";i.status,i.setJobPriority=!0;var d=i.data={priority:a.overridingJobPriority,includeJobs:!1};i.$on("$routeChangeStart",function(){var n={};n.status=i.status,s.close(n)});i.hasOverridingJobPriority=function(){return null!==a.overridingJobPriority&&void 0!==a.overridingJobPriority};i.submit=function(){var n=i.setJobPriority;n||(d={}),o.setJobPriority({id:a.id},d,function(){i.status=r,n?t.addMessage({status:"Finished",message:"Overriding the priority completed successfully.",exclusive:!0}):t.addMessage({status:"Finished",message:"Clearing the priority completed successfully.",exclusive:!0})},function(e){i.status=l,n?t.addError({status:"Finished",message:"Overriding the priority was not successful: "+e.data.message,exclusive:!0}):t.addError({status:"Finished",message:"Clearing the priority was not successful: "+e.data.message,exclusive:!0})})},i.isValid=function(){var e=n.element('[name="overrideJobPriorityForm"]').scope();return!i.setJobPriority||(e&&e.overrideJobPriorityForm?e.overrideJobPriorityForm.$valid:!1)},i.close=function(n){var i={};i.status=n,s.close(i)}}]}),define("text!jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-action.html",[],function(){return'<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-action.html -->\n<a class="btn btn-default action-button"\n   ng-click="openDialog()"\n   tooltip="Change Overriding Job Priority for all Job Definitions"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-cog"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-action.html -->\n'}),define("text!jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-dialog.html",[],function(){return'<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-dialog.html -->\n<div class="modal-header">\n  <h3>Change Overriding Job Priority</h3>\n</div>\n\n<div class="job-definition-override-job-priority modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'FINISHED\'">\n\n    <p>Change for each job definition associated to this process definition the overriding job priority.</p>\n\n    <form class="form-horizontal"\n          name="overrideJobPriorityForm"\n          novalidate\n          request-aware\n          ng-submit="isValid() && submit()">\n\n      <fieldset>\n\n        <div class="form-group">\n          <label class="col-xs-4 control-label"\n                 for="execute">\n            Execute\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Decide whether to clear the job definition\'s overriding job priority or to set a new priority as job definition\'s overriding job priority."\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <div class="radio">\n              <label>\n                <input ng-model="setJobPriority"\n                       ng-value="false"\n                       type="radio"\n                       name="execute" />\n                Clear Overriding Job Priority\n              </label>\n            </div>\n\n            <div class="radio">\n              <label>\n                <input ng-model="setJobPriority"\n                       ng-value="true"\n                       type="radio"\n                       name="execute" />\n                Set Overriding Job Priority\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div class="form-group" ng-show="setJobPriority">\n          <label class="col-xs-4 control-label"\n                 for="priority">\n            Priority\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="The new priority number for new jobs of the given definition. The new priority overrides any setting specified in the BPMN 2.0 XML."\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <input name="priority"\n                   ng-model="data.priority"\n                   class="form-control"\n                   numeric integer="true"\n                   required />\n            <p class="invalid"\n               ng-show="this.overrideJobPriorityForm.priority.$error.numeric">\n              Invalid value: Only an Integer value is allowed.\n            </p>\n          </div>\n        </div>\n\n        <div class="form-group" ng-show="setJobPriority">\n          <label class="col-xs-4 control-label"\n                 for="includeJobsPriority">\n            Include Existing Jobs\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Including jobs means that all existing jobs of the given definition will receive the priority as well."\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8 checkbox">\n            <label>\n              <input name="includeJobsPriority"\n                     type="checkbox"\n                     ng-model="data.includeJobs" />\n            </label>\n          </div>\n        </div>\n\n      </fieldset>\n    </form>\n\n    <p>\n      Do you really want to change the overriding job priority?\n    </p>\n\n  </div>\n\n  <div ng-show="status === \'FINISHED\' || status === \'PERFORMING\'">\n\n    <table class="cam-table">\n      <thead>\n        <tr>\n          <th class="job-id uuid">Activity</th>\n          <th class="scope">Type</th>\n          <th class="status">Status</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr ng-repeat="jobDefinition in showJobDefinitions">\n          <td class="activity">\n            {{ jobDefinition.activityName }}\n          </td>\n          <td class="type">\n            {{ jobDefinition.jobType }}\n          </td>\n          <td class="status">\n            <span ng-show="jobDefinition.status && jobDefinition.status === \'PERFORMING\'">\n              <span class="glyphicon glyphicon-loading"></span>\n            </span>\n            <span ng-show="jobDefinition.status && jobDefinition.status === \'SUCCESS\'">\n              <span class="glyphicon glyphicon-ok"></span>&nbsp;Successful\n            </span>\n            <span ng-show="jobDefinition.status && jobDefinition.status === \'FAILED\'">\n              <span class="glyphicon glyphicon-remove"></span>&nbsp;Failed\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <pagination ng-if="summarizePages.total > summarizePages.size"\n                class="pagination-sm"\n\n                page="summarizePages.current"\n                ng-model="summarizePages.current"\n\n                total-items="summarizePages.total"\n                items-per-page="summarizePages.size"\n\n                max-size="7"\n                boundary-links="true"></pagination>\n  </div>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-link"\n          ng-click="close(status)"\n          ng-disabled="status === \'PERFORMING\'"\n          ng-hide="status === \'FINISHED\'">\n    Close\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="submit()"\n          ng-hide="setJobPriority || status === \'FINISHED\'"\n          ng-disabled="!isValid() || status === \'PEFORMING\'">\n    Clear\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="submit()"\n          ng-hide="!setJobPriority || status === \'FINISHED\'"\n          ng-disabled="!isValid() || status === \'PERFORMING\'">\n    Override\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'FINISHED\'">\n    OK\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-dialog.html -->\n'}),define("jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-action",["angular","text!./bulk-override-job-priority-action.html","text!./bulk-override-job-priority-dialog.html"],function(n,i,e){
"use strict";var t=function(t){t.registerDefaultView("cockpit.processDefinition.runtime.action",{id:"bulk-job-definition-override-job-priority-action",template:i,controller:["$scope","$rootScope","$modal",function(i,t,o){var s,a=i.processData.newChild(i);a.observe("jobDefinitions",function(n){s=n}),i.openDialog=function(){var t=o.open({resolve:{jobDefinitions:function(){return s}},controller:"BulkJobDefinitionOverrideJobPriorityController",template:e});t.result.then(function(e){"FINISHED"===e.status&&(a.changed("jobDefinitions"),a.set("filter",n.extend({},i.filter)))})}}],priority:10})};return t.$inject=["ViewsProvider"],t}),define("jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-dialog",["angular"],function(n){"use strict";return["$scope","$q","Notifications","JobDefinitionResource","$modalInstance","jobDefinitions",function(i,e,t,o,s,a){function r(n){for(var e=g.size,t=(n-1)*e,o=i.showJobDefinitions=[],s=0;e>s;s++){var r=a[s+t];r&&o.push(r)}}function l(n){i.status=p,d(n).then(function(){f?i.setJobPriority?t.addError({status:"Finished",message:"Overriding the priority was not successfully.",exclusive:!0}):t.addError({status:"Finished",message:"Clearing the priority was not successfully.",exclusive:!0}):i.setJobPriority?t.addMessage({status:"Finished",message:"Overriding the priority completed successfully.",exclusive:!0}):t.addMessage({status:"Finished",message:"Clearing the priority completed successfully.",exclusive:!0}),i.status=c})}function d(n){function i(n){n.status=p,o.setJobPriority({id:n.id},v,function(){n.status=u,a-=1,0===a&&s.resolve()},function(i){f=!0,n.status=b,n.error=i,a-=1,0===a&&s.resolve()})}for(var t,s=e.defer(),a=n.length,r=0;t=n[r];r++)i(t);return s.promise}i.status;var c="FINISHED",p="PERFORMING",u="SUCCESS",b="FAILED",f=!1,g=i.summarizePages={size:5,total:a.length,current:1},v=i.data={priority:null,includeJobs:!1};i.setJobPriority=!0,i.$on("$routeChangeStart",function(){var n={};n.status=i.status,s.close(n)}),i.$watch("summarizePages.current",function(n){n&&r(n)}),i.submit=function(){var n=i.setJobPriority;n||(v={}),l(a)},i.isValid=function(){var e=n.element('[name="overrideJobPriorityForm"]').scope();return!i.setJobPriority||(e&&e.overrideJobPriorityForm?e.overrideJobPriorityForm.$valid:!1)},i.close=function(n){var i={};i.status=n,s.close(i)}}]}),define("jobDefinition/app/actions/main",["angular","./override-job-priority/override-job-priority-action","./override-job-priority/override-job-priority-dialog","./bulk-override-job-priority/bulk-override-job-priority-action","./bulk-override-job-priority/bulk-override-job-priority-dialog"],function(n,i,e,t,o){var s=n.module("cockpit.plugin.jobDefinition.actions",[]);return s.config(i),s.controller("JobDefinitionOverrideJobPriorityController",e),s.config(t),s.controller("BulkJobDefinitionOverrideJobPriorityController",o),s}),define("jobDefinition/app/plugin",["angular","./views/main","./data/main","./actions/main"],function(n,i,e,t){return n.module("cockpit.plugin.jobDefinition",[i.name,e.name,t.name])}),require(["jobDefinition/app/plugin"]);
//# sourceMappingURL=plugin.js.map