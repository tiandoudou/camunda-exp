!function(n){function e(n){function e(n){return i(n)?n:[n]}function t(n){return Array.prototype.slice.apply(n)}var a=n.module("dataDepend",[]),i=n.isArray,s=n.isFunction,r=(n.isObject,n.forEach),o=(n.extend,["$rootScope","$injector","$q",function(a,o,l){function c(a,o){function c(n){function e(e){var t=a[e];return t||n&&(t=n.get(e)),t}function t(n,t){if(e(n))throw new Error("[dataDepend] provider with key "+n+" already registered");a[n]=t}var a={};return{local:a,get:e,put:t}}function d(){return f++}function u(e){function a(n){var e=N.value;N.$loaded=!0,delete N.$error,x=!1,e!==n&&(N.value=n,E("setLoaded",e," -> ",n),m())}function c(n){var e=F[n];return e||(F[n]=e={}),e}function d(){N.$loaded=!1,L=!1}function u(n){var e=A.get(n);if(!e)throw new Error("[dataDepend] No provider for "+n);return e}function p(n){r(R,n)}function f(n){r(T,n)}function m(){p(function(n){n.parentChanged()})}function v(){function n(n,e){var t=c(n),a=t.value;E("resolveDependencies",n,":",a,"->",e),a!==e&&(E("resolveDependencies","changed"),t.value=e,x=!0)}var e=[];return f(function(t){var a=u(t),i=a.resolve().then(function(e){return n(t,e),e},function(n){throw new Error("<"+t+"> <- "+n.message)});e.push(i)}),l.all(e).then(function(){var e=[];return f(function(t){var a=u(t).get();n(t,a),e.push(a)}),e})}function g(n){d(),E("asyncLoad: init load");var e=v().then(function(t){if(E("asyncLoad dependencies resolved",t),$!==e)return E("asyncLoad: skip (new load request)"),$;var a=k();if(S&&(x||n||0==t.length)){E("asyncLoad: call factory");try{a=S.apply(S,t)}catch(i){throw new Error("unresolvable: "+i.message)}}return a}).then(function(n){return $!==e?(E("asyncLoad: skip (new load request)"),$):(E("asyncLoad: load complete"),$=null,a(n),n)},function(n){if($!==e)return E("asyncLoad: skip (new load request)"),$;throw E("asyncLoad: load error"),$=null,N.$error=n,x=!1,n});return e}function h(){return E("parentChanged START"),$?void E("parentChanged SKIP (loading)"):(L=!0,_&&(E("parentChanged RESOLVE async"),o(function(){E("parentChanged RESOLVE"),b()})),void m())}function k(){return N.value}function b(n){n=n||{};var e=n.reload;return(L||e)&&($=g(e)),$?(E("resolve: load async"),$):(E("resolve: load sync"),l.when(k()))}function y(n){if(S)throw new Error("[dataDepend] Cannot set value, was using factory");if(s(n))throw new Error("[dataDepend] Cannot refine static value using factory function");a(n)}function E(){}function I(e){function a(n){return n?n[o]:n}function s(){var n=t(arguments);return c.apply(null,n).then(a)}function r(){var n=t(arguments);return a(l.apply(null,n))}if(!i(C.produces))throw new Error("[dataDepend] Provider does not produce multiple values");var o=C.produces.indexOf(e),l=C.get,c=C.resolve,d=n.extend({},C,{resolve:s,get:r});return d}function D(){f(function(n){var e=u(n),t=e.children,a=t.indexOf(C);-1!==a&&t.splice(a,1)})}e=e||{};var w=e.produces,A=e.registry,T=e.dependencies||[],S=e.factory,_=e.eager||!1,F={},R=[],x=!0,L=!0,$=null,N={$loaded:!1},C={produces:w,data:N,get:k,set:y,resolve:b,children:R,filter:I,destroy:D,parentChanged:h};f(function(n){u(n).children.push(C)}),_&&(E("resolve async"),o(function(){E("resolve"),b()})),S||a(e.value);var O={reload:function(){b({reload:!0})}};return n.extend(N,O),C}function p(n,t){function o(n,t){var r="provider$"+d();if(t?n=e(n):(t=n,n=a(t),i(t)&&(t=t[t.length-1])),!s(t))throw new Error('[dataDepend] Must provide callback as second parameter or use [ "A", "B", function(a, b) { } ] notation');var o=l({produces:r,factory:t,dependencies:n,eager:!0,registry:b});return o.data}function l(n){var e,t=n.produces;if(!t)throw new Error("[dataDepend] Must provide produces when creating new provider");return e=u(n),i(t)?r(t,function(n){b.put(n,e.filter(n))}):b.put(t,e),e}function f(e,t){t=t||e;var a=e+":old";m(e,n.$eval(t)),m(a,null);var i=b.get(e),s=b.get(a);return n.$watch(t,function(n,e){n!==e&&(i.set(n),s.set(e))}),i.data}function m(n,e){var t,r,o;if(b.get(n))throw new Error("[dataDepend] provider for "+n+" already registered");return(s(e)||i(e)&&s(e[e.length-1]))&&(t=e,r=a(t),e=void 0,i(t)&&(t=t[t.length-1])),o=l({produces:n,factory:t,value:e,dependencies:r,registry:b}),o.data}function v(n,e){if("string"!=typeof n)throw new Error("[dataDepend] expected name to be a string, got "+n);var t=b.get(n);if(!t)throw new Error("[dataDepend] no provider with name "+n);t.set(e)}function g(n){var e=b.get(n);if(!e)throw new Error('[dataDepend] Provider "'+n+'" does not exists');e.resolve({reload:!0})}function h(){var n=b.local;r(n,function(n){n.destroy()})}function k(n){return p(n,b)}var b=c(t);return n.$on("$destroy",h),{$providers:b,observe:o,provide:m,set:v,changed:g,watchScope:f,newChild:k}}var f=0;return{create:p}}return c(o.annotate,function(n){a.$evalAsync(n)})}]);return a.factory("dataDepend",o),a}if("function"==typeof define&&define.amd)define("angular-data-depend",["angular"],function(n){return e(n)});else{if(void 0===typeof n)throw new Error("[dataDepend] Failed to bind: AngularJS not available on window or via AMD");e(n)}}(angular),define("scripts/config/date",[],function(){"use strict";return["camDateFormatProvider","configurationProvider",function(n,e){for(var t=["monthName","day","abbr","normal","long","short"],a=0;a<t.length;a++)n.setDateFormat(e.getDateFormat(t[a]),t[a])}]}),define("text!scripts/index.html",[],function(){return'<div class="columns"\n     ng-controller="camLayoutCtrl">\n\n  <!-- # filters column -->\n  <section class="column task-filters"\n           ng-controller="camFiltersCtrl">\n    <header class="cell top">\n      <button class="btn btn-link"\n              ng-show="userCanCreateFilter"\n              ng-click="openModal($event)">\n        <span class="glyphicon glyphicon-plus-sign"></span>\n        {{ \'FILTER_CREATE\' | translate }}\n      </button>\n\n      <button ng-click="toggleRegion($event)"\n              data-region="filters"\n              class="region-toggle btn btn-link">\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n      </button>\n    </header>\n\n    <div class="cell content">\n      <div cam-tasklist-filters\n           filters-data="filtersData"\n           open-modal="openModal"></div>\n    </div>\n  </section>\n  <!-- / filters column -->\n\n\n\n\n\n  <!-- # list column -->\n  <section class="column tasks-list"\n           ng-controller="camListCtrl">\n    <header class="cell top">\n      <div cam-sorting-choices\n           tasklist-data="tasklistData"></div>\n\n      <button ng-click="toggleRegion($event)"\n              data-region="list"\n              class="region-toggle btn btn-link">\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n      </button>\n    </header>\n\n    <div class="cell content">\n      <view ng-repeat="tasklistPlugin in tasklistPlugins"\n            provider="tasklistPlugin"\n            vars="tasklistVars" />\n\n      <div cam-tasks\n           tasklist-data="tasklistData"></div>\n    </div>\n  </section>\n  <!-- / list column -->\n\n\n\n\n\n  <!-- # task column -->\n  <section class="column task-details"\n           ng-controller="camTaskActionCtrl">\n    <header class="cell top">\n      <button ng-click="toggleRegion($event)"\n              data-region="task"\n              class="region-toggle btn btn-link">\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n      </button>\n\n      <button ng-click="maximizeRegion($event)"\n              data-region="task"\n              class="btn btn-link maximize">\n        <span class="glyphicon glyphicon-resize-full"></span>\n      </button>\n\n      <button ng-click="resetRegions($event)"\n              class="btn btn-link reset-regions">\n        <span class="glyphicon glyphicon-resize-small"></span>\n      </button>\n\n      <div class="task-actions"\n           ng-show="task"\n           ng-repeat="taskAction in taskActions">\n        <view provider="taskAction" vars="taskVars">\n      </div>\n    </header>\n\n    <div class="cell content">\n      <div cam-tasklist-task\n           tasklist-data="tasklistData"></div>\n    </div>\n  </section>\n  <!-- # task column -->\n\n</div>\n'}),define("text!scripts/user/controller/cam-auth-login.html",[],function(){return'<div class="form-signin-container">\n  <form role="form"\n        name="signinForm"\n        class="form-signin cam-auth-login ">\n\n    <div class="auth-fields">\n\n      <h2 translate="PLEASE_SIGN_IN">Please sign in</h2>\n\n      <div notifications-panel />\n\n      <div class="form-group">\n        <input required\n               autofocus="autofocus"\n               tabindex="1"\n               ng-model="username"\n               name="username"\n               type="text"\n               class="form-control"\n               id="signinFormInputUsername"\n               placeholder="{{ \'USERNAME\' | translate }}"\n               auto-fill>\n      </div>\n\n      <div class="form-group">\n        <input required\n               tabindex="2"\n               ng-model="password"\n               name="password"\n               type="password"\n               class="form-control"\n               id="signinFormInputPassword"\n               placeholder="{{ \'PASSWORD\' | translate }}"\n               auto-fill>\n      </div>\n\n    </div>\n\n    <div class="auth-actions">\n      <button class="btn btn-lg btn-primary"\n              tabindex="3"\n              type="submit"\n              ng-disabled="!username || !password"\n              ng-click="login()"\n              translate="SIGN_IN_ACTION">Sign in</button>\n    </div>\n  </form>\n</div>\n'}),define("scripts/api/index",["angular","camunda-bpm-sdk-js"],function(n,e){"use strict";var t=n.module("cam.tasklist.client",[]);return t.value("HttpClient",e.Client),t.value("CamForm",e.Form),t.run(["$rootScope","Notifications","$translate",function(n,e,t){n.$on("authentication.login.required",function(){t(["SESSION_EXPIRED","SESSION_EXPIRED_MESSAGE"]).then(function(n){e.addError({status:n.SESSION_EXPIRED,message:n.SESSION_EXPIRED_MESSAGE,exclusive:!0})})})}]),t.factory("camAPI",["camAPIHttpClient","$window","Uri",function(n,t,a){var i={apiUri:"engine-rest/api/engine",HttpClient:n,engine:a.appUri(":engine")};if(t.tasklistConf)for(var s in t.tasklistConf)i[s]=t.tasklistConf[s];return new e.Client(i)}]),t}),define("scripts/user/controller/cam-user-logout-ctrl",[],function(){"use strict";return["$translate","AuthenticationService","Notifications",function(n,e,t){e.logout().then(function(){n("LOGGED_OUT").then(function(n){t.add({status:n,exclusive:!0})})})}]}),define("scripts/user/controller/cam-user-login-ctrl",[],function(){"use strict";return["$scope","$translate","AuthenticationService","Notifications",function(n,e,t,a){function i(){e("LOGGED_IN").then(function(n){a.addMessage({duration:5e3,status:n,exclusive:!0})})}function s(){e("CREDENTIALS_ERROR").then(function(e){a.addError({status:e,scope:n})})}n.login=function(){t.login(n.username,n.password).then(i,s)}}]}),define("scripts/user/index",["angular","camunda-commons-ui/auth/index","../api/index","./controller/cam-user-logout-ctrl","./controller/cam-user-login-ctrl"],function(n,e,t,a,i){"use strict";var s=n.module("cam.tasklist.user",[e.name,t.name]);return s.controller("camUserLogoutCtrl",a),s.controller("camUserLoginCtrl",i),s}),define("scripts/config/routes",["text!./../index.html","text!./../user/controller/cam-auth-login.html","./../user/index"],function(n,e){"use strict";return["$routeProvider",function(t){t.when("/",{template:n,controller:"camTasklistViewCtrl",authentication:"required",reloadOnSearch:!1}).when("/login",{template:e,controller:"camUserLoginCtrl"}).when("/logout",{template:e,authentication:"required",controller:"camUserLogoutCtrl"}).otherwise({redirectTo:"/"})}]}),define("scripts/config/locales",["moment","angular"],function(n,e){"use strict";return function(t,a){t.factory("localeLoader",["$q","$http","Notifications",function(n,t,a){return function(i){if(!i||!e.isString(i.prefix)||!e.isString(i.suffix))throw new Error("Couldn't load static files, no prefix or suffix specified!");var s=n.defer();return t(e.extend({url:[i.prefix,i.key,i.suffix].join(""),method:"GET",params:""},i.$http)).success(function(n){"function"==typeof i.callback&&i.callback(null,n,i.key),s.resolve(n.labels)}).error(function(n){"function"==typeof i.callback&&i.callback(n,null,i.key),a.addError({status:"Error in localization configuration",message:'"'+i.key+'" is declared as available locale, but no such locale file exists.'}),s.reject(i.key)}),s.promise}}]),t.config(["$translateProvider","configurationProvider",function(t,i){var s=i.getAvailableLocales(),r=i.getFallbackLocale();t.useLoader("localeLoader",{prefix:a+"/app/tasklist/locales/",suffix:".json",callback:function(e,t,a){!e&&t&&t.dateLocales&&n.locale(a||r,t.dateLocales)}}),t.registerAvailableLanguageKeys(s),t.fallbackLanguage(r),t.determinePreferredLanguage(function(){var n=window.navigator,t=((e.isArray(n.languages)?n.languages[0]:n.language||n.browserLanguage||n.systemLanguage||n.userLanguage)||"").split("-"),a=s.indexOf(e.lowercase(t[0]));return a>-1?s[a]:r})}])}}),define("scripts/config/tooltip",[],function(){"use strict";return["$tooltipProvider",function(n){n.options({appendToBody:!0,popupDelay:500})}]}),define("scripts/config/uris",["angular"],function(n){"use strict";return function(n,e){n.config(["UriProvider",function(n){n.replace(":appName","tasklist"),n.replace("app://",e.href),n.replace("adminbase://",e["app-root"]+"/app/admin/"),n.replace("tasklistbase://",e["app-root"]+"/app/tasklist/"),n.replace("cockpitbase://",e["app-root"]+"/app/cockpit/"),n.replace("admin://",e["admin-api"]),n.replace("plugin://",e["tasklist-api"]+"plugin/"),n.replace("engine://",e["engine-api"]),n.replace(":engine",["$window",function(n){var e=n.location.href,t=e.match(/\/app\/tasklist\/(\w+)(|\/)/);if(t)return t[1];throw new Error("no process engine selected")}])}])}}),define("scripts/controller/cam-tasklist-app-ctrl",[],function(){"use strict";var n=function(){function n(){this.refreshProvider=null}return n}();return["camAPI","$window","$scope",function(e,t,a){function i(n){if(!n||!n.name)return void(a.userFullName=null);var t=e.resource("user");t.profile(n.name,function(n,e){if(n)throw a.userFullName=null,n;a.userFullName=e.firstName+" "+e.lastName})}a.tasklistApp=new n,a.$on("authentication.changed",function(n,e){i(e)}),i(a.authentication),a.$on("authentication.logout.success",function(){t.location.reload()})}]}),define("scripts/controller/cam-tasklist-view-ctrl",["angular"],function(n){"use strict";function e(n){return{refreshTaskList:function(){n.changed("taskList")}}}return["$scope","$q","$location","$interval","search","dataDepend","camAPI",function(t,a,i,s,r,o,l){function c(n){var e=i.search()||{};return e[n]||null}function d(n){r.updateSilently(n)}t.$on("$destroy",function(){t.tasklistApp.refreshProvider=null});var u=t.tasklistData=o.create(t);t.tasklistApp&&(t.tasklistApp.refreshProvider=e(u));var p,f=c("task"),m=c("detailsTab"),v=l.resource("filter"),g=l.resource("task");u.provide("filters",[function(){var n=a.defer();return v.list({itemCount:!1,resoureType:"Task"},function(e,t){e?n.reject(e):n.resolve(t)}),n.promise}]),u.provide("currentFilter",["filters",function(e){for(var t,a,i=c("filter"),s=0;a=e[s];s++){if(i===a.id){t=a;break}(!t||a.properties.priority<t.properties.priority)&&(t=a)}if(p&&p.id!==t.id){var r=c("page");r&&d({page:"1"})}return t&&t.id!==i&&d({filter:t.id}),n.copy(t)}]),u.provide("searchQuery",{processVariables:[],taskVariables:[],caseInstanceVariables:[]}),u.provide("taskListQuery",["currentFilter","searchQuery",function(e,t){if(!e)return null;var a=n.copy(t),i=15*((c("page")||1)-1),s=c("sorting");try{s=JSON.parse(s)}catch(r){s=[{}]}return s=Array.isArray(s)&&s.length?s:[{}],s[0].sortOrder=s[0].sortOrder||"desc",s[0].sortBy=s[0].sortBy||"created",a.id=e.id,a.firstResult=i,a.maxResults=15,a.sorting=s,a.active=!0,a}]),u.provide("taskList",["taskListQuery",function(e){var t=a.defer();return e&&null!==e.id?v.getTasks(n.copy(e),function(n,e){n?t.reject(n):t.resolve(e)}):t.resolve({count:0,_embedded:{}}),t.promise}]),u.provide("taskId",{taskId:f}),u.provide("task",["taskId",function(n){var e=a.defer(),t=n.taskId;return"string"!=typeof t?e.resolve(null):g.get(t,function(n,t){n?e.reject(n):e.resolve(t)}),e.promise}]),u.observe("currentFilter",function(n){p=n});var h;u.observe("currentFilter",function(n){h&&s.cancel(h),n&&n.properties.refresh&&(h=s(function(){t.tasklistApp&&t.tasklistApp.refreshProvider?t.tasklistApp.refreshProvider.refreshTaskList():s.cancel(h)},1e4))}),t.$on("$routeChanged",function(){var n=f,e=m;f=c("task"),m=c("detailsTab"),(n!==f||e===m)&&u.set("taskId",{taskId:f}),p=null,u.changed("currentFilter")})}]}),define("scripts/services/cam-tasklist-assign-notification",[],function(){"use strict";return["camAPI","Notifications","$translate",function(n,e,t){var a=n.resource("task");return function(n){n.assignee&&(n.processInstanceId||n.caseInstanceId)&&a.list(n,function(a,i){if(i._embedded.task.length>0){for(var s,r="",o=0;s=i._embedded.task[o];o++)r+='<a ng-href="#/?task='+s.id+'" ng-click="removeNotification(notification)">'+s.name+"</a>, ";t(n.processInstanceId?"ASSIGN_NOTE_PROCESS":"ASSIGN_NOTE_CASE").then(function(n){e.addMessage({duration:16e3,status:n,message:r.slice(0,-2)})})}})}}]}),define("scripts/services/cam-tasklist-configuration",["angular"],function(n){"use strict";var e=window.camTasklistConf,t={dateFormat:{monthName:"MMMM",day:"DD",abbr:"lll",normal:"LLL","long":"LLLL","short":"LL"},locales:{availableLocales:["en"],fallbackLocale:"en"}};return[function(){this.getDateFormat=function(n){var a=e.dateFormat||t.dateFormat;return a[n]||t.dateFormat[n]},this.getFallbackLocale=function(){return e.locales&&e.locales.fallbackLocale?e.locales.fallbackLocale:t.locales.fallbackLocale},this.getAvailableLocales=function(){return e.locales&&e.locales.availableLocales?e.locales.availableLocales:t.locales.availableLocales},this.getDateLocales=function(){return e.camDateLocales},this.$get=function(){return this}}]}),define("text!scripts/variable/directives/cam-tasklist-variables.html",[],function(){return'<div class="variables-list"\n     ng-class="{expanded: (expanded && shownVariablesCount > 2)}">\n\n  <!-- <h6 class="col-xs-12"\n      translate="TASK_VARIABLES">Variables</h6> -->\n\n  <div ng-repeat="(delta, info) in variableDefinitions"\n       ng-if="variablesByName[info.name] || filterProperties.showUndefinedVariable">\n    <div class="col-xs-12 col-lg-6">\n\n      <div class="row variable-item">\n        <!-- <span class="col-xs-4 col-lg-12"\n              ng-click="selectValue($event)"> -->\n        <span class="col-xs-4 col-lg-12">\n          <strong class="variable-label"\n                  ng-class="{\'undefined\' : !variablesByName[info.name] && filterProperties.showUndefinedVariable}"\n                  tooltip-placement="top"\n                  tooltip="{{ info.name }}">\n            {{ info.label }}:\n          </strong>\n        </span>\n\n\n        <span class="col-xs-8 col-lg-12"\n              ng-if="!variablesByName[info.name] && filterProperties.showUndefinedVariable">\n          <span class="variable-value undefined"\n                translate="UNDEFINED_VARIABLE">\n            &lt;Undefined&gt;\n          </span>\n        </span>\n\n\n        <span class="col-xs-8 col-lg-12"\n              ng-if="(variablesByName[info.name] && variablesByName[info.name].value !== null) || variablesByName[info.name].type === \'Bytes\'"\n              ng-switch="variablesByName[info.name].type">\n          <span class="variable-value"\n                ng-switch-when="Date"\n                tooltip-placement="top"\n                tooltip="{{ variablesByName[info.name].value | camDate }}">\n            {{ variablesByName[info.name].value | camDate }}\n          </span>\n\n          <span class="variable-value"\n                ng-switch-when="Null">\n            {{ variablesByName[info.name].value }}\n          </span>\n\n          <a class="variable-value variable-type"\n             ng-switch-when="Object"\n             ng-click="showValue(variablesByName[info.name], $event)">\n            {{ variablesByName[info.name].valueInfo.objectTypeName }}\n          </a>\n\n          <a class="variable-value"\n             ng-switch-when="Bytes"\n             ng-click="download(variablesByName[info.name], $event)">\n            {{ \'DOWNLOAD\' | translate }}\n            <span class="glyphicon glyphicon-download"></span>\n          </a>\n\n          <span class="variable-value"\n                ng-switch-default\n                tooltip-placement="top"\n                tooltip="{{ variablesByName[info.name].value }}">\n            {{ variablesByName[info.name].value }}\n          </span>\n        </span>\n\n        <span class="col-xs-8 col-lg-12"\n          ng-if="variablesByName[info.name].value === null && variablesByName[info.name].type !== \'Bytes\'">\n          <span class="variable-value variable-empty-value"\n                translate="EMPTY_VALUE">Empty</span>\n        </span>\n      </div>\n\n    </div>\n  </div>\n\n\n  <div class="shutter"\n       ng-if="shownVariablesCount > 2"\n       ng-click="toggle($event)"\n       tooltip-placement="bottom"\n       tooltip="{{ (expanded ? \'LESS_VARIABLES\' : \'MORE_VARIABLES\') | translate }}">\n    <a class="glyphicon"\n       ng-class="{\'glyphicon-chevron-up\': expanded, \'glyphicon-chevron-down\': !expanded}">\n    </a>\n  </div>\n</div>\n\n'}),define("text!scripts/variable/modals/cam-tasklist-variables-detail-modal.html",[],function(){return'<div class="modal-header">\n  <h3 class="modal-title">\n    <span translate="VARIABLE_VALUE">Value of</span>\n    {{ variable.name }}\n  </h3>\n</div>\n\n<div class="modal-body">\n  <div class="form-group">\n    <label translate="VARIABLE_VALUE_INFO">Value Info</label>\n  </div>\n  <div class="form-group">\n    {{ \'VARIABLE_OBJECT_TYPE_NAME\' | translate }}:\n    <code class="variable-type">{{ type }}</code>\n  </div>\n  <div class="form-group">\n    {{ \'VARIABLE_SERIALIZATION_DATA_FORMAT\' | translate }}:\n    <code class="variable-type">{{ dataFormat }}</code>\n  </div>\n\n  <div class="form-group">\n    <label translate="VARIABLE_VALUE">Value</label>\n  </div>\n\n   <ul class="nav nav-tabs">\n    <li ng-class="{ active: selectedTab === \'serialized\' }">\n      <a href ng-click="selectTab(\'serialized\')">{{ \'SERIALIZED\' | translate }}</a>\n    </li>\n    <li ng-class="{ active: selectedTab === \'deserialized\' }">\n      <a href ng-click="selectTab(\'deserialized\')">{{ \'DESERIALIZED\' | translate }}</a>\n    </li>\n  </ul>\n\n  <div ng-show="selectedTab === \'serialized\'" class="tab-content">\n    <textarea disabled\n              ng-model="value"\n              rows="10"\n              class="form-control input-xxlarge">\n    </textarea>\n  </div>\n  <div ng-show="selectedTab === \'deserialized\'" class="tab-content">\n    <div class="alert alert-warning"\n         role="alert" \n         ng-show="deserializationError">\n      <strong>{{ \'DESERIALIZATION_ERROR\' | translate }}</strong>:\n      {{ deserializationError }}\n    </div>\n    <div ng-show="!deserializationError">\n      <textarea disabled\n                ng-model="valueDeserialized"\n                rows="10"\n                class="form-control input-xxlarge">\n      </textarea>\n    </div>\n  </div>\n\n</div>\n\n<div class="modal-footer">\n  <div class="row row-action">\n    <div class="col-xs-12">\n      <button class="btn btn-xs btn-link"\n              type="submit"\n              ng-click="$dismiss()"\n              translate="CLOSE">Close</button>\n    </div>\n  </div>\n</div>\n'}),define("scripts/variable/directives/cam-tasklist-variables",["angular","text!./cam-tasklist-variables.html","text!../modals/cam-tasklist-variables-detail-modal.html"],function(n,e,t){"use strict";return["$modal","$window","Uri",function(a,i,s){return{template:e,scope:{variables:"=",filterProperties:"="},link:function(e){e.variableDefinitions=[],e.variablesByName={},e.expanded=!1,e.shownVariablesCount=0,e.toggle=function(n){e.expanded=!e.expanded,n&&n.preventDefault&&n.preventDefault(),n.stopPropagation()},e.showValue=function(n,e){e.preventDefault(),e.stopPropagation(),a.open({template:t,windowClass:"variable-modal-detail",resolve:{details:function(){return n}},controller:"camTasklistVariablesDetailsModalCtrl"})},e.download=function(n,e){e.preventDefault(),e.stopPropagation();var t=n._links.self.href+"/data";t=s.appUri("engine://engine/:engine"+t),i.open(t,"download")},e.filterProperties&&(e.variableDefinitions=e.filterProperties.variables||{},n.forEach(e.variables,function(n){e.variablesByName[n.name]=n}),e.shownVariablesCount=Object.keys(e.filterProperties.showUndefinedVariable?e.variableDefinitions:e.variablesByName).length)}}}]}),define("scripts/variable/modals/cam-tasklist-variables-detail-modal",["angular"],function(n){"use strict";return["$scope","$http","Uri","details",function(n,e,t,a){switch(n.$on("$locationChangeSuccess",function(){n.$dismiss()}),n.value=null,n.valueDeserialized=null,n.deserializationError=null,n.type=null,n.dataFormat=null,n.variable=a,n.selectedTab="serialized",n.variable.type){case"Object":n.type=n.variable.valueInfo.objectTypeName,n.value=n.variable.value,n.dataFormat=n.variable.valueInfo.serializationDataFormat,e({method:"GET",url:t.appUri("engine://engine/:engine"+n.variable._links.self.href)}).success(function(e,t){n.valueDeserialized=JSON.stringify(e.value)}).error(function(e,t){n.deserializationError=e.message});break;default:n.value=n.variable.value}n.selectTab=function(e){n.selectedTab=e}}]}),function(){"use strict";function n(n,e){return n.module("angularMoment",[]).constant("angularMomentConfig",{preprocess:null,timezone:"",format:null,statefulFilters:!0}).constant("moment",e).constant("amTimeAgoConfig",{withoutSuffix:!1,serverTime:null,titleFormat:null}).directive("amTimeAgo",["$window","moment","amMoment","amTimeAgoConfig","angularMomentConfig",function(e,t,a,i,s){return function(r,o,l){function c(){var n;if(i.serverTime){var e=(new Date).getTime(),a=e-y+i.serverTime;n=t(a)}else n=t();return n}function d(){g&&(e.clearTimeout(g),g=null)}function u(n){if(o.text(n.from(c(),k)),b&&!o.attr("title")&&o.attr("title",n.local().format(b)),!D){var t=Math.abs(c().diff(n,"minute")),a=3600;1>t?a=1:60>t?a=30:180>t&&(a=300),g=e.setTimeout(function(){u(n)},1e3*a)}}function p(n){w&&o.attr("datetime",n)}function f(){if(d(),m){var n=a.preprocessDate(m,E,h);u(n),p(n.toISOString())}}var m,v,g=null,h=s.format,k=i.withoutSuffix,b=i.titleFormat,y=(new Date).getTime(),E=s.preprocess,I=l.amTimeAgo.replace(/^::/,""),D=0===l.amTimeAgo.indexOf("::"),w="TIME"===o[0].nodeName.toUpperCase();v=r.$watch(I,function(n){return"undefined"==typeof n||null===n||""===n?(d(),void(m&&(o.text(""),p(""),m=null))):(m=n,f(),void(void 0!==n&&D&&v()))}),n.isDefined(l.amWithoutSuffix)&&r.$watch(l.amWithoutSuffix,function(n){"boolean"==typeof n?(k=n,f()):k=i.withoutSuffix}),l.$observe("amFormat",function(n){"undefined"!=typeof n&&(h=n,f())}),l.$observe("amPreprocess",function(n){E=n,f()}),r.$on("$destroy",function(){d()}),r.$on("amMoment:localeChanged",function(){f()})}}]).service("amMoment",["moment","$rootScope","$log","angularMomentConfig",function(e,t,a,i){this.preprocessors={utc:e.utc,unix:e.unix},this.changeLocale=function(a){var i=e.locale(a);return n.isDefined(a)&&t.$broadcast("amMoment:localeChanged"),i},this.preprocessDate=function(t,s,r){return n.isUndefined(s)&&(s=i.preprocess),this.preprocessors[s]?this.preprocessors[s](t,r):(s&&a.warn("angular-moment: Ignoring unsupported value for preprocess: "+s),!isNaN(parseFloat(t))&&isFinite(t)?e(parseInt(t,10)):e(t,r))},this.applyTimezone=function(n){var e=i.timezone;return n&&e&&(n.tz?n=n.tz(e):a.warn("angular-moment: timezone specified but moment.tz() is undefined. Did you forget to include moment-timezone.js?")),n}}]).filter("amCalendar",["moment","amMoment","angularMomentConfig",function(n,e,t){function a(t,a){if("undefined"==typeof t||null===t)return"";t=e.preprocessDate(t,a);var i=n(t);return i.isValid()?e.applyTimezone(i).calendar():""}return a.$stateful=t.statefulFilters,a}]).filter("amDateFormat",["moment","amMoment","angularMomentConfig",function(n,e,t){function a(t,a,i){if("undefined"==typeof t||null===t)return"";t=e.preprocessDate(t,i);var s=n(t);return s.isValid()?e.applyTimezone(s).format(a):""}return a.$stateful=t.statefulFilters,a}]).filter("amDurationFormat",["moment","angularMomentConfig",function(n,e){function t(e,t,a){return"undefined"==typeof e||null===e?"":n.duration(e,t).humanize(a)}return t.$stateful=e.statefulFilters,t}]).filter("amTimeAgo",["moment","amMoment","angularMomentConfig",function(n,e,t){function a(t,a,i){if("undefined"==typeof t||null===t)return"";t=e.preprocessDate(t,a);var s=n(t);return s.isValid()?e.applyTimezone(s).fromNow(i):""}return a.$stateful=t.statefulFilters,a}])}"function"==typeof define&&define.amd?define("angular-moment",["angular","moment"],n):"undefined"!=typeof module&&module&&module.exports?n(angular,require("moment")):n(angular,window.moment)}(),define("scripts/variable/index",["angular","./directives/cam-tasklist-variables","./modals/cam-tasklist-variables-detail-modal","angular-moment"],function(n,e,t){"use strict";var a=n.module("cam.tasklist.variables",["ui.bootstrap","angularMoment"]);return a.directive("camTasklistVariables",e),a.controller("camTasklistVariablesDetailsModalCtrl",t),a}),define("scripts/tasklist/controller/cam-tasklist-list-ctrl",[],function(){"use strict";return["$scope","Views",function(n,e){n.tasklistVars={read:["tasklistData"]},n.tasklistPlugins=e.getProviders({component:"tasklist.list"})}]}),define("text!scripts/tasklist/directives/cam-tasklist-sorting-choices.html",[],function(){return'<span class="sorting-label hidden-xs hidden-sm hidden-md"\n      translate="SORT_BY"></span>\n\n<ol class="sorting-choice list-inline">\n  <li ng-repeat="(index, sorting) in sortings"\n      class="sorting-choice dropdown"\n      is-open="openDropdowns[index]"\n      on-toggle="openDropdown(index, open)">\n    <a class="glyphicon glyphicon-minus-sign"\n       ng-if="sortings.length > 1"\n       ng-click="removeSorting(index)"\n       tooltip-placement="bottom"\n       tooltip="{{ \'REMOVE_SORTING\' | translate }}"></a>\n\n    <a href\n       tabindex="-1"\n       class="dropdown-toggle">\n      <span class="sort-by">{{ byLabel(index) }}</span>\n    </a>\n\n    <a href\n       tabindex="-1"\n       tooltip="{{ (sorting.order === \'desc\' ? \'DESC\' : \'ASC\') | translate }}"\n       class="sort-direction glyphicon"\n       ng-class="sorting.order === \'asc\' ? \'glyphicon-chevron-up\' : \'glyphicon-chevron-down\'"\n       ng-click="changeOrder(index)"></a>\n\n    <ul cam-sorting-dropdown\n        options="availableOptions"\n        click-handler="changeSorting(index, id, type, value)"\n        reset-function="resetFunctions[index]"\n        change="true">\n    </ul>\n  </li>\n\n  <li class="dropdown new-sort"\n      is-open="openDropdownNew"\n      on-toggle="openDropdown(-1, open)">\n    <a href\n       class="dropdown-toggle">\n      <span class="glyphicon glyphicon-plus-sign"\n            tooltip="{{ \'ADD_SORT_BY\' | translate }}"></span>\n      <span class="hidden-xs hidden-sm hidden-md"\n            translate="ADD_SORT_BY"></span>\n    </a>\n\n    <ul cam-sorting-dropdown\n        options="availableOptions"\n        click-handler="addSorting(id, type, value)"\n        reset-function="resetFunctions[-1]">\n    </ul>\n  </li>\n</ol>\n'}),define("scripts/tasklist/directives/cam-tasklist-sorting-choices",["angular","text!./cam-tasklist-sorting-choices.html"],function(n,e){"use strict";function t(n){return JSON.stringify(n.map(function(n){var e={sortBy:n.by,sortOrder:n.order
};if(n.by.indexOf("Variable")>-1){if(!n.parameters)throw new Error("Variable sorting needs parameters");e.parameters=n.parameters}return e}))}return["search","$translate","$location","$timeout",function(a,i,s,r){return{restrict:"A",scope:{tasklistData:"="},template:e,controller:[function(){}],link:function(e,o){function l(){p&&r.cancel(p),p=r(function(){var n=o.parents(".columns"),e=n.find(".cell.top"),t=n.find(".cell.content"),a=d.hasClass("list-column-close");if(o.css("height","auto"),a){var i=parseInt(e.css("min-height"),10);return e.css("height",i),void t.css("top",i)}var s=o.height(),r=o.parent();r.height(s);var l=s;e.height(l),t.css("top",l+30),p=null},100)}function c(n){var e=n.parent().position().left,t=n.outerWidth()+e;t>o.outerWidth()&&n.css("left",o.outerWidth()-t+"px")}var d=n.element("body"),u=o.find(".new-sort .dropdown-menu");e.sortings=[{order:"desc",by:"created"}],e.openDropdowns=[],e.openDropdownNew=!1,e.sortedOn=[];var p;e.$on("layout:change",l),e.uniqueProps={priority:i.instant("PRIORITY"),created:i.instant("CREATION_DATE"),dueDate:i.instant("DUE_DATE"),followUpDate:i.instant("FOLLOW_UP_DATE"),nameCaseInsensitive:i.instant("TASK_NAME"),assignee:i.instant("ASSIGNEE")},e.byLabel=function(n){if(!e.sortings[n])return"";var t=e.sortings[n].by;return e.uniqueProps[t]?e.uniqueProps[t]:e.sortings[n]&&e.sortings[n].parameters?e.sortings[n].parameters.variable:""};var f=e.tasklistData.newChild(e);f.observe("taskListQuery",function(t){if(t){var a=JSON.parse((s.search()||{}).sorting||"[]");e.sortedOn=[],e.openDropdowns=[],e.availableOptions=n.copy(e.uniqueProps),e.sortings=a.map(function(n){e.sortedOn.push(n.sortBy),e.openDropdowns.push(!1),delete e.availableOptions[n.sortBy];var t={order:n.sortOrder,by:n.sortBy};return n.parameters&&(t.parameters=n.parameters),t}),e.sortings.length||e.addSorting("created"),l()}}),e.$watch("sortings.length",function(n,t){n!==t&&e.updateSortings()}),e.$watch("sortings",l,!0),e.$watch("openDropdowns",function(e){var t=e.indexOf(!0),a=o.find("li.sorting-choice .dropdown-menu").css("left","auto");t>-1&&a[t]&&c(n.element(a[t]))},!0),e.$watch("openDropdownNew",function(n){n?c(u):u.css("left","auto")}),e.changeSorting=function(n,t,a,i){e.sortings[n].by=t,delete e.sortings[n].parameters,a&&(e.sortings[n].parameters={variable:i,type:a}),e.updateSortings()},e.resetFunctions=[],e.openDropdown=function(n,t){if(t){var a=e.sortings[n];a?e.resetFunctions[n](a.by,a.parameters&&a.parameters.type,a.parameters&&a.parameters.variable):e.resetFunctions[n]()}},e.updateSortings=function(){e.openDropdowns=[],e.sortedOn=e.sortings.map(function(n){return e.openDropdowns.push(!1),n.by}),a.updateSilently({sorting:t(e.sortings)}),f.changed("taskListQuery"),l()},e.addSorting=function(n,t,a){var i={order:"desc",by:n};t&&(i.parameters={variable:a,type:t}),e.sortings.push(i),e.updateSortings()},e.removeSorting=function(n){e.sortings.splice(n,1),e.updateSortings()},e.changeOrder=function(n){e.sortings[n].order="asc"===e.sortings[n].order?"desc":"asc",e.updateSortings()}}}}]}),define("text!scripts/tasklist/directives/cam-tasklist-sorting-dropdown.html",[],function(){return'<ul class="dropdown-menu">\n  <!-- single time selectable -->\n  <li ng-repeat="(name, label) in options">\n    <a tabindex="-1"\n       translate="{{ label }}"\n       ng-click="handleClick($event, name)">\n    </a>\n  </li>\n\n  <li class="divider"\n      ng-if="hasOptions()"></li>\n\n  <!-- multiple times selectable -->\n  <li ng-repeat="(name, label) in sortableVariables"\n      ng-click="showInputs($event, name)"\n      ng-class="{\'active\': name === focusedOn}">\n    <a translate="{{ label }}"\n       tabindex="-1"></a>\n\n    <div ng-show="name === focusedOn"\n         cam-sorting-inputs\n         change="change"\n         apply-handler="handleClick($event, name)"\n         variable="variable"\n         reset-function="resetInputs[name]"></div>\n  </li>\n\n</ul>\n'}),define("scripts/tasklist/directives/cam-tasklist-sorting-dropdown",["angular","text!./cam-tasklist-sorting-dropdown.html"],function(n,e){"use strict";return["$translate",function(n){return{restrict:"A",replace:!0,template:e,scope:{options:"=",clickHandler:"&",change:"&",resetFunction:"="},link:function(e){e.change=e.$eval(e.change),e.variable={varName:"",varType:"Integer"},e.hasOptions=function(){return e.options&&Object.keys(e.options).length>0},e.resetInputs={},e.resetFunction=function(n,t,a){e.sortableVariables[n]?(e.focusedOn=n,e.variable.varType=t,e.variable.varName=a):(e.focusedOn=null,e.variable.varType="Integer",e.variable.varName="")},e.handleClick=function(n,t){e.sortableVariables[t]?e.clickHandler({$event:n,id:t,type:e.variable.varType,value:e.variable.varName}):e.clickHandler({$event:n,id:t})},e.sortableVariables={processVariable:n.instant("PROCESS_VARIABLE"),executionVariable:n.instant("EXECUTION_VARIABLE"),taskVariable:n.instant("TASK_VARIABLE"),caseExecutionVariable:n.instant("CASE_EXECUTION_VARIABLE"),caseInstanceVariable:n.instant("CASE_INSTANCE_VARIABLE")},e.showInputs=function(n,t){n.preventDefault(),n.stopPropagation(),e.focusedOn=t}}}}]}),define("text!scripts/tasklist/directives/cam-tasklist-sorting-inputs.html",[],function(){return'<div class="variable-inputs">\n  <div class="form-group">\n    <input type="text"\n           placeholder="{{ \'VARIABLE_NAME\' | translate }}"\n           class="form-control"\n           ng-model="variable.varName"\n           autofocus />\n  </div>\n\n  <div class="form-group">\n    <select class="form-control"\n            ng-model="variable.varType">\n      <option ng-repeat="(varType, varText) in variableTypes"\n              ng-selected="varType === variable.varType"\n              value="{{ varType }}">{{ varText }}</option>\n    </select>\n  </div>\n\n  <div class="form-group actions">\n    <button ng-click="applySorting($event)"\n            ng-disabled="!variable"\n            class="btn btn-primary btn-sm">\n      {{ (change ? \'CHANGE\' : \'ADD\') | translate }}\n    </button>\n  </div>\n</div>\n'}),define("scripts/tasklist/directives/cam-tasklist-sorting-inputs",["angular","text!./cam-tasklist-sorting-inputs.html"],function(n,e){"use strict";return["$translate",function(n){return{restrict:"AC",replace:!0,template:e,scope:{change:"=",applyHandler:"&",resetFunction:"=",variable:"="},controller:["$scope",function(e){e.variableTypes={Boolean:n.instant("BOOLEAN"),Double:n.instant("DOUBLE"),Date:n.instant("DATE"),Integer:n.instant("INTEGER"),Long:n.instant("LONG"),Short:n.instant("SHORT"),String:n.instant("STRING")},e.applySorting=function(n){e.applyHandler({$event:n})}}]}}]}),define("text!scripts/tasklist/directives/cam-tasklist-tasks.html",[],function(){return'<div ng-show="!state.$loaded && !state.$error"\n     class="loader">\n  <span class="animate-spin glyphicon glyphicon-refresh"></span>\n  {{ \'LOADING\' | translate }}\n</div>\n\n<div ng-show="state.$error" class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign"></span>\n  <strong class="status">{{ \'FAILURE\' | translate }}:</strong>\n  <span class="message">{{ \'TASK_LIST_LOADING_FAILURE\' | translate }}</span>\n</div>\n\n<div ng-show="state.$loaded && !state.$error">\n\n  <div ng-hide="totalItems"\n       class="well">\n    <span class="glyphicon glyphicon-info-sign"></span>\n    {{ \'NO_MATCHING_TASK\' | translate }}\n  </div>\n\n  <div ng-show="totalItems && !tasks" class="well">\n    <span class="glyphicon glyphicon-info-sign"></span>\n    {{ \'RESTRICTION_NOTICE\' | translate }}\n    <a ng-click="resetPage()">{{ \'RESET_PAGE\' | translate }}</a>\n  </div>\n\n  <div ng-show="totalItems"\n       tabindex="0"\n       ng-keydown="handleKeydown($event)">\n    <ol class="tasks-list list-unstyled">\n      <li class="task"\n          ng-repeat="(delta, task) in tasks"\n          ng-class="{active: currentTaskId === task.id}">\n\n        <div class="priority"\n             tooltip-placement="right"\n             tooltip="{{ \'PRIORITY\' | translate }}">\n          {{ task.priority }}\n        </div>\n\n        <div class="clickable"\n             ng-click="focus($event, task)">\n          <div class="names">\n            <h4 class="task">\n              <a ng-href="{{ getHrefUrl(task) }}"\n                 ng-click="focus($event, task)">\n                {{ task.name || task.taskDefinitionKey || task.id }}\n              </a>\n            </h4>\n\n            <h6 class="process-definition"\n                ng-if="task.processDefinitionId">\n              {{ task._embedded.processDefinition[0].name || task._embedded.processDefinition[0].key }}\n            </h6>\n\n            <h6 class="case-definition"\n                ng-if="task.caseDefinitionId">\n              {{ task._embedded.caseDefinition[0].name || task._embedded.caseDefinition[0].key }}\n            </h6>\n          </div>\n\n\n          <div class="row"\n               ng-click="focus($event, task)">\n            <ul class="col-sm-12 col-md-6 dates list-inline">\n              <li class="creation-date">\n                <span tooltip-placement="top"\n                      tooltip="{{ \'CREATION_DATE\' | translate }}"\n                      class="glyphicon glyphicon-bookmark"></span>\n                <span tooltip-placement="top"\n                      tooltip="{{ task.created | camDate:\'long\' }}"\n                      am-time-ago="task.created">{{ task.created }}</span>\n              </li>\n\n              <li class="followup-date"\n                  ng-if="!!task.followUp"\n                  ng-class="{overdue: task.followUp && (task.followUp < now) }">\n                <span tooltip-placement="top"\n                      tooltip="{{ \'FOLLOW_UP_DATE\' | translate }}"\n                      class="glyphicon glyphicon-calendar"></span>\n                <span tooltip-placement="top"\n                      tooltip="{{ task.followUp | camDate:\'long\' }}"\n                      am-time-ago="task.followUp">{{ task.followUp }}</span>\n              </li>\n\n              <li class="due-date"\n                  ng-if="!!task.due"\n                  ng-class="{overdue: task.due && (task.due < now) }">\n                <span tooltip-placement="top"\n                      tooltip="{{ \'DUE_DATE\' | translate }}"\n                      class="glyphicon glyphicon-bell"></span>\n                <span tooltip-placement="top"\n                      tooltip="{{ task.due | camDate:\'long\' }}"\n                      am-time-ago="task.due">{{ task.due }}</span>\n              </li>\n            </ul>\n\n            <ul class="col-sm-12 col-md-6 actors list-inline"\n                ng-if="!!task.assignee">\n              <li class="assignee">\n                <span tooltip-placement="top"\n                      tooltip="{{ \'ASSIGNEE\' | translate }}"\n                      class="glyphicon glyphicon-user"></span>\n                <span ng-if="assignees[task.assignee] && ( assignees[task.assignee].firstName || assignees[task.assignee].lastName )">\n                  <span tooltip-placement="top"\n                        tooltip="{{ assignees[task.assignee].firstName }} {{ assignees[task.assignee].lastName }} ({{ task.assignee }})">\n                    {{ assignees[task.assignee].firstName }} {{ assignees[task.assignee].lastName }}\n                  </span>\n                </span>\n                <span ng-if="!(assignees[task.assignee] && ( assignees[task.assignee].firstName || assignees[task.assignee].lastName ))">\n                  <span tooltip-placement="top"\n                        tooltip="{{ task.assignee }}">\n                    {{ task.assignee }}\n                  </span>\n                </span>\n              </li>\n            </ul>\n          </div>\n\n          <div cam-tasklist-variables\n               filter-properties="filterProperties"\n               variables="task._embedded.variable"\n               class="row variables" />\n       </div>\n      </li>\n    </ol>\n  </div>\n</div>\n\n<pagination ng-show="state.$loaded && totalItems > pageSize"\n            total-items="totalItems"\n            items-per-page="pageSize"\n            max-size="5"\n            class="pagination-sm"\n            boundary-links="true"\n            ng-model="pageNum"\n            ng-change="pageChange()"\n            next-text="&rsaquo;"\n            last-text="&raquo;"\n            previous-text="&lsaquo;"\n            first-text="&laquo;"></pagination>\n'}),define("scripts/tasklist/directives/cam-tasklist-tasks",["angular","moment","text!./cam-tasklist-tasks.html"],function(n,e,t){"use strict";var a=n.element;return[function(){return{restrict:"A",scope:{tasklistData:"="},template:t,controller:["$scope","$location","search","$timeout","$element",function(e,t,i,s,r){function o(n){i.updateSilently(n)}var l=!1;e.pageNum=1,e.pageSize=null,e.totalItems=0,e.now=(new Date).toJSON(),e.filterProperties=null;var c=e.tasklistData.newChild(e);e.query={},e.assignees={};var d=function(n){for(var t=0;t<n.length;t++)e.assignees[n[t].id]=n[t]};e.state=c.observe("taskList",function(n){e.totalItems=n.count,e.tasks=n._embedded.task,n._embedded.assignee&&d(n._embedded.assignee),l&&(e.focus(null,e.tasks["first"===l?0:e.pageSize-1]),s(function(){r.find("div[ng-keydown]").trigger("focus").find("li.active")[0].scrollIntoView(!1)},0),l=!1)}),c.observe("taskListQuery",function(t){t&&(e.query=n.copy(t),e.pageSize=e.query.maxResults,e.pageNum=e.query.firstResult/e.pageSize+1)}),c.observe("taskId",function(n){e.currentTaskId=n.taskId}),c.observe(["currentFilter",function(n){n&&(e.filterProperties=null!==n?n.properties:null)}]),e.focus=function(n,a){n&&n.preventDefault();var i=a.id;c.set("taskId",{taskId:i}),e.currentTaskId=i;var s=t.search()||{};s.task=i,o(s)};var u=function(){for(var n=0;n<e.tasks.length-1;n++)if(e.tasks[n].id===e.currentTaskId)return e.focus(null,e.tasks[n+1]);e.pageNum<Math.ceil(e.totalItems/e.pageSize)&&(e.pageNum++,l="first",e.pageChange())},p=function(){for(var n=1;n<e.tasks.length;n++)if(e.tasks[n].id===e.currentTaskId)return e.focus(null,e.tasks[n-1]);e.pageNum>1&&(e.pageNum--,l="last",e.pageChange())};e.handleKeydown=function(n){40===n.keyCode?(n.preventDefault(),u(n)):38===n.keyCode&&(n.preventDefault(),p()),s(function(){var e=a(n.target).find("li.active")[0];e&&e.scrollIntoView(!1)})},e.getHrefUrl=function(n){var e="#/?task="+n.id,a=t.search().detailsTab;return a&&(e=e+"&detailsTab="+a),e},e.pageChange=function(){o({page:e.pageNum}),c.changed("taskListQuery")},e.resetPage=function(){o({page:1}),c.changed("taskListQuery")}}]}}]}),define("scripts/tasklist/filters/cam-query-component",["angular","moment"],function(n,e){"use strict";return["$filter",function(n){function e(n){return n.match(t)}var t=/(\d\d\d\d)-(\d\d)-(\d\d)T(\d\d):(\d\d):(\d\d)(?:.(\d\d\d)| )?$/,a=n("camDate");return function(n){return n&&e(n)?a(n,"abbr"):n?n:"??"}}]}),define("text!scripts/tasklist/plugins/cam-tasklist-search-plugin.html",[],function(){return'<div cam-widget-search\n     cam-widget-search-valid-searches="searches"\n     cam-widget-search-translations="translations"\n     cam-widget-search-types="types"\n     cam-widget-search-operators="operators"\n/>\n'}),define("text!scripts/tasklist/plugins/cam-tasklist-search-plugin-config.json",[],function(){return'{\n  "types": [\n    {\n      "id": {\n        "key": "processVariables",\n        "value": "PROCESS_VARIABLE"\n      },\n      "extended": true,\n      "allowDates": true\n    },\n    {\n      "id": {\n        "key": "taskVariables",\n        "value": "TASK_VARIABLE"\n      },\n      "extended": true,\n      "allowDates": true\n    },\n    {\n      "id": {\n        "key": "caseInstanceVariables",\n        "value": "CASE_VARIABLE"\n      },\n      "extended": true,\n      "allowDates": true\n    },\n    {\n      "id": {\n        "key": "processInstanceId",\n        "value": "PROCESS_INSTANCE_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "processInstanceBusinessKey",\n        "value": "PROCESS_INSTANCE_BUSINESS_KEY"\n      },\n      "operators": [\n        {\n          "key": "Like",\n          "value": "LIKE"\n        },{\n          "key": "eq",\n          "value": "="\n        }\n\n      ]\n    },    {\n      "id": {\n        "key": "processDefinitionId",\n        "value": "PROCESS_DEFINITION_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "processDefinitionKey",\n        "value": "PROCESS_DEFINITION_KEY"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "processDefinitionName",\n        "value": "PROCESS_DEFINITION_NAME"\n      },\n      "operators": [\n        {\n          "key": "Like",\n          "value": "LIKE"\n        },{\n          "key": "eq",\n          "value": "="\n        }\n\n      ]\n    },    {\n      "id": {\n        "key": "executionId",\n        "value": "EXECUTION_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "caseInstanceId",\n        "value": "CASE_INSTANCE_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "caseInstanceBusinessKey",\n        "value": "CASE_INSTANCE_BUSINESS_KEY"\n      },\n      "operators": [\n        {\n          "key": "Like",\n          "value": "LIKE"\n        },{\n          "key": "eq",\n          "value": "="\n        }\n\n      ]\n    },    {\n      "id": {\n        "key": "caseDefinitionId",\n        "value": "CASE_DEFINITION_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "caseDefinitionKey",\n        "value": "CASE_DEFINITION_KEY"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "caseDefinitionName",\n        "value": "CASE_DEFINITION_NAME"\n      },\n      "operators": [\n        {\n          "key": "Like",\n          "value": "LIKE"\n        },{\n          "key": "eq",\n          "value": "="\n        }\n\n      ]\n    },    {\n      "id": {\n        "key": "caseExecutionId",\n        "value": "CASE_EXECUTION_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "assignee",\n        "value": "ASSIGNEE"\n      },\n      "operators": [\n        {\n          "key": "Like",\n          "value": "LIKE"\n        },{\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "owner",\n        "value": "OWNER"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "candidateGroup",\n        "value": "CANDIDATE_GROUP"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "candidateUser",\n        "value": "CANDIDATE_USER"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "involvedUser",\n        "value": "INVOLVED_USER"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "taskDefinitionKey",\n        "value": "TASK_DEFINITION_KEY"\n      },\n      "operators": [\n        {\n          "key": "Like",\n          "value": "LIKE"\n        },{\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "name",\n        "value": "NAME"\n      },\n      "operators": [\n        {\n          "key": "Like",\n          "value": "LIKE"\n        },{\n          "key": "eq",\n          "value": "="\n        }\n\n      ],\n      "default": true\n    },    {\n      "id": {\n        "key": "description",\n        "value": "DESCRIPTION"\n      },\n      "operators": [\n        {\n          "key": "Like",\n          "value": "LIKE"\n        },{\n          "key": "eq",\n          "value": "="\n        }\n\n      ]\n    },    {\n      "id": {\n        "key": "priority",\n        "value": "PRIORITY"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        },\n        {\n          "key": "max",\n          "value": "<="\n        },\n        {\n          "key": "min",\n          "value": ">="\n        }\n      ]\n    },    {\n      "id": {\n        "key": "due",\n        "value": "DUE_DATE"\n      },\n      "operators": [\n        {\n          "key": "Before",\n          "value": "BEFORE"\n        },\n        {\n          "key": "After",\n          "value": "AFTER"\n        }\n      ],\n      "allowDates": true,\n      "enforceDates": true\n    },    {\n      "id": {\n        "key": "followUp",\n        "value": "FOLLOW_UP_DATE"\n      },\n      "operators": [\n        {\n          "key": "Before",\n          "value": "BEFORE"\n        },\n        {\n          "key": "After",\n          "value": "AFTER"\n        }\n      ],\n      "allowDates": true,\n      "enforceDates": true\n    },    {\n      "id": {\n        "key": "created",\n        "value": "CREATION_DATE"\n      },\n      "operators": [\n        {\n          "key": "Before",\n          "value": "BEFORE"\n        },\n        {\n          "key": "After",\n          "value": "AFTER"\n        }\n      ],\n      "allowDates": true,\n      "enforceDates": true\n    },    {\n      "id": {\n        "key": "delegationState",\n        "value": "DELEGATION_STATE"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    }\n  ],\n  "operators": {\n    "date": [\n      {\n        "key": "lteq",\n        "value": "BEFORE"\n      },\n      {\n        "key": "gteq",\n        "value": "AFTER"\n      }\n    ],\n    "boolean": [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      }\n    ],\n    "object": [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      }\n    ],\n    "number": [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      }\n    ],\n    "string": [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      },\n      {\n        "key": "like",\n        "value": "like"\n      }\n    ],\n    "undefined": [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      },\n      {\n        "key": "like",\n        "value": "like"\n      }\n    ]\n  },\n  "tooltips": {\n    "inputPlaceholder": "SEARCH_PLACEHOLDER",\n    "invalid": "INVALID_SEARCH",\n    "deleteSearch": "DELETE_SEARCH",\n    "type": "TYPE",\n    "name": "PROPERTY",\n    "operator": "OPERATOR",\n    "value": "VALUE"\n  }\n}\n'}),define("scripts/tasklist/plugins/cam-tasklist-search-plugin",["angular","text!./cam-tasklist-search-plugin.html","text!./cam-tasklist-search-plugin-config.json"],function(n,e,t){"use strict";var a=/^[\s]*(\#|\$)\{/,i=JSON.parse(t),s=function(n){return isNaN(n)||""===n.trim()?"true"===n?!0:"false"===n?!1:"NULL"===n?null:0===n.indexOf("'")&&n.lastIndexOf("'")===n.length-1?n.substr(1,n.length-2):n:+n},r=function(n,e){return"Like"===e||"like"===e?"%"+n+"%":n},o=function(n,e,t,i){var s=e;return-1!==["Like","Before","After"].indexOf(t)&&(s+=t),a.test(i)&&-1!==["assignee","owner","candidateGroup","candidateUser","involvedUser"].indexOf(e)&&(s+="Expression"),s},l=["$scope","$translate",function(e,t){e.searches=[],e.translations={},n.forEach(i.tooltips,function(n,a){e.translations[a]=t.instant(n)}),e.types=i.types.map(function(n){return n.id.value=t.instant(n.id.value),n.operators&&(n.operators=n.operators.map(function(n){return n.value=t.instant(n.value),n})),n}),e.operators=i.operators,n.forEach(e.operators.date,function(n){n.value=t.instant(n.value)});var a=e.tasklistData.newChild(e);e.$watch("searches",function(){var t={};t.processVariables=[],t.taskVariables=[],t.caseInstanceVariables=[],n.forEach(e.searches,function(n){"object"==typeof t[n.type.value.key]?t[n.type.value.key].push({name:"object"==typeof n.name.value?n.name.value.key:n.name.value,operator:n.operator.value.key,value:r(s(n.value.value),n.operator.value.key)}):t[o(n,n.type.value.key,n.operator.value.key,n.value.value)]=r(s(n.value.value),n.operator.value.key)}),a.set("searchQuery",t)},!0),a.observe("currentFilter",function(t){n.forEach(e.types,function(n){n.potentialNames=[];for(var e=0;e<(t.properties.variables&&t.properties.variables.length);e++){var a=t.properties.variables[e];n.potentialNames.push({key:a.name,value:a.label+" ("+a.name+")"})}}),n.forEach(e.searches,function(n){n.potentialNames=e.types.filter(function(e){return e.id.key===n.type.value.key})[0].potentialNames})})}],c=function(n){n.registerDefaultView("tasklist.list",{id:"task-search",template:e,controller:l,priority:100})};return c.$inject=["ViewsProvider"],c}),define("scripts/tasklist/index",["angular","./controller/cam-tasklist-list-ctrl","./directives/cam-tasklist-sorting-choices","./directives/cam-tasklist-sorting-dropdown","./directives/cam-tasklist-sorting-inputs","./directives/cam-tasklist-tasks","./filters/cam-query-component","./plugins/cam-tasklist-search-plugin"],function(n,e,t,a,i,s,r,o){"use strict";var l=n.module("cam.tasklist.tasklist",["ui.bootstrap"]);return l.controller("camListCtrl",e),l.directive("camSortingChoices",t),l.directive("camSortingDropdown",a),l.directive("camSortingInputs",i),l.directive("camTasks",s),l.filter("camQueryComponent",r),l.config(o),l}),define("text!scripts/task/directives/cam-tasklist-task.html",[],function(){return'<div ng-show="!taskState.$loaded"\n     class="loader">\n  <span class="animate-spin glyphicon glyphicon-refresh"></span>\n  {{ \'LOADING\' | translate }}\n</div>\n\n<div ng-show="taskState.$loaded">\n  <div ng-hide="task">\n    <div class="no-task well">\n      <span class="glyphicon glyphicon-info-sign"></span>\n      {{ \'SELECT_TASK_IN_LIST\' | translate }}\n    </div>\n  </div>\n\n  <section ng-if="task" class="task-card">\n    <header class="row">\n      <div class="col-xs-12">\n        <div class="names">\n          <h2 class="task">{{ task.name || task.taskDefinitionKey || task.id }}</h2>\n          <h4 class="process-definition"\n              ng-if="task.processDefinitionId">\n            {{ task._embedded.processDefinition[0].name || task._embedded.processDefinition[0].key }}\n          </h4>\n          <h4 class="case-definition"\n              ng-if="task.caseDefinitionId">\n            {{ task._embedded.caseDefinition[0].name || task._embedded.caseDefinition[0].key }}\n          </h4>\n        </div>\n\n        <div cam-tasklist-task-meta\n             task-data="taskData"\n             error-handler="errorHandler"></div>\n      </div>\n    </header>\n\n    <div class="row tabbed-content">\n\n      <div ng-show="taskDetailTabs.length" class="col-xs-12">\n        <ul class="nav nav-tabs">\n          <li ng-class="{ active: selectedTaskDetailTab == taskDetailTab }" ng-repeat="taskDetailTab in taskDetailTabs">\n            <a href ng-click="selectTaskDetailTab(taskDetailTab)">{{ taskDetailTab.label | translate }}</a>\n          </li>\n        </ul>\n\n        <div class="tab-content">\n          <view provider="selectedTaskDetailTab" vars="taskVars" />\n        </div>\n\n      </div>\n    </div>\n\n  </section>\n\n</div>\n\n\n'}),define("scripts/task/directives/cam-tasklist-task",["angular","text!./cam-tasklist-task.html","jquery"],function(n,e,t){"use strict";(function(){function n(){this.errorProvider=null}return n})();return[function(){return{restrict:"A",scope:{tasklistData:"="},template:e,controller:["$scope","$q","$location","$translate","Notifications","camAPI","Views","search",function(e,t,a,i,s,r,o,l){function c(n,t){i(n).then(function(n){s.addError({status:n,message:t?t.message:"",exclusive:!0,scope:e})})}function d(n){if(n){if(-1!==n.indexOf("task is null")||-1!==n.indexOf("No matching task"))return"TASK_NOT_EXIST";if(-1!==n.indexOf("is suspended"))return"INSTANCE_SUSPENDED"}return n}function u(e){if(e){var t=a.search()||{};delete t.task,delete t.detailsTab,a.search(n.copy(t))}else f.set("taskId",{taskId:null});f.changed("taskList")}function p(n){var t=l().detailsTab;if(n&&n.length){if(t){var a=o.getProvider({component:"tasklist.task.detail",id:t});if(a&&-1!=n.indexOf(a))return void(e.selectedTaskDetailTab=a)}l.updateSilently({detailsTab:null}),e.selectedTaskDetailTab=n[0]}}var f=(r.resource("task"),e.taskData=e.tasklistData.newChild(e));e.errorHandler=function(n,e){var t=d(e.message);return"TASK_NOT_EXIST"===t||"INSTANCE_SUSPENDED"===t?i(t).then(function(t){e.message=t,c(n,e),u(!0)}):void c(n,e)},e.$watch("taskState.$error",function(n){if(n){var e=d(n.message);c(e,n),u(!1)}}),f.provide("assignee",["task",function(n){if(n&&n._embedded&&n._embedded.identityLink)for(var e=0;e<n._embedded.identityLink.length;e++)if("assignee"===n._embedded.identityLink[e].type)return n._embedded.identityLink[e]._embedded.user?n._embedded.identityLink[e]._embedded.user[0]:{id:n._embedded.identityLink[e].userId};return null}]),f.provide("groups",["task",function(n){var e=[];if(n&&n._embedded&&n._embedded.identityLink)for(var t=0;t<n._embedded.identityLink.length;t++)"candidate"===n._embedded.identityLink[t].type&&null!==n._embedded.identityLink[t].groupId&&(n._embedded.identityLink[t]._embedded.group?e.push(n._embedded.identityLink[t]._embedded.group[0]):e.push({id:n._embedded.identityLink[t].groupId}));return e}]),f.provide("isAssignee",["assignee",function(n){return!!n&&n.id===e.$root.authentication.name}]),f.provide("processDefinition",["task",function(n){return n&&n._embedded&&n._embedded.processDefinition?n._embedded.processDefinition[0]:null}]),f.provide("caseDefinition",["task",function(n){return n&&n._embedded&&n._embedded.caseDefinition?n._embedded.caseDefinition[0]:null}]),e.taskState=f.observe("task",function(n){e.task=n}),f.observe("isAssignee",function(n){e.isAssignee=n}),e.taskVars={read:["task","taskData","errorHandler"]},e.taskDetailTabs=o.getProviders({component:"tasklist.task.detail"}),e.selectedTaskDetailTab=e.taskDetailTabs[0],e.selectTaskDetailTab=function(n){e.selectedTaskDetailTab=n,l.updateSilently({detailsTab:n.id})},p(e.taskDetailTabs),e.$on("$routeChanged",function(){p(e.taskDetailTabs)})}]}}]}),define("text!scripts/task/directives/cam-tasklist-task-meta.html",[],function(){return'<ul class="meta list-inline dates times">\n\n  <li>\n\n    <span cam-widget-inline-field\n          class="followup-date"\n          ng-class="{overdue: task.followUp && (task.followUp < now) }"\n          type="datetime"\n          change="saveFollowUpDate(this)"\n          on-start-editing="startEditingFollowUpDate(this)"\n          on-cancel-editing="cancelEditingFollowUpDate(this)"\n          value="task.followUp">\n      <span tooltip-placement="top"\n            tooltip="{{ \'FOLLOW_UP_DATE\' | translate }}"\n            class="glyphicon glyphicon-calendar"></span>\n\n      <span ng-if="task.followUp"\n            tooltip-placement="top"\n            tooltip="{{ task.followUp | camDate:\'long\' }}"\n            am-time-ago="task.followUp">{{ task.followUp }}</span>\n      <a href\n         ng-if="!task.followUp"\n         translate="SET_FOLLOW_UP_DATE">Set follow up</a>\n    </span>\n\n    <a href\n       ng-if="task.followUp && !editingState.followUp"\n       tooltip-placement="top"\n       tooltip="{{ \'RESET_FOLLOW_UP_DATE\' | translate }}"\n       ng-click="resetFollowUpDate()"\n       class="reset-follow-up-date glyphicon glyphicon-remove">\n    </a>\n\n  </li>\n\n  <li>\n\n    <span cam-widget-inline-field\n          class="due-date"\n          ng-class="{overdue: task.due && (task.due < now) }"\n          type="datetime"\n          change="saveDueDate(this)"\n          on-start-editing="startEditingDueDate(this)"\n          on-cancel-editing="cancelEditingDueDate(this)"\n          value="task.due">\n\n      <span tooltip-placement="top"\n            tooltip="{{ \'DUE_DATE\' | translate }}"\n            class="glyphicon glyphicon-bell"></span>\n\n      <span ng-if="task.due"\n            tooltip-placement="top"\n            tooltip="{{ task.due | camDate:\'long\' }}"\n            am-time-ago="task.due">{{ task.due }}</span>\n\n      <a href\n         ng-if="!task.due"\n         translate="SET_DUE_DATE">Set due date</a>\n    </span>\n\n    <a href\n       ng-if="task.due && !editingState.due"\n       tooltip-placement="top"\n       tooltip="{{ \'RESET_DUE_DATE\' | translate }}"\n       ng-click="resetDueDate()"\n       class="reset-due-date glyphicon glyphicon-remove">\n    </a>\n  </li>\n</ul>\n\n\n<ul class="meta list-inline actors">\n  <li class="groups">\n    <span ng-click="editGroups()">\n      <span tooltip-placement="top"\n            tooltip="{{ \'GROUPS\' | translate }}"\n            class="glyphicon glyphicon-th"></span>\n\n      <a href ng-if="groupNames.length > 0">\n        {{ groupNames.join(\', \') }}\n      </a>\n\n      <a href ng-if="groupNames.length === 0"\n         translate="ADD_GROUPS">\n        Add groups\n      </a>\n    </span>\n  </li>\n\n  <li class="assignee set-value"\n      ng-if="!task.assignee">\n    <span tooltip-placement="top"\n          tooltip="{{ \'ASSIGNEE\' | translate }}"\n          class="glyphicon glyphicon-user"></span>\n\n    <a href\n       class="claim"\n       ng-click="claim()"\n       translate="CLAIM_TASK">Claim</a>\n  </li>\n\n  <li class="assignee"\n      ng-if="task.assignee">\n    <span cam-widget-inline-field\n          class="set-value"\n          type="text"\n          validate="validateUser(this)"\n          change="assign(this)"\n          on-start-editing="startEditingAssignee(this)"\n          on-cancel-editing="cancelEditingAssignee(this)"\n          value="assignee.id">\n\n      <span tooltip-placement="top"\n            tooltip="{{ \'ASSIGNEE\' | translate }}"\n            class="glyphicon glyphicon-user"></span>\n      <span ng-if="assignee.firstName || assignee.lastName">{{ assignee.firstName }} {{ assignee.lastName }}</span>\n      <span ng-if="!(assignee.firstName || assignee.lastName)">{{ assignee.id }}</span>\n    </span>\n\n    <a href\n       ng-if="isAssignee && !editingState.assignee"\n       tooltip-placement="top"\n       tooltip="{{ \'UNCLAIM_TASK\' | translate }}"\n       ng-click="unclaim()"\n       class="unclaim glyphicon glyphicon-remove">\n    </a>\n\n    <a href\n       ng-if="!isAssignee && !editingState.assignee"\n       tooltip-placement="top"\n       tooltip="{{ \'RESET_TASK_ASSIGNEE\' | translate }}"\n       ng-click="resetAssignee()"\n       class="reset-assignee glyphicon glyphicon-remove">\n    </a>\n\n  </li>\n\n</ul>\n';
}),define("text!scripts/task/modals/cam-tasklist-groups-modal.html",[],function(){return'<div class="modal-header">\n  <h3 class="modal-title">\n    {{ \'MANAGE_GROUPS\' | translate }}\n  </h3>\n</div>\n\n<div class="modal-body groups-modal">\n\n  <div notifications-panel></div>\n\n  <form name="taskGroupForm"\n        class="form-horizontal"\n        ng-controller="camTaskGroupsCtrl"\n        ng-hide="!modalGroupsState.$loaded || modalGroupsState.$error"\n        ng-submit="(isValid() && addGroup())">\n\n  <div ng-show="!modalGroupsState.$loaded && !modalGroupsState.$error"\n       class="loader">\n    <span class="animate-spin glyphicon glyphicon-refresh"></span>\n    {{ \'LOADING\' | translate }}\n  </div>\n\n  <div class="text-help">\n    <span class="glyphicon glyphicon-info-sign"></span>\n    {{ \'USE_ADD_GROUP\' | translate }}\n  </div>\n\n    <div class="form-group">\n      <div class="col-xs-4 align-right">\n        <button class="btn btn-link"\n                ng-click="addGroup()"\n                type="button"\n                ng-disabled="!isValid()">\n          <span class="hidden-sm hidden-xs">{{ \'GROUP_ADD\' | translate }}</span>\n          <span class="glyphicon glyphicon-plus-sign"></span>\n        </button>\n      </div>\n\n      <div class="col-xs-8"\n           ng-class="{\'has-error\': newGroup.error }">\n        <input type="text"\n               name="newGroup"\n               required\n               placeholder="{{ \'GROUP_ID\' | translate }}"\n               class="form-control"\n               ng-model="newGroup.groupId"\n               ng-change="validateNewGroup()"/>\n\n        <span ng-if="newGroup.error"\n              class="help-block">\n          {{ newGroup.error.message | translate }}\n        </span>\n      </div>\n    </div>\n\n    <div class="form-group values"\n         ng-repeat="group in _groups">\n      <div class="col-xs-4 row-action">\n        <a href\n           ng-click="removeGroup(group, $index)"\n           class="glyphicon glyphicon-minus-sign"></a>\n      </div>\n\n      <div class="col-xs-8 value">\n        {{ group.id }}\n      </div>\n    </div>\n\n  </form>\n\n</div>\n\n<div class="modal-footer">\n  <div class="row row-action">\n    <div class="col-xs-12">\n      <button class="btn btn-xs btn-link"\n              type="button"\n              ng-click="$dismiss()"\n              translate="CLOSE">Close</button>\n    </div>\n  </div>\n</div>\n'}),define("scripts/task/directives/cam-tasklist-task-meta",["angular","text!./cam-tasklist-task-meta.html","text!../modals/cam-tasklist-groups-modal.html"],function(n,e,t){"use strict";n.element;return["$modal","camAPI",function(a,i){var s=i.resource("task");return{scope:{taskData:"=",successHandler:"&",errorHandler:"&"},template:e,controller:["$scope",function(e){function i(){f.changed("task"),f.changed("taskList")}function r(n){return function(t){u(n,!1),e.task[n]=t.varValue,l()}}function o(n){return function(){e.task[n]=null,l()}}function l(){var n=e.task;delete n._embedded,delete n._links,s.update(n,function(n,e){return i(),n?m("TASK_UPDATE_ERROR",n):void 0})}function c(n){return function(e){u(n,!0)}}function d(n){return function(e){u(n,!1)}}function u(n,t){e.editingState[n]=t}function p(n){var e=v[n];return function(n){return n?m(e.error,n):void i()}}var f=e.taskData.newChild(e),m=(e.successHandler()||function(){},e.errorHandler()||function(){});f.observe("task",function(t){e.task=n.copy(t)}),f.observe("assignee",function(t){e.assignee=n.copy(t)}),f.observe("isAssignee",function(n){e.isAssignee=n}),f.observe("groups",function(n){n=n||[];for(var t,a=[],i=0;t=n[i];i++)a.push(t.name||t.id);e.groupNames=a}),e.saveFollowUpDate=r("followUp"),e.resetFollowUpDate=o("followUp"),e.startEditingFollowUpDate=c("followUp"),e.cancelEditingFollowUpDate=d("followUp"),e.saveDueDate=r("due"),e.resetDueDate=o("due"),e.startEditingDueDate=c("due"),e.cancelEditingDueDate=d("due"),e.editingState={followUp:!1,due:!1,assignee:!1},e.now=(new Date).toJSON();var v={assigned:{error:"ASSIGNED_ERROR"},assigneeReseted:{error:"ASSIGNEE_RESET_ERROR"},claimed:{error:"CLAIM_ERROR"},unclaimed:{error:"UNCLAIM_ERROR"}};e.startEditingAssignee=c("assignee"),e.cancelEditingAssignee=d("assignee"),e.assign=function(n){u("assignee",!1);var t=n.varValue.trim();t?h(t):e.isAssignee?g():k()};var g=(e.claim=function(){var n=e.$root.authentication.name;s.claim(e.task.id,n,p("claimed"))},e.unclaim=function(){s.unclaim(e.task.id,p("unclaimed"))}),h=e.setAssignee=function(n){s.assignee(e.task.id,n,p("assigned"))},k=e.resetAssignee=function(){s.assignee(e.task.id,null,p("assigneeReseted"))};e.editGroups=function(){function n(){i&&(f.set("taskId",{taskId:e.task.id}),f.changed("taskList"))}var i;a.open({scope:e,windowClass:"filter-edit-modal",template:t,controller:"camGroupEditModalCtrl",resolve:{taskMetaData:function(){return f},groupsChanged:function(){return function(){i=!0}},errorHandler:function(){return e.errorHandler}}}).result.then(n,n)}}]}}]}),define("scripts/task/controller/cam-tasklist-task-action-ctrl",[],function(){"use strict";return["$scope","Views","CamForm",function(n,e,t){var a=n.taskData=n.tasklistData.newChild(n);a.observe("task",function(e){n.task=e}),t.cleanLocalStorage(Date.now()-6048e5),n.taskVars={read:["task","taskData"]},n.taskActions=e.getProviders({component:"tasklist.task.action"})}]}),define("scripts/task/controller/cam-tasklist-task-groups-ctrl",["angular"],function(n){"use strict";var e="candidate";return["$scope","$translate","$q","Notifications","camAPI",function(t,a,i,s,r){var o=r.resource("task"),l=null,c={groupId:null,type:e},d=t.newGroup=n.copy(c),u=t.taskGroupsData,p=t.groupsChanged,f=t.errorHandler();t._groups=[];var m={};a(["FAILURE","INIT_GROUPS_FAILURE","ADD_GROUP_FAILED","REMOVE_GROUP_FAILED"]).then(function(n){m.failure=n.FAILURE,m.initGroupsFailed=n.INIT_GROUPS_FAILURE,m.addGroupFailed=n.ADD_GROUP_FAILED,m.removeGroupFailed=n.REMOVE_GROUP_FAILED}),t.modalGroupsState=u.observe("groups",function(e){t._groups=n.copy(e)||[],t.validateNewGroup()}),u.observe("task",function(n){l=n}),t.$watch("modalGroupsState.$error",function(n){n&&s.addError({status:m.failure,message:m.initGroupsFailed,exclusive:!0,scope:t})}),t.addGroup=function(){var e=l.id;p(),delete d.error,o.identityLinksAdd(e,d,function(e){return e?f("TASK_UPDATE_ERROR",e):(t.taskGroupForm.$setPristine(),t._groups.push({id:d.groupId}),void(d=t.newGroup=n.copy(c)))})},t.removeGroup=function(n,a){var i=l.id;p(),o.identityLinksDelete(i,{type:e,groupId:n.id},function(n){return n?s.addError({status:m.failure,message:m.removeGroupFailed,exclusive:!0,scope:t}):void t._groups.splice(a,1)})},t.validateNewGroup=function(){if(delete d.error,t.taskGroupForm&&t.taskGroupForm.newGroup){t.taskGroupForm.newGroup.$setValidity("duplicate",!0);var n=d.groupId;if(n)for(var e,a=0;e=t._groups[a];a++)n===e.id&&(d.error={message:"DUPLICATE_GROUP"},t.taskGroupForm.newGroup.$setValidity("duplicate",!1))}},t.isValid=function(){return!d.groupId||d.error?!1:!0}}]}),define("text!scripts/task/plugins/detail/cam-tasklist-task-detail-form-plugin.html",[],function(){return'<div class="form-pane">\n\n  <div ng-if="taskFormState.$error" class="alert alert-danger" role="alert">\n    <span class="glyphicon glyphicon-exclamation-sign"></span>\n    <strong class="status">{{ \'FORM_FAILURE\' | translate }}</strong>\n    <span class="message">{{ taskFormState.$error.message }}</span>\n  </div>\n\n  <div ng-if="taskFormState.$loaded && !taskFormState.$error"\n       cam-tasklist-form\n       tasklist-form="taskForm"\n       on-form-completion-callback="completionCallback"\n       options="options"\n       params="params" >\n  </div>\n\n</div>'}),define("scripts/task/plugins/detail/cam-tasklist-task-detail-form-plugin",["angular","text!./cam-tasklist-task-detail-form-plugin.html"],function(n,e){"use strict";var t=["$scope","$location","$q","camAPI","assignNotification",function(e,t,a,i,s){function r(){var n=t.search();delete n.task,delete n.detailsTab,t.search(n),d.changed("taskList")}var o=i.resource("task"),l=e.errorHandler,c=e.options={hideCompleteButton:!1,hideLoadVariablesButton:!1,disableCompleteButton:!1,disableForm:!1,disableAddVariableButton:!1},d=e.taskData.newChild(e);d.provide("taskForm",["task",function(n){var e=a.defer();return n&&n.id?(o.form(n.id,function(n,t){n?e.reject(n):e.resolve(t)}),e.promise):e.resolve(null)}]),d.observe(["task","isAssignee",function(t,a){e.options=n.copy(c),t&&t.id?e.params={taskId:t.id}:e.params=null,e.options.disableCompleteButton=!a,e.options.disableForm=!a,e.options.disableAddVariableButton=!a}]),e.taskFormState=d.observe("taskForm",function(t){e.taskForm=n.copy(t)}),e.completionCallback=function(n){return n?l("COMPLETE_ERROR",n):(e.task.processInstanceId?s({assignee:e.task.assignee,processInstanceId:e.task.processInstanceId}):e.task.caseInstanceId&&s({assignee:e.task.assignee,caseInstanceId:e.task.caseInstanceId}),void r())}}],a=function(n){n.registerDefaultView("tasklist.task.detail",{id:"task-detail-form",label:"FORM",template:e,controller:t,priority:1e3})};return a.$inject=["ViewsProvider"],a}),define("text!scripts/task/plugins/detail/cam-tasklist-task-detail-history-plugin.html",[],function(){return'<div class="history-pane">\n\n  <div ng-show="!state.$loaded"\n       class="loader">\n    <span class="animate-spin glyphicon glyphicon-refresh"></span>\n    {{ \'LOADING\' | translate }}\n  </div>\n\n  <div ng-hide="!state.$loaded">\n    <div ng-if="!days.length">\n      <div class="well">\n        <span class="glyphicon glyphicon-info-sign"></span>\n        {{ \'NO_HISTORY\' | translate }}\n      </div>\n    </div>\n\n    <div ng-if="days.length"\n         class="day row"\n         ng-repeat="day in days | orderBy:\'-date\'">\n      <div class="col-xs-2">\n        <div class="date-badge">\n          <div>\n            <span class="day">{{ day.date | camDate:\'day\' }}</span>\n            <span class="month">{{ day.date | camDate:\'monthName\' }}</span>\n            <span class="year">{{ day.date | date:\'yyyy\' }}</span>\n          </div>\n        </div>\n      </div>\n\n      <div class="col-xs-10">\n        <div class="instant row"\n             ng-repeat="event in day.events | orderBy:\'-time\'">\n          <div class="col-xs-2 operation-meta">\n            <div class="operation-time"\n                 tooltip-placement="left"\n                 tooltip="{{ event.time | camDate:\'long\' }}">{{ event.time | date:\'HH:mm\' }}</div>\n            <div class="operation-user"\n                 tooltip-placement="top"\n                 tooltip="{{ event.userId }}">{{ event.userId }}</div>\n          </div>\n\n          <div class="col-xs-10 operation-detail">\n            <div class="row">\n              <h4 class="col-xs-12">{{ event.type | translate }}</h4>\n            </div>\n\n            <div class="row event-body">\n              <div class="line"\n                   ng-repeat="subEvent in event.subEvents"\n                   ng-if="event.type !== \'Comment\'">\n                <h5 class="col-sm-12 col-md-3 event-property">{{ subEvent.property | translate }}</h5>\n\n                <div class="col-sm-12 col-md-9">\n                  <div class="new-value" ng-if="subEvent.newValue">\n                    <span ng-if="subEvent.propertyIsDate">{{ subEvent.newValue | camDate }}</span>\n                    <span ng-if="!subEvent.propertyIsDate">{{ subEvent.newValue }}</span>\n                  </div>\n\n                  <div class="original-value"\n                       ng-if="subEvent.orgValue">\n                    <span ng-if="subEvent.propertyIsDate">{{ subEvent.orgValue | camDate }}</span>\n                    <span ng-if="!subEvent.propertyIsDate">{{ subEvent.orgValue }}</span>\n                  </div>\n                </div>\n              </div>\n              <div class="col-xs-12"\n                   ng-if="event.type === \'Comment\'"\n                   nl2br="event.message" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'}),define("scripts/task/plugins/detail/cam-tasklist-task-detail-history-plugin",["jquery","moment","text!./cam-tasklist-task-detail-history-plugin.html"],function(n,e,t){"use strict";function a(n){return-1!==["dueDate","followUpDate"].indexOf(n)}var i=function(t,a){var i=n.grep(t,function(n){return e(n.date).format("YYYY-MM-DD")===e(a).format("YYYY-MM-DD")});return i.length>0?i[0]:(i={date:a,events:[]},t.push(i),i)},s=function(e,t){var a=n.grep(e,function(n){return n.operationId===t.operationId});return a.length>0?a[0]:(a={time:t.timestamp,type:t.operationType,operationId:t.operationId,userId:t.userId,subEvents:[]},e.push(a),a)},r=["$scope","camAPI","$q",function(n,e,t){var r=e.resource("history"),o=e.resource("task"),l=n.taskData.newChild(n);l.provide("history",["task",function(n){var e=t.defer();return n?(r.userOperation({taskId:n.id},function(n,t){n?e.reject(n):e.resolve(t)}),e.promise):e.resolve(null)}]),l.provide("comments",["task",function(n){var e=t.defer();return n?(o.comments(n.id,function(n,t){n?e.reject(n):e.resolve(t)}),e.promise):e.resolve(null)}]),l.provide("orderedHistoryAndCommentsByDay",["history","comments",function(n,e){n=n||{},e=e||{};for(var t,r,o=[],l=0;r=n[l];l++){t=i(o,r.timestamp);var c=s(t.events,r);a(r.property)&&(r.propertyIsDate=!0,r.newValue=r.newValue?parseInt(r.newValue,10):null,r.orgValue=r.orgValue?parseInt(r.orgValue,10):null),c.subEvents.push(r)}l=0,t=null;for(var d;d=e[l];l++)t=i(o,d.time),d.type="Comment",t.events.push(d);return o}]),n.state=l.observe("orderedHistoryAndCommentsByDay",function(e){n.days=e})}],o=function(n){n.registerDefaultView("tasklist.task.detail",{id:"task-detail-history",label:"HISTORY",template:t,controller:r,priority:800})};return o.$inject=["ViewsProvider"],o}),define("text!scripts/task/plugins/detail/cam-tasklist-task-detail-diagram-plugin.html",[],function(){return'<div ng-show="!processDiagramState.$loaded"\n     class="loader">\n  <span class="animate-spin glyphicon glyphicon-refresh"></span>\n  {{ \'LOADING\' | translate }}\n</div>\n\n<div ng-if="processDiagramState.$loaded">\n\n  <div ng-show="!processDefinition || !processDiagram.bpmn20xml"\n       class="well">\n    <span class="glyphicon glyphicon-info-sign"></span>\n    {{ \'NO_DIAGRAM\' | translate }}\n  </div>\n\n  <div ng-hide="!processDefinition || !processDiagram.bpmn20xml">\n    <div class="diagram-pane"\n         cam-widget-bpmn-viewer\n         diagram-data="processDiagram.bpmn20xml"\n         on-load="highlightTask()"\n         control="control">\n    </div>\n  </div>\n\n</div>\n'}),define("scripts/task/plugins/detail/cam-tasklist-task-detail-diagram-plugin",["text!./cam-tasklist-task-detail-diagram-plugin.html"],function(n){"use strict";var e=["$scope","$q","camAPI",function(n,e,t){var a=t.resource("process-definition"),i=n.taskData.newChild(n);i.provide("bpmn20xml",["processDefinition",function(n){var t=e.defer();return n?(a.xml(n,function(n,e){n?t.reject(n):t.resolve(e)}),t.promise):t.resolve(null)}]),i.provide("processDiagram",["bpmn20xml","processDefinition","task",function(n,e,t){var a={};return a.processDefinition=e,a.task=t,a.bpmn20xml=(n||{}).bpmn20Xml,a}]),i.observe("processDefinition",function(e){n.processDefinition=e}),n.processDiagramState=i.observe("processDiagram",function(e){n.processDiagram=e}),n.control={},n.highlightTask=function(){n.control.highlight(n.processDiagram.task.taskDefinitionKey)}}],t=function(t){t.registerDefaultView("tasklist.task.detail",{id:"task-detail-diagram",label:"DIAGRAM",template:n,controller:e,priority:600})};return t.$inject=["ViewsProvider"],t}),define("text!scripts/task/plugins/detail/cam-tasklist-task-detail-description-plugin.html",[],function(){return'<div class="description-pane">\n  <div ng-hide="task.description"\n       class="well">\n    <span class="glyphicon glyphicon-info-sign"></span>\n    {{ \'NO_DESCRIPTION\' | translate }}\n  </div>\n  <div ng-show="task.description">\n    {{ task.description }}\n  </div>\n</div>\n'}),define("scripts/task/plugins/detail/cam-tasklist-task-detail-description-plugin",["text!./cam-tasklist-task-detail-description-plugin.html"],function(n){"use strict";var e=["$scope",function(n){}],t=function(t){t.registerDefaultView("tasklist.task.detail",{id:"task-detail-description",label:"DESCRIPTION",template:n,controller:e,priority:100})};return t.$inject=["ViewsProvider"],t}),define("text!scripts/task/plugins/action/cam-tasklist-task-action-comment-plugin.html",[],function(){return'<a href\n   ng-click="createComment()">\n  {{ \'COMMENT_CREATE\' | translate }}\n  <span class="glyphicon glyphicon-plus-sign"></span>\n</a>'}),define("text!scripts/task/plugins/action/modals/cam-tasklist-comment-form.html",[],function(){return'<form class="form form-horizontal"\n      name="newComment"\n      role="form">\n\n  <div class="modal-header">\n    <h3 class="modal-title">\n      {{ \'COMMENT_CREATE\' | translate }}\n    </h3>\n  </div>\n\n  <div class="modal-body">\n      <textarea class="form-control"\n             id="comment-form-message"\n             ng-model="comment.message"\n             placeholder="{{ \'COMMENT_MESSAGE_PLACEHOLDER\' | translate }}">\n      </textarea>\n  </div>\n\n  <div class="modal-footer">\n    <div class="row row-action">\n      <div class="col-xs-12">\n        <button class="btn btn-xs btn-link"\n                type="button"\n                ng-click="$dismiss()"\n                translate="CLOSE">Close</button>\n\n        <button class="btn btn-primary"\n                type="submit"\n                ng-disabled="!comment.message"\n                ng-click="submit()"\n                translate="SAVE">Save</button>\n\n      </div>\n    </div>\n  </div>\n</form>\n'}),define("scripts/task/plugins/action/cam-tasklist-task-action-comment-plugin",["text!./cam-tasklist-task-action-comment-plugin.html","text!./modals/cam-tasklist-comment-form.html"],function(n,e){"use strict";var t=["$scope","$modal",function(n,t){var a=n.taskData.newChild(n);a.observe("task",function(e){n.task=e}),n.createComment=function(){t.open({scope:n,windowClass:"filter-edit-modal",size:"lg",template:e,controller:"camCommentCreateModalCtrl",resolve:{task:function(){return n.task}}}).result.then(function(){a.changed("task")})}}],a=function(e){e.registerDefaultView("tasklist.task.action",{id:"task-action-comment",template:n,controller:t,priority:100})};return a.$inject=["ViewsProvider"],a}),define("scripts/task/plugins/action/modals/cam-tasklist-comment-form",[],function(){"use strict";return["$scope","$translate","Notifications","camAPI","task",function(n,e,t,a,i){function s(a,i){e(a).then(function(e){t.addError({status:e,message:i?i.message:"",exclusive:!0,scope:n})})}var r=a.resource("task");n.comment={message:""},n.$on("$locationChangeSuccess",function(){n.$dismiss()}),n.submit=function(){r.createComment(i.id,n.comment.message,function(e){return e?s("COMMENT_SAVE_ERROR",e):void n.$close()})}}]}),define("scripts/task/modals/cam-tasklist-groups-modal",[],function(){"use strict";return["$scope","taskMetaData","groupsChanged",function(n,e,t){n.taskGroupsData=e.newChild(n),n.groupsChanged=t||function(){},n.$on("$locationChangeSuccess",function(){n.$dismiss()})}]}),define("scripts/task/index",["angular","moment","./directives/cam-tasklist-task","./directives/cam-tasklist-task-meta","./controller/cam-tasklist-task-action-ctrl","./controller/cam-tasklist-task-groups-ctrl","./plugins/detail/cam-tasklist-task-detail-form-plugin","./plugins/detail/cam-tasklist-task-detail-history-plugin","./plugins/detail/cam-tasklist-task-detail-diagram-plugin","./plugins/detail/cam-tasklist-task-detail-description-plugin","./plugins/action/cam-tasklist-task-action-comment-plugin","./plugins/action/modals/cam-tasklist-comment-form","./modals/cam-tasklist-groups-modal","../api/index","angular-bootstrap"],function(n,e,t,a,i,s,r,o,l,c,d,u,p,f){"use strict";var m=n.module("cam.tasklist.task",[f.name,"ui.bootstrap","cam.tasklist.form","angularMoment"]);return m.directive("camTasklistTask",t),m.directive("camTasklistTaskMeta",a),m.controller("camTaskActionCtrl",i),m.controller("camTaskGroupsCtrl",s),m.config(r),m.config(o),m.config(l),m.config(c),m.config(d),m.controller("camCommentCreateModalCtrl",u),m.controller("camGroupEditModalCtrl",p),m}),define("text!scripts/process/plugins/action/cam-tasklist-navbar-action-start-process-plugin.html",[],function(){return'<a ng-click="open()"\n   href>\n  <span class="glyphicon glyphicon-list-alt"></span>\n  {{ \'START_PROCESS\' | translate }}\n</a>\n'}),define("text!scripts/process/plugins/action/modals/cam-tasklist-process-start-modal.html",[],function(){return'<div class="modal-header">\n  <div class="row">\n    <div class="col-xs-6">\n      <h3 class="modal-title">{{ \'START_PROCESS\' | translate }}</h3>\n    </div>\n\n    <div class="col-xs-6">\n      <form>\n        <div class="form-group has-feedback"\n             ng-show="!PROCESS_TO_START_SELECTED">\n          <input type="text"\n                 ng-model="page.searchValue"\n                 placeholder="{{ \'SEARCH_PROCESS_BY_NAME\' | translate }}"\n                 ng-change="lookupProcessDefinitionByName()"\n                 class="form-control">\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n\n<div class="modal-body">\n\n  <div notifications-panel />\n\n  <div ng-show="!PROCESS_TO_START_SELECTED">\n\n    <div ng-show="!processDefinitionState.$loaded || lookupProcessDefinitionByName.$loading"\n       class="loader">\n      <span class="animate-spin glyphicon glyphicon-refresh"></span>\n      {{ \'LOADING\' | translate }}\n    </div>\n\n    <div ng-hide="!processDefinitionState.$loaded || lookupProcessDefinitionByName.$loading">\n\n      <div ng-hide="page.total"\n           class="well">\n        <span class="glyphicon glyphicon-info-sign"></span>\n        {{ \'NO_PROCESS_DEFINITION_AVAILABLE\' | translate }}\n      </div>\n\n      <div ng-show="page.total" class="available-processes">\n\n        <div class="text-help">\n          <span class="glyphicon glyphicon-info-sign"></span>\n          {{ \'CLICK_PROCESS_TO_START\' | translate }}\n        </div>\n\n        <ul class="processes">\n          <li ng-repeat="processDefinition in processDefinitions">\n            <a href ng-click="selectProcessDefinition(processDefinition)">\n              {{ processDefinition.name || processDefinition.key }}\n            </a>\n          </li>\n        </ul>\n\n      </div>\n\n      <pagination ng-show="page.total > page.size"\n                  total-items="page.total"\n                  items-per-page="page.size"\n                  max-size="5"\n                  class="pagination-sm"\n                  boundary-links="true"\n                  ng-model="page.current"\n                  ng-change="pageChange()"\n                  next-text="&rsaquo;"\n                  last-text="&raquo;"\n                  previous-text="&lsaquo;"\n                  first-text="&laquo;"></pagination>\n    </div>\n  </div>\n\n  <div ng-if="PROCESS_TO_START_SELECTED">\n\n    <div ng-if="startFormState.$error" class="alert alert-danger" role="alert">\n      <span class="glyphicon glyphicon-exclamation-sign"></span>\n      <strong class="status">{{ \'FORM_FAILURE\' | translate }}</strong>\n      <span class="message">{{ startFormState.$error.message }}</span>\n    </div>\n\n    <div ng-if="startFormState.$loaded && !startFormState.$error"\n         cam-tasklist-form\n         tasklist-form="startForm"\n         on-form-completion-callback="completionCallback"\n         on-form-completion="registerCompletionHandler"\n         on-form-validation="notifyFormValidation"\n         options="options"\n         params="params" >\n    </div>\n  </div>\n\n</div>\n\n<div class="modal-footer">\n  <div ng-if="!PROCESS_TO_START_SELECTED"\n       class="row row-action">\n\n    <div class="col-xs-12">\n      <button class="btn btn-xs btn-link"\n              type="button"\n              ng-click="$dismiss()">\n        {{ \'CLOSE\' | translate }}\n      </button>\n    </div>\n  </div>\n\n  <div ng-if="PROCESS_TO_START_SELECTED"\n       class="row">\n\n    <div class="col-xs-4 align-left">\n      <button class="btn btn-xs btn-link"\n              type="button"\n              ng-click="back()">\n        {{ \'BACK\' | translate }}\n      </button>\n    </div>\n\n    <div class="col-xs-8">\n      <button class="btn btn-xs btn-link"\n              type="button"\n              ng-click="$dismiss()">\n        {{ \'CLOSE\' | translate }}\n      </button>\n\n      <button class="btn btn-primary"\n              type="submit"\n              ng-disabled="$invalid"\n              ng-click="startProcessInstance()">\n        {{ \'START\' | translate }}\n      </button>\n    </div>\n\n  </div>\n\n</div>\n'}),define("scripts/process/plugins/action/cam-tasklist-navbar-action-start-process-plugin",["text!./cam-tasklist-navbar-action-start-process-plugin.html","text!./modals/cam-tasklist-process-start-modal.html"],function(n,e){"use strict";var t=["$scope","$modal","$q","camAPI","dataDepend",function(n,t,a,i,s){var r=i.resource("process-definition"),o=n.processData=s.create(n),l={latest:!0,active:!0,firstResult:0,maxResults:15};o.provide("processDefinitionQuery",l),o.provide("processDefinitions",["processDefinitionQuery",function(n){var e=a.defer();return r.list(n,function(n,t){n?e.reject(n):e.resolve(t)}),e.promise}]),o.provide("currentProcessDefinitionId",{id:null}),o.provide("startForm",["currentProcessDefinitionId",function(n){var e=a.defer();return n.id?r.startForm(n,function(n,t){n?e.reject(n):e.resolve(t)}):e.resolve(null),e.promise}]),n.open=function(){o.set("processDefinitionQuery",angular.copy(l)),t.open({size:"lg",controller:"camProcessStartModalCtrl",template:e,resolve:{processData:function(){return o}}}).result.then(function(e){n.tasklistApp&&n.tasklistApp.refreshProvider&&n.tasklistApp.refreshProvider.refreshTaskList()})}}],a=function(e){e.registerDefaultView("tasklist.navbar.action",{id:"start-process-action",template:n,controller:t,priority:100})};return a.$inject=["ViewsProvider"],a}),define("scripts/process/plugins/action/modals/cam-tasklist-process-start-modal",["angular"],function(n){"use strict";return["$rootScope","$scope","$translate","debounce","Notifications","processData","assignNotification",function(e,t,a,i,s,r,o){function l(n,e){a(n).then(function(n){s.addError({status:n,message:e?e.message:"",scope:t})})}function c(n){a(n).then(function(n){s.addMessage({duration:3e3,status:n})})}t.$on("$locationChangeSuccess",function(){t.$dismiss()});var d=r.newChild(t);d.set("currentProcessDefinitionId",{id:null});var u=t.options={hideCompleteButton:!0,hideLoadVariablesButton:!0,disableForm:!1,disableAddVariableButton:!1};t.PROCESS_TO_START_SELECTED=!1;var p=null,f=t.page={total:0,current:1,searchValue:null};t.triggerOnStart=function(){},d.observe("processDefinitionQuery",function(e){p=n.copy(e),f.size=e.maxResults,f.current=e.firstResult/f.size+1}),t.startFormState=d.observe("startForm",function(e){t.startForm=n.copy(e)}),t.processDefinitionState=d.observe("processDefinitions",function(n){f.total=n.count,t.processDefinitions=n.items.sort(function(n,e){var t=(n.name||n.key).toLowerCase(),a=(e.name||e.key).toLowerCase();return a>t?-1:t>a?1:0})}),t.pageChange=function(){p.firstResult=f.size*(f.current-1),d.set("processDefinitionQuery",p)},t.lookupProcessDefinitionByName=i(function(){var n=f.searchValue;n?p.nameLike="%"+n+"%":delete p.nameLike,p.firstResult=0,d.set("processDefinitionQuery",p)},2e3),t.selectProcessDefinition=function(e){t.PROCESS_TO_START_SELECTED=!0;var a=e.id,i=e.key;t.options=n.copy(u),t.params={processDefinitionId:a,processDefinitionKey:i},d.set("currentProcessDefinitionId",{id:a})},t.$invalid=!0,t.back=function(){t.$invalid=!0,t.PROCESS_TO_START_SELECTED=!1,t.options=u,d.set("currentProcessDefinitionId",{id:null})};var m=[];t.$on("$destroy",function(){for(var n;n=m.pop();)"function"==typeof n&&n()}),t.completionCallback=function(n,a){return n?l("PROCESS_START_ERROR",n):(m.push(function(){c("PROCESS_START_OK"),o({assignee:e.authentication.name,processInstanceId:a.id})}),void t.$close())},t.registerCompletionHandler=function(n){t.triggerOnStart=n||function(){}},t.startProcessInstance=function(){t.triggerOnStart()},t.notifyFormValidation=function(n){t.$invalid=n}}]}),define("scripts/process/index",["angular","./plugins/action/cam-tasklist-navbar-action-start-process-plugin","./plugins/action/modals/cam-tasklist-process-start-modal"],function(n,e,t){"use strict";var a=n.module("cam.tasklist.process",["cam.tasklist.client","cam.tasklist.form","ui.bootstrap"]);return a.config(e),a.controller("camProcessStartModalCtrl",t),a}),define("scripts/navigation/controllers/cam-layout-ctrl",["angular"],function(n){"use strict";var e=n.element,t=e("body");return["$scope","$timeout",function(n,a){function i(n){return e(n.currentTarget).attr("data-region")}function s(n){return t.hasClass(n+"-column-close")}function r(n){return t.removeClass(n+"-column-close")}function o(n){return t.addClass(n+"-column-close")}n.toggleVariableSearch=function(n){n&&n.preventDefault&&n.preventDefault(),e(".tasks-list").toggleClass("show-search")},n.toggleRegion=function(e){e&&e.preventDefault&&e.preventDefault();var o=i(e);"task"===o?s("list")&&!s("task")&&r("list"):"list"===o&&s("task")&&!s("list")&&r("task"),t.toggleClass(o+"-column-close"),a(function(){n.$root.$broadcast("layout:change")},600)},n.maximizeRegion=function(n){n&&n.preventDefault&&n.preventDefault(),o("filters"),o("list"),r("task")},n.resetRegions=function(n){n&&n.preventDefault&&n.preventDefault(),r("filters"),r("list"),r("task")}}]}),define("scripts/navigation/controllers/cam-header-views-ctrl",[],function(){"use strict";return["$scope","Views",function(n,e){n.navbarVars={read:["tasklistApp"]},n.navbarActions=e.getProviders({component:"tasklist.navbar.action"})}]}),define("scripts/navigation/index",["angular","./controllers/cam-layout-ctrl","./controllers/cam-header-views-ctrl","camunda-commons-ui/util/index"],function(n,e,t){"use strict";var a=n.module("cam.tasklist.navigation",[require("camunda-commons-ui/util/index").name,"ui.bootstrap","cam.tasklist.user"]);return a.controller("camHeaderViewsCtrl",t),a.controller("camLayoutCtrl",e),a}),define("text!scripts/form/directives/cam-tasklist-form.html",[],function(){return'<div ng-show="tasklistForm && !$loaded"\n     class="loader">\n  <span class="animate-spin glyphicon glyphicon-refresh"></span>\n  {{ \'LOADING\' | translate }}\n</div>\n\n<div ng-if="tasklistForm.type" ng-show="tasklistForm && $loaded" ng-class="{ \'disabled-form\' : options.disableForm}">\n\n  <div ng-show="tasklistForm.$error" class="alert alert-danger" role="alert">\n    <span class="glyphicon glyphicon-exclamation-sign"></span>\n    <strong class="status">{{ \'FORM_FAILURE\' | translate }}</strong>\n    <span class="message">{{ tasklistForm.$error.message | translate }}</span>\n  </div>\n\n  <div ng-switch="tasklistForm.type" ng-show="!tasklistForm.$error">\n\n    <div ng-switch-when="embedded">\n      <div cam-tasklist-form-embedded>\n      </div>\n    </div>\n\n    <div ng-switch-when="external">\n      <div cam-tasklist-form-external>\n      </div>\n    </div>\n\n    <div ng-switch-default>\n      <div cam-tasklist-form-generic>\n      </div>\n    </div>\n\n  </div>\n\n  <div class="form-actions" ng-show="showCompleteButton()">\n    <button class="btn btn-primary"\n            type="submit"\n            ng-click="save($event)"\n            ng-hide="tasklistForm.type === \'generic\'"\n            tooltip-placement="top"\n            tooltip="{{ \'SAVE_HINT\' | translate }}"\n            ng-disabled="!$dirty">\n      {{ \'SAVE\' | translate }}\n    </button>\n    <button class="btn btn-primary"\n            type="submit"\n            ng-click="complete()"\n            ng-disabled="disableCompleteButton()">\n      {{ \'COMPLETE\' | translate }}\n    </button>\n  </div>\n\n</div>\n';
}),define("scripts/form/directives/cam-tasklist-form",["angular","text!./cam-tasklist-form.html"],function(n,e){"use strict";function t(n){var e=[];for(var t in n)n[t]&&e.push(n[t]);return e}var a="embedded:",i="app:",s="engine:",r=function(){};return[function(){return{restrict:"A",scope:{tasklistForm:"=",options:"=",params:"=",onFormCompletionCallback:"&",onFormCompletion:"&",onFormValidation:"&"},template:e,controller:["$scope","Uri",function(n,e){function o(n){var r=n.key,o=n.contextPath;return r?(0===r.indexOf(a)?(r=r.substring(a.length),n.type="embedded"):n.type="external",0===r.indexOf(i)&&o&&(r=t([o,r.substring(i.length)]).join("/").replace(/\/([\/]+)/,"/")),0===r.indexOf(s)&&(r=e.appUri(r)),void(n.key=r)):void(n.type="generic")}n.onFormCompletionCallback=n.onFormCompletionCallback()||r,n.onFormCompletion=n.onFormCompletion()||r,n.onFormValidation=n.onFormValidation()||r,n.completionHandler=r,n.saveHandler=r,n.$loaded=!1,n.$watch("tasklistForm",function(e){n.$loaded=!1,e&&o(e)});var l=function(e,t){n.onFormCompletionCallback(e,t)},c=n.complete=function(){n.completionHandler(l)};n.onFormCompletion(c),n.showCompleteButton=function(){return n.options&&!n.options.hideCompleteButton&&n.$loaded},n.disableCompleteButton=function(){return n.$invalid||n.options&&n.options.disableCompleteButton};n.save=function(e){n.saveHandler(e)};this.notifyFormInitialized=function(){n.$loaded=!0},this.notifyFormInitializationFailed=function(e){n.tasklistForm.$error=e,this.notifyFormInitialized(),this.notifyFormValidated(!0)},this.notifyFormCompleted=function(e){n.onFormCompletion(e)},this.notifyFormValidated=function(e){n.$invalid=e,n.onFormValidation(e)},this.notifyFormDirty=function(e){n.$dirty=e},this.getOptions=function(){return n.options||{}},this.getTasklistForm=function(){return n.tasklistForm},this.getParams=function(){return n.params||{}},this.registerCompletionHandler=function(e){n.completionHandler=e||r},this.registerSaveHandler=function(e){n.saveHandler=e||r}}]}}]}),define("text!scripts/form/directives/cam-tasklist-form-generic.html",[],function(){return'<div class="generic-form-fields">\n\n  <div class="text-help">\n    <span class="glyphicon glyphicon-info-sign"></span>\n    {{ \'USE_GENERIC_FORM\' | translate }}\n  </div>\n\n  <div cam-tasklist-form-generic-variables>\n  </div>\n\n</div>\n'}),define("scripts/form/directives/cam-tasklist-form-generic",["angular","text!./cam-tasklist-form-generic.html"],function(n,e){"use strict";return["CamForm","camAPI",function(t,a){return{restrict:"A",require:"^camTasklistForm",scope:!0,template:e,link:function(e,i,s,r){function o(e,i){i=n.copy(i),delete i.processDefinitionKey,n.extend(i,{client:a,formElement:d,done:m}),u=new t(i)}function l(){var n=u.variableManager.variables;for(var e in n)u.variableManager.destroyVariable(e)}function c(){u.fields=[]}e.showBusinessKeyField=!!r.getParams().processDefinitionId;var d=i.find("form"),u=null,p={$valid:!1,$invalid:!0},f=!1;e.$watch(function(){return f},function(n){n&&(o(n,r.getParams()),f=!1)}),e.$watch(function(){return r.getTasklistForm()},function(n){n&&(f=!0,e.variables=[])}),e.$watch(function(){return p&&p.$valid},function(n){r.notifyFormValidated(!n)});var m=function(n,e){if(n)return r.notifyFormInitializationFailed(n);u=e;var t=e.formElement.attr("name"),a=e.formElement.scope();a&&(p=a[t],r.notifyFormInitialized())},v=function(n){function e(e,t){return l(),c(),n(e,t)}try{u.initializeFieldHandlers()}catch(t){return e(t)}var a=u.variableManager.variables;for(var i in a)a[i].value=null;u.submit(e)};r.registerCompletionHandler(v)}}}]}),define("text!scripts/form/directives/cam-tasklist-form-generic-variables.html",[],function(){return'<form name="generic-form"\n      class="form-horizontal">\n\n  <div ng-if="showBusinessKeyField"\n       class="form-group">\n    <label for="business-key-field"\n           translate="BUSINESS_KEY"\n           class="control-label col-xs-2">Business key</label>\n    <div class="col-xs-10">\n      <input type="text"\n             id="business-key-field"\n             cam-business-key\n             class="form-control" />\n    </div>\n  </div>\n\n\n  <div class="form-group labels-left">\n    <div class="col-xs-2 row-action">\n      <a ng-click="addVariable()"\n         ng-disabled="options.disableAddVariableButton">\n        <span class="hidden-xs hidden-sm"\n              translate="ADD_VARIABLE">Add variable</span>\n        <span class="glyphicon glyphicon-plus-sign"></span>\n      </a>\n    </div>\n\n\n\n    <div class="col-xs-10"\n         ng-if="variables.length">\n      <div class="row">\n        <label class="control-label col-xs-4"\n               translate="NAME">Name</label>\n\n\n\n        <label class="control-label col-xs-4"\n               translate="TYPE">Type</label>\n\n\n\n        <label class="control-label col-xs-4"\n               translate="VALUE">Value</label>\n      </div>\n    </div>\n  </div>\n\n\n\n  <div ng-if="variables.length"\n       ng-repeat="(delta, variable) in variables"\n       class="form-group"\n       ng-form="repeatForm">\n\n    <div class="col-xs-2 row-action">\n      <a ng-click="removeVariable(delta)"\n         ng-if="!variable.fixedName">\n        <span class="hidden-sm hidden-xs"\n              translate="REMOVE">Remove</span>\n        <span class="glyphicon glyphicon-minus-sign"></span>\n      </a>\n    </div>\n\n\n\n    <div class="col-xs-10">\n      <div class="row">\n        <div class="col-xs-4">\n          <input required\n                 type="text"\n                 class="form-control"\n                 placeholder="{{ \'VARIABLE_NAME\' | translate }}"\n                 ng-model="variable.name"\n                 name="name"\n                 cam-unique-value="{{ getVariableNames() }}"\n                 ng-readonly="variable.fixedName" />\n          <span ng-if="repeatForm.name.$invalid && repeatForm.name.$dirty" class="has-error">\n            <span ng-if="repeatForm.name.$error.required"\n                  class="help-block">\n              {{ \'REQUIRED_FIELD\' | translate }}\n            </span>\n            <span ng-if="repeatForm.name.$error.camUniqueValue"\n                  class="help-block">\n              {{ \'REQUIRE_UNIQUE_NAME\' | translate }}\n            </span>\n          </span>\n        </div>\n\n\n\n        <div class="col-xs-4">\n          <select required\n                  ng-disabled="!variable.name"\n                  class="form-control"\n                  ng-model="variable.type">\n\n            <option disabled\n                    value=""\n                    translate="VARIABLE_TYPE">Type</option>\n\n            <option value="Boolean">Boolean</option>\n            <option value="Short">Short</option>\n            <option value="Integer">Integer</option>\n            <option value="Long">Long</option>\n            <option value="Double">Double</option>\n            <option value="String">String</option>\n            <option value="Date">Date</option>\n          </select>\n        </div>\n\n\n\n        <div class="col-xs-4"\n             ng-switch="variable.type">\n          <input ng-switch-when=""\n                 readonly\n                 type="text"\n                 class="form-control"\n                 placeholder="{{ \'VARIABLE_VALUE\' | translate }}" />\n\n\n          <input ng-switch-when="Boolean"\n                 class="form-control"\n                 type="checkbox"\n                 ng-model="variable.value"\n                 ng-checked="variable.value"\n                 cam-variable-name="{{ variable.name }}"\n                 cam-variable-type="{{ variable.type }}" />\n\n\n          <input ng-switch-default\n                 class="form-control"\n                 type="{{ variableTypes[variable.type] }}"\n                 required\n                 ng-model="variable.value"\n                 name="value"\n                 cam-variable-name="{{ variable.name }}"\n                 cam-variable-type="{{ variable.type }}"\n                 placeholder="{{ \'VARIABLE_VALUE\' | translate }}" />\n\n          <span ng-if="repeatForm.value.$invalid && repeatForm.value.$dirty" class="has-error">\n            <span ng-if="repeatForm.value.$error.required"\n                  class="help-block">\n              {{ \'REQUIRED_FIELD\' | translate }}\n            </span>\n            <span ng-if="repeatForm.value.$error.camVariableType"\n                  class="help-block">\n              Only a {{ variable.type }} value is allowed\n            </span>\n          </span>\n\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="form-group"\n       ng-if="!options.hideLoadVariablesButton && !variablesLoaded">\n    <div class="col-xs-2 row-action">\n      <a ng-click="loadVariables()">\n        <span class="hidden-sm hidden-xs"\n              translate="LOAD_VARIABLES">Load Variables</span>\n        <span class="glyphicon glyphicon-download"></span>\n      </a>\n    </div>\n  </div>\n\n</form>\n'}),define("scripts/form/directives/cam-tasklist-form-generic-variables",["angular","text!./cam-tasklist-form-generic-variables.html"],function(n,e){"use strict";return["camAPI","Notifications","$translate",function(t,a,i){return{restrict:"A",require:"^camTasklistForm",template:e,link:function(e,s,r,o){var l=t.resource("task");e.$watch("tasklistForm",function(n){e.variablesLoaded=!1});var c={name:"",value:"",type:""},d=e.variableTypes={Boolean:"checkbox",Integer:"text",Long:"text",Short:"text",Double:"text",String:"text",Date:"text"};e.addVariable=function(){var t=n.copy(c);e.variables.push(t)},e.removeVariable=function(t){var a=[];n.forEach(e.variables,function(n,e){e!=t&&a.push(n)}),e.variables=a},e.getVariableNames=function(){return e.variables.map(function(n){return n.name})},e.loadVariables=function(){e.variablesLoaded=!0,l.formVariables({id:o.getParams().taskId,deserializeValues:!1},function(t,s){if(t)return e.variablesLoaded=!1,i("LOAD_VARIABLES_FAILURE").then(function(n){a.addError({status:n,message:t.message,scope:e})});var r=!1;n.forEach(s,function(n,t){d[n.type]&&(e.variables.push({name:t,value:n.value,type:n.type,fixedName:!0}),r=!0)}),r||i("NO_TASK_VARIABLES").then(function(n){a.addMessage({duration:5e3,status:n,scope:e})})})}}}}]}),define("text!scripts/form/directives/cam-tasklist-form-embedded.html",[],function(){return'<div class="form-container">\n</div>'}),define("scripts/form/directives/cam-tasklist-form-embedded",["angular","text!./cam-tasklist-form-embedded.html"],function(n,e){"use strict";return["CamForm","camAPI","$timeout",function(t,a,i){return{restrict:"A",require:"^camTasklistForm",scope:!0,template:e,link:function(e,s,r,o){function l(e,i,s){var r=i.key;s=n.copy(s),delete s.processDefinitionKey,n.extend(s,{containerElement:e,client:a,formUrl:r,done:p}),d=new t(s)}var c=s.find(".form-container"),d=null,u=e.form={$valid:!1,$invalid:!0};e.$watch("tasklistForm",function(n){n&&l(c,n,o.getParams())}),e.$watch(function(){return u&&u.$valid},function(n){o.notifyFormValidated(!n)}),e.$watch(function(){return u&&u.$dirty},function(n){o.notifyFormDirty(n)});var p=function(n,e){if(n)return o.notifyFormInitializationFailed(n);d=e;var t=e.formElement.attr("name"),a=e.formElement.scope();a&&(u=a[t],u.$setPristine(),o.notifyFormInitialized())},f=function(n){d.submit(n)},m=function(e){u.$setPristine(),d.store(),i(function(){n.element(e.target).triggerHandler($.Event("mouseleave"))})};o.registerCompletionHandler(f),o.registerSaveHandler(m),e.$on("authentication.login.required",function(){m()})}}}]}),define("text!scripts/form/directives/cam-tasklist-form-external.html",[],function(){return'<div class="text-help">\n  <span class="glyphicon glyphicon-info-sign"></span>\n  {{ EXTERNAL_FORM_NOTE | translate }}\n</div>\n\n<a ng-href="{{ externalFormUrl  }}"\n   class="external-form">\n  {{ \'EXTERNAL_FORM_LINK\' |translate }}\n  <span class="glyphicon glyphicon-folder-open"></span>\n</a>\n'}),define("scripts/form/directives/cam-tasklist-form-external",["angular","text!./cam-tasklist-form-external.html"],function(n,e){"use strict";return["$location",function(n){return{restrict:"A",require:"^camTasklistForm",scope:!0,template:e,link:function(e,t,a,i){i.notifyFormValidated(!0),e.externalFormUrl=null,e.EXTERNAL_FORM_NOTE=null,e.$watch(function(){return i.getTasklistForm()&&i.getParams()},function(t){if(t){var a=i.getTasklistForm(),s=i.getParams(),r=a.key,o=s.taskId,l=s.processDefinitionKey,c=null;if(o)c="taskId="+o,e.EXTERNAL_FORM_NOTE="TASK_EXTERNAL_FORM_NOTE";else{if(!l)return i.notifyFormInitializationFailed({message:"INIT_EXTERNAL_FORM_FAILED"});c="processDefinitionKey="+l,e.EXTERNAL_FORM_NOTE="PROCESS_EXTERNAL_FORM_NOTE"}var d=n.absUrl(),u=n.url();d=d.replace(u,"/"),e.externalFormUrl=encodeURI(r+"?"+c+"&callbackUrl="+d),i.notifyFormInitialized()}}),e.$watch(function(){return i.getOptions()},function(n){n&&(n.hideCompleteButton=!0)})}}}]}),define("scripts/form/directives/cam-tasklist-unique-value",[],function(){"use strict";return[function(){return{require:"ngModel",link:function(n,e,t,a){var i=function(n){var i=JSON.parse(t.camUniqueValue);if(a.$setValidity("camUniqueValue",!0),n){a.$pristine&&(a.$pristine=!1,a.$dirty=!0,e.addClass("ng-dirty"),e.removeClass("ng-pristine"));for(var s=!1,r=0;r<i.length;r++)if(i[r]===n){if(s){a.$setValidity("camUniqueValue",!1);break}s=!0}}return n};a.$parsers.unshift(i),a.$formatters.push(i),t.$observe("camUniqueValue",function(n){return i(a.$viewValue)})}}}]}),define("scripts/form/index",["angular","./directives/cam-tasklist-form","./directives/cam-tasklist-form-generic","./directives/cam-tasklist-form-generic-variables","./directives/cam-tasklist-form-embedded","./directives/cam-tasklist-form-external","./directives/cam-tasklist-unique-value"],function(n,e,t,a,i,s,r){"use strict";var o=n.module("cam.tasklist.form",["ui.bootstrap"]);return o.directive("camTasklistForm",e),o.directive("camTasklistFormGeneric",t),o.directive("camTasklistFormGenericVariables",a),o.directive("camTasklistFormEmbedded",i),o.directive("camTasklistFormExternal",s),o.directive("camUniqueValue",r),o}),define("text!scripts/filter/directives/cam-tasklist-filters.html",[],function(){return'<div ng-show="!state.$loaded && !state.$error"\n     class="loader">\n  <span class="animate-spin glyphicon glyphicon-refresh"></span>\n  {{ \'LOADING\' | translate }}\n</div>\n\n<div ng-show="state.$error" class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign"></span>\n  <strong class="status">{{ \'FAILURE\' | translate }}:</strong>\n  <span class="message">{{ \'FILTERS_LOADING_FAILURE\' | translate }}</span>\n</div>\n\n<div ng-show="state.$loaded && !state.$error">\n\n  <div ng-hide="totalItems"\n       class="well">\n    <span class="glyphicon glyphicon-info-sign"></span>\n    {{ \'NO_AVAILABLE_FILTER\' | translate }}\n  </div>\n\n  <div ng-show="totalItems"\n       ng-repeat="(delta, filter) in filters | orderBy:\'properties.priority\'"\n       class="task-filter-wrapper"\n       ng-class="{active: isFocused(filter)}"\n       ng-style="{\'z-index\': ((filters.length + 10) - delta) }">\n\n    <div class="task-filter"\n         ng-style="filter.style"\n         ng-click="focus(filter)">\n\n      <div ng-if="isFocused(filter)"\n           class="counter">{{ filterCount }}</div>\n\n      <a ng-click="openModal($event, filter)"\n         class="edit-filter">\n        <span class="glyphicon glyphicon-pencil"></span>\n        <span class="hidden-sm hidden-xs hidden-md"\n              translate="FILTER_DETAILS">Filter details</span>\n      </a>\n\n      <h4 class="name"\n          tooltip="{{ filter.properties.description }}"\n          tooltip-placement="top">{{ filter.name }}</h4>\n    </div>\n  </div>\n</div>\n'}),define("scripts/filter/directives/cam-tasklist-filters",["text!./cam-tasklist-filters.html","angular"],function(n,e){"use strict";var t=(e.element,e.forEach,function(){});return[function(){return{restrict:"A",scope:{filtersData:"=",openModal:"&"},template:n,controller:["$scope","search",function(n,e){var a=n.filtersData=n.filtersData.newChild(n);n.openModal=n.openModal()||t,a.observe("taskList",function(e){n.filterCount=e.count}),n.state=a.observe("filters",function(e){n.totalItems=e.length;for(var t,a=0;t=e[a];a++)t.style={"border-color":t.properties.color,"background-color":t.properties.color};n.filters=e}),a.observe("currentFilter",function(e){n.currentFilter=e}),n.focus=function(t){n.filterCount=void 0,e.updateSilently({filter:t.id}),a.changed("currentFilter")},n.isFocused=function(e){return e.id===n.currentFilter.id}}]}}]}),define("text!scripts/filter/directives/cam-tasklist-filter-modal-form.html",[],function(){return'<form name="filterForm" role="form">\n\n  <accordion close-others="true">\n\n    <accordion-group is-open="accordion.general">\n\n      <accordion-heading>\n        {{ \'FILTER_FORM_BASICS\' | translate }}\n        <span class="glyphicon glyphicon-exclamation-sign"\n              ng-show="showHint(\'filterGeneralForm\')"></span>\n      </accordion-heading>\n\n      <div class="task-filter-hint text-help">\n        <span class="glyphicon glyphicon-info-sign"></span>\n        {{ \'FILTER_FORM_BASICS_HINT\' | translate }}\n      </div>\n\n      <div cam-tasklist-filter-modal-form-general\n           filter="filter"\n           accesses="accesses">\n      </div>\n\n    </accordion-group>\n\n    <accordion-group is-open="accordion.criteria">\n      <accordion-heading>\n        {{ \'FILTER_FORM_CRITERIA\' | translate }}\n        <span class="glyphicon glyphicon-exclamation-sign"\n              ng-show="showHint(\'filterCriteriaForm\')"></span>\n      </accordion-heading>\n\n      <div class="task-filter-hint text-help">\n        <span class="glyphicon glyphicon-info-sign"></span>\n        {{ \'FILTER_FORM_CRITERIA_HINT\' | translate }}\n      </div>\n\n      <div cam-tasklist-filter-modal-form-criteria\n           filter="filter"\n           accesses="accesses">\n      </div>\n\n    </accordion-group>\n\n    <accordion-group is-open="accordion.permission">\n      <accordion-heading>\n        {{ \'FILTER_FORM_PERMISSIONS\' | translate }}\n        <span class="glyphicon glyphicon-exclamation-sign"\n              ng-show="showHint(\'filterPermissionForm\')"></span>\n      </accordion-heading>\n\n      <div class="task-filter-hint text-help">\n        <span class="glyphicon glyphicon-info-sign"></span>\n        {{ \'FILTER_FORM_PERMISSIONS_HINT\' | translate }}\n      </div>\n\n      <div cam-tasklist-filter-modal-form-permission\n           filter="filter"\n           accesses="accesses"\n           filter-modal-form-data="filterModalFormData"\n           is-open="accordion.permission">\n      </div>\n\n    </accordion-group>\n\n    <accordion-group is-open="accordion.variable">\n      <accordion-heading>\n        {{ \'FILTER_FORM_VARIABLES\' | translate }}\n        <span class="glyphicon glyphicon-exclamation-sign"\n              ng-show="showHint(\'filterVariableForm\')"></span>\n      </accordion-heading>\n\n      <div class="task-filter-hint text-help">\n        <span class="glyphicon glyphicon-info-sign"></span>\n        {{ \'FILTER_FORM_VARIABLES_HINT\' | translate }}\n      </div>\n\n      <div cam-tasklist-filter-modal-form-variable\n           filter="filter"\n           accesses="accesses">\n      </div>\n\n    </accordion-group>\n\n  </accordion>\n\n</form>\n\n'}),define("scripts/filter/directives/cam-tasklist-filter-modal-form",["angular","text!./cam-tasklist-filter-modal-form.html"],function(n,e){"use strict";var t=n.isArray,a=function(){},i="general",s="permission",r="criteria",o="variable";return[function(){return{restrict:"A",scope:{filter:"=",filterModalData:"=",registerIsValidProvider:"&",registerPostFilterSavedProvider:"&"},template:e,controller:["$scope",function(n){var e=n.filterModalFormData=n.filterModalData.newChild(n);n.registerIsValidProvider=n.registerIsValidProvider()||a,n.registerPostFilterSavedProvider=n.registerPostFilterSavedProvider()||a;var l=i;n.accordion={general:l===i,permission:l===s,criteria:l===r,variable:l===o},e.observe("accesses",function(e){n.accesses=e});var c=function(){return n.filterForm.$valid};n.registerIsValidProvider(c);var d={};this.registerHintProvider=function(n,e){e=e||a,d[n]=e},n.showHint=function(n){var e=d[n];return e&&e()};var u=[];this.registerPostFilterSavedProvider=function(n){u.push(n||function(n,e){return e()})};var p=function(n,e){var a=u.length;if(0===a)return e();for(var i,s=[],r=function(n){if(a-=1,n&&(t(n)?n.length&&(s=s.concat(n)):s.push(n)),0===a){if(1===s.length)return e(s[0]);if(s.length)return e(s);e()}},o=0;i=u[o];o++)i(n,r)};n.registerPostFilterSavedProvider(p),this.removeArrayItem=function(n,e){var t=[];for(var a in n)a!=e&&t.push(n[a]);return t}}]}}]}),define("text!scripts/filter/directives/cam-tasklist-filter-modal-form-general.html",[],function(){return'<div ng-form class="form-horizontal" role="form" name="filterGeneralForm">\n\n  <div class="row">\n    <div class="col-xs-8">\n      <div class="form-group">\n\n        <label for="filterName"\n               class="col-xs-3 control-label"\n               translate="FILTER_NAME_LABEL">Name</label>\n\n        <div class="col-xs-9">\n          <input class="form-control"\n                 name="filterName"\n                 ng-model="filter.name"\n                 type="text"\n                 required\n                 placeholder="{{ \'FILTER_NAME_PLACEHOLDER\' | translate }}"\n                 ng-readonly="filter.id && !accesses.update"\n                 ng-disabled="filter.id && !accesses.update" />\n\n          <span ng-if="this.filterGeneralForm.filterName.$invalid && this.filterGeneralForm.filterName.$dirty"\n                class="has-error">\n            <span ng-show="this.filterGeneralForm.filterName.$error.required" class="help-block">\n              {{ \'REQUIRED_FIELD\' | translate }}\n            </span>\n          </span>\n\n        </div>\n\n      </div>\n    </div>\n\n    <div class="col-xs-4">\n\n      <div class="form-group">\n\n        <label for="filter-form-color"\n               class="col-xs-6 control-label"\n               translate="FILTER_COLOR_LABEL">Color</label>\n\n        <div class="col-xs-6">\n\n          <input class="form-control"\n                 name="filterColor"\n                 ng-model="filter.properties.color"\n                 ng-pattern="/^#([0-9a-f]{6}|[0-9a-f]{3})$/i"\n                 type="color"\n                 ng-readonly="filter.id && !accesses.update"\n                 ng-disabled="filter.id && !accesses.update" />\n\n          <span ng-if="this.filterGeneralForm.filterColor.$invalid && this.filterGeneralForm.filterColor.$dirty"\n                class="has-error">\n            <span ng-show="this.filterGeneralForm.filterColor.$error.pattern" class="help-block">\n              {{ \'REQUIRED_HEX_COLOR_FIELD\' | translate }}\n            </span>\n          </span>\n\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-xs-8">\n      <div class="form-group">\n\n        <label for="filter-form-description"\n               class="col-xs-3 control-label"\n               translate="FILTER_DESCRIPTION_LABEL">Description</label>\n\n        <div class="col-xs-9">\n          <input class="col-xs-9 form-control"\n                 name="filterDescription"\n                 ng-model="filter.properties.description"\n                 type="text"\n                 placeholder="{{ \'FILTER_DESCRIPTION_PLACEHOLDER\' | translate }}"\n                 ng-readonly="filter.id && !accesses.update"\n                 ng-disabled="filter.id && !accesses.update" />\n        </div>\n\n      </div>\n    </div>\n\n    <div class="col-xs-4">\n      <div class="form-group">\n\n        <label for="filter-form-priority"\n               class="col-xs-6 control-label"\n               translate="FILTER_PRIORITY_LABEL">Priority</label>\n\n        <div class="col-xs-6">\n          <input class="form-control"\n                 name="filterPriority"\n                 ng-model="filter.properties.priority"\n                 ng-pattern="/^-?[\\d]+$/"\n                 type="text"\n                 ng-readonly="filter.id && !accesses.update"\n                 ng-disabled="filter.id && !accesses.update" />\n\n\n          <span ng-if="this.filterGeneralForm.filterPriority.$invalid && this.filterGeneralForm.filterPriority.$dirty"\n                class="has-error">\n            <span ng-show="this.filterGeneralForm.filterPriority.$error.pattern" class="help-block">\n              {{ \'REQUIRED_INTEGER_FIELD\' | translate }}\n            </span>\n          </span>\n\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-xs-8">\n    </div>\n\n    <div class="col-xs-4">\n      <label for="filter-form-refresh"\n             class="col-xs-6 control-label">\n        {{ \'FILTER_REFRESH_LABEL\' | translate }}\n      </label>\n\n      <div class="col-xs-6">\n        <input class="form-control"\n               name="filterRefresh"\n               ng-model="filter.properties.refresh"\n               type="checkbox"\n               tooltip-append-to-body="false"\n               tooltip="{{ \'FILTER_REFRESH_TOOLTIP\' | translate }}"\n               ng-disabled="filter.id && !accesses.update" />\n      </div>\n    </div>\n  </div>\n\n</div>\n'}),define("scripts/filter/directives/cam-tasklist-filter-modal-form-general",["angular","text!./cam-tasklist-filter-modal-form-general.html"],function(n,e){"use strict";return[function(){return{restrict:"A",require:"^camTasklistFilterModalForm",scope:{filter:"=",accesses:"="},template:e,link:function(n,e,t,a){var i=n.filterGeneralForm,s=[];s.push(i.filterColor),s.push(i.filterName),s.push(i.filterPriority),s.push(i.filterDescription),s.push(i.filterRefresh);var r=function(){for(var n,e=0;n=s[e];e++)if(n.$dirty&&n.$invalid)return!0;return!1};a.registerHintProvider("filterGeneralForm",r)}}}]}),define("text!scripts/filter/directives/cam-tasklist-filter-modal-form-criteria.html",[],function(){return'<div ng-form class="form-horizontal" name="filterCriteriaForm" role="form">\n\n  <div class="row labels-left">\n    <div class="col-xs-2 row-action" ng-show="!filter.id || (filter.id && accesses.update)">\n      <a ng-click="addCriterion()"\n         href>\n        <span class="hidden-sm hidden-xs">{{ \'FILTER_ADD_CRITERION\' | translate }}</span>\n        <span class="glyphicon glyphicon-plus-sign"></span>\n      </a>\n    </div>\n\n    <div ng-class="{ \'col-xs-10\': !filter.id || (filter.id && accesses.update) , \'col-xs-12\': !(!filter.id || (filter.id && accesses.update)) }">\n      <div class="form-group" ng-show="query.length">\n        <label class="col-xs-6 control-label"\n               translate="FILTER_CRITERIA_KEY">Key</label>\n        <label class="col-xs-6 control-label"\n               translate="FILTER_CRITERIA_VALUE">Value</label>\n      </div>\n    </div>\n  </div>\n\n  <div ng-repeat="(delta, queryParam) in query" class="row">\n\n    <div ng-form name="criteriaFieldForm">\n      <div ng-init="addForm(this.criteriaFieldForm)"></div>\n\n      <div class="col-xs-2 row-action" ng-show="!filter.id || (filter.id && accesses.update)">\n        <a ng-click="removeCriterion(delta)"\n           href>\n          <span class="hidden-sm hidden-xs">{{ \'FILTER_REMOVE_CRITERION\' | translate }}</span>\n          <span class="glyphicon glyphicon-minus-sign"></span>\n        </a>\n      </div>\n\n      <div ng-class="{ \'col-xs-10\': !filter.id || (filter.id && accesses.update) , \'col-xs-12\': !(!filter.id || (filter.id && accesses.update)) }">\n        <div class="form-group">\n\n          <div class="col-xs-6">\n\n            <select class="form-control"\n                    ng-model="queryParam.key"\n                    name="queryParamKey"\n                    ng-change="valueChanged(queryParam, this.criteriaFieldForm.queryParamValue)"\n                    cam-unique-value="{{ getQueryParamKeys() }}"\n                    required\n                    ng-disabled="filter.id && !accesses.update">\n              <optgroup ng-repeat="criteriaGroup in criteria"\n                        label="{{ criteriaGroup.group | translate }}">\n\n                <option ng-repeat="criterion in criteriaGroup.options"\n                        ng-selected="criterion.name === getCriterionName(queryParam.key)"\n                        ng-value="criterion.name">\n\n                  {{ criterion.label | translate }}\n                  {{ (criterion.expressionSupport ? \'*\' : \'\') }}\n\n                </option>\n              </optgroup>\n\n            </select>\n            <div ng-if="this.criteriaFieldForm.queryParamKey.$invalid && this.criteriaFieldForm.queryParamKey.$dirty"\n                    class="has-error">\n                <span ng-show="this.criteriaFieldForm.queryParamKey.$error.required" class="help-block">\n                  {{ \'REQUIRED_FIELD\' | translate }}\n                </span>\n                <span ng-show="this.criteriaFieldForm.queryParamKey.$error.camUniqueValue" class="help-block">\n                  {{ \'REQUIRE_UNIQUE_KEY\' | translate }}\n                </span>\n            </div>\n          </div>\n\n          <div class="col-xs-6">\n\n            <div ng-if="!booleanCriterion[getCriterionName(queryParam.key)]">\n              <input class="form-control"\n                     name="queryParamValue"\n                     type="text"\n                     ng-model="queryParam.value"\n                     ng-change="valueChanged(queryParam, this.criteriaFieldForm.queryParamValue)"\n                     required\n                     ng-readonly="filter.id && !accesses.update"\n                     ng-disabled="filter.id && !accesses.update" />\n              <span class="help-block text-help"\n                    ng-show="isCriteriaHelpAvailable(queryParam.key)">\n                {{ getCriteriaHelp(queryParam.key) | translate }}\n              </span>\n\n              <div ng-if="this.criteriaFieldForm.queryParamValue.$invalid && this.criteriaFieldForm.queryParamValue.$dirty"\n                   class="has-error">\n                <span ng-show="this.criteriaFieldForm.queryParamValue.$error.required"\n                      class="help-block">\n                  {{ \'REQUIRED_FIELD\' | translate }}\n                </span>\n                <span ng-show="this.criteriaFieldForm.queryParamValue.$error.number"\n                      class="help-block">\n                  {{ \'REQUIRED_INTEGER_FIELD\' | translate }}\n                </span>\n                <span ng-show="this.criteriaFieldForm.queryParamValue.$error.date"\n                      class="help-block">\n                  {{ \'INVALID_DATE\' | translate }}\n                </span>\n              </div>\n            </div>\n\n            <div ng-if="booleanCriterion[getCriterionName(queryParam.key)]"\n                 class="form-control-static">\n              <span class="glyphicon glyphicon-ok"></span>\n              <input type="hidden"\n                     name="queryParamValue"\n                     ng-model="queryParam.value" />\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n\n  </div>\n\n  <div ng-if="canIncludeAssignedTasks()"\n       class="row">\n    <div class="col-xs-10 col-xs-offset-2 checkbox">\n      <label>\n        <input type="checkbox"\n               class="form-control"\n               ng-model="filter.includeAssignedTasks" />\n        {{ \'FILTER_CRITERIA_INCLUDE_ASSIGNED_TASKS\' | translate }}\n      </label>\n      <div class="help-block"\n           translate="FILTER_CRITERIA_INCLUDE_ASSIGNED_TASKS_HINT"></div>\n    </div>\n  </div>\n</div>\n'}),define("scripts/filter/directives/cam-tasklist-filter-modal-criteria",[],function(){"use strict";function n(n,e,t){return function(a){return t&&r.test(a)?{valid:!0}:n.test(a)?{valid:!0}:{valid:!1,error:e||"format"}}}
var e="E.g.: `${ now() }`, `${ dateTime() }` or `${ dateTime().plusWeeks(2) }`",t="E.g.: `${ currentUser() }`",a="List of values separated by comma or an expression which evaluates to a list. E.g.: `camunda-admin, accounting` or `${ currentUserGroups() }`",i="List of values seperated by comma. E.g.: `keyC, keyA, keyB`",s=/^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(|\.[0-9]{0,4})(|Z)$/,r=/^[\s]*(\#|\$)\{/,o=/^-?[\d]+$/,l=[{group:"Process Instance",options:[{name:"processInstanceId",label:"Id"},{name:"processInstanceBusinessKey",label:"Business Key"},{name:"processInstanceBusinessKeyLike",label:"Business Key Like"}]},{group:"Process definition",options:[{name:"processDefinitionId",label:"Id"},{name:"processDefinitionKey",label:"Key"},{name:"processDefinitionKeyIn",label:"Key In",help:i},{name:"processDefinitionName",label:"Name"},{name:"processDefinitionNameLike",label:"Name Like"}]},{group:"Case Instance",options:[{name:"caseInstanceId",label:"Id"},{name:"caseInstanceBusinessKey",label:"Business Key"},{name:"caseInstanceBusinessKeyLike",label:"Business Key Like"}]},{group:"Case definition",options:[{name:"caseDefinitionId",label:"Id"},{name:"caseDefinitionKey",label:"Key"},{name:"caseDefinitionName",label:"Name"},{name:"caseDefinitionNameLike",label:"Name Like"}]},{group:"Other",options:[{name:"active",label:"Active",bool:!0},{name:"activityInstanceIdIn",label:"Activity Instance Id In",help:i},{name:"executionId",label:"Execution Id"}]},{group:"User / Group",options:[{name:"assignee",label:"Assignee",expressionSupport:!0,help:t},{name:"assigneeLike",label:"Assignee Like",expressionSupport:!0,help:t},{name:"owner",label:"Owner",expressionSupport:!0,help:t},{name:"candidateGroup",label:"Candidate Group",expressionSupport:!0,includeAssignedTasksSupport:!0},{name:"candidateGroups",label:"Candidate Groups",expressionSupport:!0,help:a,includeAssignedTasksSupport:!0},{name:"candidateUser",label:"Candidate User",expressionSupport:!0,help:t,includeAssignedTasksSupport:!0},{name:"involvedUser",label:"Involved User",expressionSupport:!0,help:t},{name:"unassigned",label:"Unassigned",bool:!0},{name:"delegationState",label:"Delegation State"}]},{group:"Task",options:[{name:"taskDefinitionKey",label:"Definition Key"},{name:"taskDefinitionKeyIn",label:"Definition Key In",help:i},{name:"taskDefinitionKeyLike",label:"Definition Key Like"},{name:"name",label:"Name"},{name:"nameLike",label:"Name Like"},{name:"description",label:"Description"},{name:"descriptionLike",label:"Description Like"},{name:"priority",label:"Priority",validate:n(o,"number")},{name:"maxPriority",label:"Priority Max",validate:n(o,"number")},{name:"minPriority",label:"Priority Min",validate:n(o,"number")}]},{group:"Dates",validate:n(s,"date",!0),options:[{name:"createdBefore",label:"Created Before",expressionSupport:!0,help:e},{name:"createdAfter",label:"Created After",expressionSupport:!0,help:e},{name:"dueBefore",label:"Due Before",expressionSupport:!0,help:e},{name:"dueAfter",label:"Due After",expressionSupport:!0,help:e},{name:"followUpAfter",label:"Follow Up After",expressionSupport:!0,help:e},{name:"followUpBefore",label:"Follow Up Before",expressionSupport:!0,help:e},{name:"followUpBeforeOrNotExistent",label:"Follow Up Before or Not Existent",expressionSupport:!0,help:e}]}];return l.map(function(n){return n.name=n.group.toLowerCase().replace(/[^a-z0-9-]+/g,"-"),n})}),define("scripts/filter/directives/cam-tasklist-filter-modal-form-criteria",["angular","text!./cam-tasklist-filter-modal-form-criteria.html","./cam-tasklist-filter-modal-criteria"],function(n,e,t){"use strict";var a=n.forEach,i=n.copy,s={},r={},o={},l={},c={},d=function(){return{valid:!0}};return a(t,function(n){a(n.options,function(e){s[e.name]=e.includeAssignedTasksSupport,s[e.name]&&(s[e.name+"Expression"]=!0),e.bool&&(r[e.name]=!0),o[e.name]=e.expressionSupport,l[e.name]=e.help||n.help,c[e.name]=e.validate||n.validate||d})}),[function(){return{restrict:"A",require:"^camTasklistFilterModalForm",scope:{filter:"=",accesses:"="},template:e,link:function(n,e,a,d){var u={key:"",value:""};n.criteria=t,n.criteriaExpressionSupport=o,n.criteriaHelp=l,n.booleanCriterion=r,n.query=n.filter.query=n.filter.query||[],n.query=n.filter.query=n.query.filter(function(e){return"includeAssignedTasks"===e.key&&(n.includeAssignedTasks=n.filter.includeAssignedTasks=e.value),"includeAssignedTasks"!==e.key}),n.canIncludeAssignedTasks=function(){for(var e=0;e<n.query.length;e++)if(s[n.query[e].key])return!0;return!1},n.$watch("query",function(){n.includeAssignedTasks=n.filter.includeAssignedTasks=n.canIncludeAssignedTasks()&&n.filter.includeAssignedTasks},!0);var p=function(){for(var n,e=0;n=f[e];e++){var t=n.queryParamKey,a=n.queryParamValue;if(t.$dirty&&t.$invalid)return!0;if(a.$dirty&&a.$invalid)return!0}return!1};d.registerHintProvider("filterCriteriaForm",p);var f=[];n.addForm=function(n){f.push(n)},n.addCriterion=function(){var e=i(u);n.query.push(e)},n.removeCriterion=function(e){n.filter.query=n.query=d.removeArrayItem(n.query,e),f=d.removeArrayItem(f,e)},n.valueChanged=function(n,e){if(e.$setValidity("number",!0),e.$setValidity("date",!0),r[n.key])n.value=!0;else if(n.value){e.$pristine&&e.$setViewValue(n.value);var t=m(n.key),a=c[t](n.value);a.valid||e.$setValidity(a.error,!1)}},n.getQueryParamKeys=function(){for(var e,t=[],a=0;e=n.query[a];a++){var i=m(e.key);t.push(i),o[i]&&t.push(i+"Expression")}return t};var m=n.getCriterionName=function(n){if(!n)return n;var e=n.replace("Expression","");return e},v=n.getCriteriaHelp=function(n){return n=m(n),l[n]};n.isCriteriaHelpAvailable=function(n){return!!v(n)}}}}]}),define("text!scripts/filter/directives/cam-tasklist-filter-modal-form-variable.html",[],function(){return'<div ng-form class="form-horizontal" name="filterVariableForm" role="form">\n\n  <div ng-show="variables.length > 5"\n       class="alert alert-warning"\n       role="alert">\n    <span class="glyphicon glyphicon-exclamation-sign"></span>\n    {{ \'FILTER_VARIABLES_AMOUNT_WARNING\' | translate }}\n  </div>\n\n\n  <div class="row labels-left">\n    <div class="col-xs-12">\n      <div class="undefined-variable checkbox">\n        <label>\n          <input type="checkbox"\n                 class="form-control"\n                 ng-model="filter.properties.showUndefinedVariable" />\n          {{ \'FILTER_FORM_VARIABLES_SHOW_UNDEFINED\' | translate }}\n        </label>\n      </div>\n    </div>\n\n    <div class="col-xs-2 row-action" ng-show="!filter.id || (filter.id && accesses.update)">\n      <a ng-click="addVariable()"\n         href>\n        <span class="hidden-sm hidden-xs">{{ \'FILTER_ADD_VARIABLE\' | translate }}</span>\n        <span class="glyphicon glyphicon-plus-sign"></span>\n      </a>\n    </div>\n\n    <div ng-class="{ \'col-xs-10\': !filter.id || (filter.id && accesses.update) , \'col-xs-12\': !(!filter.id || (filter.id && accesses.update)) }">\n      <div class="form-group" ng-show="variables.length">\n        <label class="col-xs-6 control-label"\n               translate="FILTER_VARIABLE_NAME">Name</label>\n        <label class="col-xs-6 control-label"\n               translate="FILTER_VARIABLE_LABEL">Label</label>\n      </div>\n    </div>\n  </div>\n\n  <div ng-repeat="(delta, variable) in variables" class="row">\n\n    <div ng-form name="variableFieldForm">\n      <div ng-init="addForm(this.variableFieldForm)"></div>\n\n      <div class="col-xs-2 row-action" ng-show="!filter.id || (filter.id && accesses.update)">\n        <a ng-click="removeVariable(delta)"\n           href>\n          <span class="hidden-sm hidden-xs">{{ \'FILTER_REMOVE_VARIABLE\' | translate }}</span>\n          <span class="glyphicon glyphicon-minus-sign"></span>\n        </a>\n      </div>\n\n\n      <div ng-class="{ \'col-xs-10\': !filter.id || (filter.id && accesses.update) , \'col-xs-12\': !(!filter.id || (filter.id && accesses.update)) }">\n        <div class="form-group">\n\n          <div class="col-xs-6">\n\n            <input class="form-control"\n                   type="text"\n                   name="variableName"\n                   ng-model="variable.name"\n                   placeholder="{{ \'FILTER_VARIABLE_NAME_PLACEHOLDER\' | translate }}"\n                   required\n                   ng-readonly="filter.id && !accesses.update"\n                   ng-disabled="filter.id && !accesses.update" />\n\n              <div ng-if="this.variableFieldForm.variableName.$invalid && this.variableFieldForm.variableName.$dirty"\n                    class="has-error">\n                <span ng-show="this.variableFieldForm.variableName.$error.required" class="help-block">\n                  {{ \'REQUIRED_FIELD\' | translate }}\n                </span>\n              </div>\n\n          </div>\n\n          <div class="col-xs-6">\n            <input class="form-control"\n                   type="text"\n                   name="variableLabel"\n                   ng-model="variable.label"\n                   placeholder="{{ \'FILTER_VARIABLE_LABEL_PLACEHOLDER\' | translate }}"\n                   required\n                   ng-readonly="filter.id && !accesses.update"\n                   ng-disabled="filter.id && !accesses.update" />\n              <div ng-if="this.variableFieldForm.variableLabel.$invalid && this.variableFieldForm.variableLabel.$dirty"\n                    class="has-error">\n                <span ng-show="this.variableFieldForm.variableLabel.$error.required" class="help-block">\n                  {{ \'REQUIRED_FIELD\' | translate }}\n                </span>\n              </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n'}),define("scripts/filter/directives/cam-tasklist-filter-modal-form-variable",["text!./cam-tasklist-filter-modal-form-variable.html"],function(n){"use strict";var e=angular.copy;return[function(){return{restrict:"A",require:"^camTasklistFilterModalForm",scope:{filter:"=",accesses:"="},template:n,link:function(n,t,a,i){var s={name:"",label:""};n.filter.properties.showUndefinedVariable=n.filter.properties.showUndefinedVariable||!1,n.variables=n.filter.properties.variables=n.filter.properties.variables||[];var r=function(){for(var n,e=0;n=o[e];e++){var t=n.variableName,a=n.variableLabel;if(t.$dirty&&t.$invalid)return!0;if(a.$dirty&&a.$invalid)return!0}return!1};i.registerHintProvider("filterVariableForm",r);var o=[];n.addForm=function(n){o.push(n)},n.addVariable=function(){var t=e(s);n.variables.push(t)},n.removeVariable=function(e){n.filter.properties.variables=n.variables=i.removeArrayItem(n.variables,e),o=i.removeArrayItem(o,e)}}}}]}),define("text!scripts/filter/directives/cam-tasklist-filter-modal-form-permission.html",[],function(){return'<div ng-form class="form-horizontal" name="filterPermissionForm" role="form">\n\n  <div ng-show="!authorizationState.$loaded && !authorizationState.$error"\n       class="loader">\n    <span class="animate-spin glyphicon glyphicon-refresh"></span>\n    {{ \'LOADING\' | translate }}\n  </div>\n\n  <div ng-show="authorizationState.$error" class="alert alert-danger" role="alert">\n    <span class="glyphicon glyphicon-exclamation-sign"></span>\n    <strong class="status">{{ \'FAILURE\' | translate }}:</strong>\n    <span class="message">{{ \'FILTER_FORM_PERMISSIONS_LOADING_FAILURE\' | translate }}</span>\n  </div>\n\n  <div ng-show="authorizationState.$loaded && !authorizationState.$error">\n\n    <div class="alert alert-warning">\n      <span class="glyphicon glyphicon-exclamation-sign"></span>\n      <span>{{ \'FILTER_FORM_PERMISSIONS_EDIT_HINT\' | translate }}</span>\n    </div>\n\n    <div class="global-access checkbox form-control-static"\n         ng-show="!filter.id || (filter.id && accesses.update)">\n      <label>\n        <input type="checkbox"\n               class="form-control"\n               ng-model="isGlobalReadAuthorization"\n               ng-change="globalReadAuthorizationChanged()"\n               ng-disabled="filter.id && !accesses.update" />\n         {{ \'FILTER_FORM_PERMISSIONS_GLOBAL\' | translate }}\n      </label>\n    </div>\n\n    <div class="user-read-permissions"\n         ng-show="(!filter.id || (filter.id && accesses.update)) && !isGlobalReadAuthorization">\n      <div class="form-group labels-left">\n\n        <div class="col-xs-2 align-right">\n          <button class="btn btn-link"\n                  ng-click="addReadPermission()"\n                  type="button"\n                  ng-disabled="disableAddButton()">\n            <span class="hidden-sm hidden-xs">{{ \'ADD_PERMISSION\' | translate }}</span>\n            <span class="glyphicon glyphicon-plus-sign"></span>\n          </button>\n        </div>\n\n        <label class="col-xs-2 control-label">\n          {{ \'FILTER_FORM_PERMISSION_GROUP_USER\' | translate }}\n        </label>\n        <label class="col-xs-8 control-label">\n          {{ \'FILTER_FORM_PERMISSION_IDENTIFIER\' | translate }}\n        </label>\n      </div>\n\n\n\n\n\n\n\n      <div class="form-group"\n           ng-repeat="auth in getReadAuthorizations(authorizations)">\n        <div class="col-xs-2 row-action"\n             ng-show="!filter.id || (filter.id && accesses.update)">\n          <button class="btn btn-link btn-remove"\n                  ng-if="!isGlobalReadAuthorization"\n                  ng-click="removeReadPermission(auth)">\n            <span class="hidden-sm hidden-xs">\n              {{ \'FILTER_FORM_PERMISSIONS_REMOVE\' | translate }}\n            </span>\n            <span class="glyphicon glyphicon-minus-sign"></span>\n          </button>\n        </div>\n\n        <div class="col-xs-2">\n          <span class="fake-button">\n            <span class="glyphicon"\n                  ng-class="\'glyphicon-\' + (!!auth.userId ? \'user\' : \'th\')"></span>\n          </span>\n        </div>\n\n        <div class="form-control-static"\n             ng-class="{ \'col-xs-8\': !filter.id || (filter.id && accesses.update) , \'col-xs-10\': !(!filter.id || (filter.id && accesses.update)) }">\n\n          {{ (auth.userId || auth.groupId) }}\n        </div>\n      </div><!-- repeat auth -->\n\n      <div class="form-group new-permission"\n           ng-if="showNewPermissionFields">\n        <div class="col-xs-2 col-xs-offset-2">\n          <button class="btn btn-default"\n                  type="button"\n                  tooltip-append-to-body="false"\n                  tooltip="{{ \'FILTER_FORM_PERMISSIONS_IDENTITY_TYPE_TOOLTIP\' | translate }}: {{ (newPermission.type === \'user\' ? \'FILTER_FORM_PERMISSIONS_IDENTITY_TYPE_USER\' : \'FILTER_FORM_PERMISSIONS_IDENTITY_TYPE_GROUP\') | translate }}"\n                  ng-click="switchType()"\n                  ng-disabled="isGlobalReadAuthorization">\n            <span class="glyphicon"\n                  ng-class="newPermission.type === \'user\' ? \'glyphicon-user\' : \'glyphicon-th\'"></span>\n          </button>\n        </div>\n\n        <div class="col-xs-8">\n          <input type="text"\n                 name="newPermission"\n                 placeholder="{{ (newPermission.type === \'user\' ? \'FILTER_FORM_PERMISSIONS_USER_ID\' : \'FILTER_FORM_PERMISSIONS_GROUP_ID\') | translate }}"\n                 class="form-control"\n                 ng-model="newPermission.id"\n                 ng-change="validateNewPermission()"\n                 ng-keydown="keyPressed($event)"\n                 ng-readonly="isGlobalReadAuthorization"\n                 ng-disabled="filter.id && !accesses.update" />\n\n          <div ng-if="this.filterPermissionForm.newPermission.$invalid && this.filterPermissionForm.newPermission.$dirty"\n               class="has-error">\n            <span ng-show="this.filterPermissionForm.newPermission.$error.required"\n                  class="help-block">\n              {{ \'REQUIRED_FIELD\' | translate }}\n            </span>\n            <span ng-show="this.filterPermissionForm.newPermission.$error.duplicate && newPermission.type === \'user\'"\n                  class="help-block">\n              {{ \'FILTER_FORM_PERMISSIONS_DUPLICATE_USER\' | translate }}\n            </span>\n            <span ng-show="this.filterPermissionForm.newPermission.$error.duplicate && newPermission.type === \'group\'"\n                  class="help-block">\n              {{ \'FILTER_FORM_PERMISSIONS_DUPLICATE_GROUP\' | translate }}\n            </span>\n          </div>\n        </div>\n      </div><!-- new perm -->\n    </div>\n\n  </div>\n\n</div>\n'}),define("scripts/filter/directives/cam-tasklist-filter-modal-form-permission",["angular","text!./cam-tasklist-filter-modal-form-permission.html"],function(n,e){"use strict";var t=n.copy,a=5;return["camAPI","$q",function(i,s){return{restrict:"A",require:"^camTasklistFilterModalForm",scope:{filter:"=",accesses:"=",filterModalFormData:"=",isOpen:"="},template:e,link:function(e,r,o,l){function c(n,e){function a(n,a){var s=a.$permissions;delete a.$permissions,delete a.$$hashKey,a.resourceId=a.resourceId||e.id;var o=function(e,o){r-=1,e?(O.push({status:"FILTER_FORM_PERMISSIONS_SAVE_ERROR",error:e}),a.$permissions=s):"create"===n?(a.id=o.id,a.permissions=t(o.permissions||[]),a.$permissions=t(o.permissions||[])):("delete"===n&&(a.id=null),a.permissions=t(a.permissions||[]),a.$permissions=t(a.permissions||[])),0===r&&i.resolve()};"create"===n?D.create(a,o):"update"===n?D.update(a,o):"delete"===n&&D["delete"](a.id,o)}var i=s.defer();n=n||[];var r=n.length;0===r&&i.resolve();for(var o,l=0;o=n[l];l++){var c=o.type,d=o.authorization;a(c,d)}return i.promise}function d(n){for(var e,a=0;e=n[a];a++)e.$permissions=t(e.permissions||[])}function u(){return A.newPermission}function p(n){return n&&0===n.type}function f(n){return n&&1===n.type}function m(n){n=n||{};var e=n.userId||n.groupId;return"*"===e}function v(n,e){return!!n[e]}function g(n){if(n&&n.permissions)for(var e,t=n.permissions,a=0;e=t[a];a++)if("READ"===e||"ALL"===e)return!0;return!1}function h(n){for(var e,t=0;e=n[t];t++)if(p(e))return e}function k(n){for(var e,t=[],a=0;e=n[a];a++)f(e)&&!m(e)&&g(e)&&t.push(e);return t}function b(n,e){for(var t,a=y(n,e),i={},s=0;t=a[s];s++){var r=t[e];i[r]=t}return i}function y(n,e){for(var t,a=[],i=0;t=n[i];i++)f(t)&&v(t,e)&&!m(t)&&a.push(t);return a}function E(n){if(n){var e=n.permissions;e&&e.length?e&&1===e.length?n.permissions=n.permissions.concat(["READ"]):n.permissions=["ALL"]:n.permissions=["READ"]}}function I(n){if(n){var e=n.permissions;if(e&&1===e.length){var t=e[0];"ALL"===t?n.permissions=["UPDATE","DELETE"]:"READ"===t&&(n.permissions=[])}else{n.permissions=[];for(var a,i=0;a=e[i];i++)"READ"!==a&&n.permissions.push(a)}}}e.showNewPermissionFields=!1,e.$watch("isOpen",function(n,t){e.disableAddButton()||n||!t||e.addReadPermission(),e.showNewPermissionFields=!1}),e.$on("pre-submit",function(){e.disableAddButton()||e.addReadPermission(),e.showNewPermissionFields=!1});var D=i.resource("authorization"),w=e.filterModalFormData.newChild(e),A=e.filterPermissionForm,T=null,S=null,_=null,F=null,R={resourceType:a,permissions:["READ"]},x={type:"user",id:null},L=e.newPermission=t(x),$=function(){var n=u();return n&&n.$error&&n.$error.duplicate};l.registerHintProvider("filterPermissionForm",$),w.provide("authorizations",["filter",function(n){var e=s.defer();return n&&n.id?D.list({resourceType:a,resourceId:n.id},function(n,t){n?e.reject(n):e.resolve(t)}):e.resolve([]),e.promise}]),e.authorizationState=w.observe("authorizations",function(n){T=e.authorizations=t(n)||[],d(T),S=h(T),e.isGlobalReadAuthorization=g(S),_=b(T,"groupId"),F=b(T,"userId")}),e.globalReadAuthorizationChanged=function(){e.isGlobalReadAuthorization?(S?E(S):(S=n.extend({userId:"*",type:0},R),T.push(S)),L.id=null,N()):S&&I(S)},e.switchType=function(){L.type="user"===L.type?"group":"user",N()},e.getReadAuthorizations=function(n){return n?k(n):void 0};var N=e.validateNewPermission=function(){var n=u();if(n){n.$setValidity("authorization",!0),n.$setValidity("duplicate",!0);var e=L.id;if(e){var t="user"===L.type?F:_,a=t[e];if(a&&g(a))return n.$setValidity("duplicate",!1)}}};e.disableAddButton=function(){if(!e.showNewPermissionFields)return!1;var n=u();return e.isGlobalReadAuthorization||!L.id||n&&n.$error&&n.$error.duplicate};var C=e.addReadPermission=function(){if(!e.showNewPermissionFields)return void(e.showNewPermissionFields=!0);var t=u(),a=L.id,i="user"===L.type?F:_,s=i[a];if(s){E(s);var r=T;T=e.authorizations=[];for(var o,l=0;o=r[l];l++)o!==s&&T.push(o);T.push(s)}else{s={type:1};var c="user"===L.type?"userId":"groupId";s[c]=a,n.extend(s,R),T.push(s),i[a]=s}L.id=null,t.$setValidity("authorization",!0),t.$setPristine()};e.keyPressed=function(n){var e=n.keyCode;if(13===e){n.preventDefault&&n.preventDefault();var t=u();return L.id&&t&&(!t.$error||!t.$error.duplicate)&&C()}},e.removeReadPermission=function(n){I(n),N()};var O=[],P=function(n,t){var a=[];if(O=[],e.isGlobalReadAuthorization)for(var i,s=0;i=T[s];s++)f(i)&&g(i)&&I(i);for(var r,o=0;r=T[o];o++){var l=r.permissions,d=r.$permissions;(f(r)||p(r))&&(r.id?!l.length&&d.length?a.push({type:"delete",authorization:r}):l.length!==d.length&&a.push({type:"update",authorization:r}):l.length&&a.push({type:"create",authorization:r}))}c(a,n).then(function(){return O&&O.length||(O=null),"function"==typeof t?t(O):void 0})};l.registerPostFilterSavedProvider(P)}}}]}),define("text!scripts/filter/modals/cam-tasklist-filter-modal.html",[],function(){return'<div class="modal-header">\n  <h3 class="modal-title">\n    {{ (\n      filter.id && !deletion ?\n      (accesses.update ? \'FILTER_EDIT\' : \'FILTER_DETAILS\') :\n      (deletion ? \'FILTER_DELETE\' : \'FILTER_CREATE\')\n    ) | translate }}\n  </h3>\n</div>\n\n\n\n<div class="modal-body">\n\n  <div notifications-panel />\n\n  <div ng-show="!deletion"\n       cam-tasklist-filter-modal-form\n       filter="filter"\n       filter-modal-data="filterModalData"\n       register-is-valid-provider="registerValidationProvider"\n       register-post-filter-saved-provider="registerPostFilterSavedProvider">\n  </div>\n\n  <div ng-show="deletion"\n       class="alert alert-warning"\n       role="alert">\n    <span class="glyphicon glyphicon-exclamation-sign"></span>\n    {{ \'FILTER_DELETION_WARNING\' | translate }}\n  </div>\n\n</div>\n\n\n<div class="modal-footer">\n\n  <div class="row row-action">\n\n    <div class="col-xs-4 align-left">\n\n      <button ng-show="!deletion && filter.id && accesses.delete"\n              class="btn btn-xs btn-link"\n              type="button"\n              ng-click="confirmDeletion()"\n              translate="FILTER_DELETE">Delete filter</button>\n\n\n      <button ng-show="deletion"\n              class="btn btn-xs btn-link"\n              type="button"\n              ng-click="abortDeletion()"\n              translate="FILTER_EDIT">Edit filter</button>\n    </div>\n\n    <div class="col-xs-8">\n      <div class="row">\n        <div class="col-xs-12">\n\n          <button class="btn btn-xs btn-link"\n                  type="button"\n                  ng-click="$dismiss()"\n                  translate="CLOSE">Close</button>\n\n          <button ng-if="!deletion && (!filter.id || (filter.id && accesses.update))"\n                  class="btn btn-primary"\n                  type="submit"\n                  ng-disabled="!isValid()"\n                  ng-click="submit()"\n                  translate="SAVE">Save</button>\n\n\n          <button ng-if="deletion"\n                  class="btn btn-primary"\n                  type="submit"\n                  ng-click="delete()"\n                  translate="DELETE">Delete</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'}),define("scripts/filter/controllers/cam-tasklist-filters-ctrl",["text!./../modals/cam-tasklist-filter-modal.html"],function(n){"use strict";return["$scope","$modal","$q","camAPI",function(e,t,a,i){var s=e.filtersData=e.tasklistData.newChild(e),r=i.resource("filter");e.userCanCreateFilter=!1,s.provide("filterAuthorizations",function(){var n=a.defer();return r.authorizations(function(e,t){e?n.reject(e):n.resolve(t)}),n.promise}),s.provide("userCanCreateFilter",["filterAuthorizations",function(n){n=n||{};for(var e,t=n.links||[],a=0;e=t[a];a++)if("create"===e.rel)return!0;return!1}]),s.observe("userCanCreateFilter",function(n){e.userCanCreateFilter=n}),e.openModal=function(e,a){e.stopPropagation(),t.open({windowClass:"filter-modal",size:"lg",controller:"camFilterModalCtrl",template:n,resolve:{filter:function(){return a},filtersData:function(){return s}}}).result.then(function(){s.changed("filters")},function(){s.changed("filters")})}}]}),define("scripts/filter/modals/cam-tasklist-filter-modal",["angular"],function(n){"use strict";function e(n,e){if(p.test(n)){"%"!==e[0]&&(e="%"+e);var t=e.length-1;"%"!==e[t]&&(e+="%")}return e}function t(n,e){return p.test(n)&&("%"===e[0]&&(e=e.slice(1,e.length)),"%"===e.slice(-1)&&(e=e.slice(0,-1))),e}function a(n){return f.test(n)}function i(n){return m.test(n)}function s(n){return o(Object.keys(n),function(e){"$"===e[0]||l(n[e])&&!n[e].length?delete n[e]:(c(n[e])||l(n[e]))&&(n[e]=s(n[e]))}),n}var r=n.copy,o=n.forEach,l=n.isArray,c=n.isObject,d="Task",u="#EEEEEE",p=/Like$/,f=/Variables$/,m=/^[\s]*(\#|\$)\{/;return["$scope","$translate","$q","Notifications","camAPI","filter","filtersData",function(n,c,p,f,m,v,g){function h(e,t,a){c(e).then(function(e){f.addError({status:e,message:t?t.message:"",exclusive:a,scope:n})})}var k=m.resource("filter"),b=n.filterModalData=g.newChild(n);n.$on("$locationChangeStart",function(){n.$dismiss()}),n.deletion=!1,n.filter=r(v||{}),n.filter.name=n.filter.name,n.filter.properties=n.filter.properties||{},n.filter.properties.description=n.filter.properties.description,n.filter.properties.priority=parseInt(n.filter.properties.priority||0,10),n.filter.properties.color=n.filter.properties.color||u,n.filter.properties.refresh=n.filter.properties.refresh||!1,n.filter.properties.showUndefinedVariable=n.filter.properties.showUndefinedVariable||!1;var y=n.filter.id;n.filter.properties.variables=n.filter.properties.variables||[];var E=n.filter.query=n.filter.query||{},I=[],D=[];for(var w in E){var A=E[w];a(w)?D.push({key:w,value:A}):I.push({key:w,value:t(w,A)})}n.filter.query=I,b.provide("filter",n.filter),b.provide("userFilterAccess",["filter",function(n){var e=p.defer();return n&&n.id?k.authorizations(n.id,function(n,t){n?e.reject(n):e.resolve(t)}):e.resolve({links:[]}),e.promise}]),b.provide("accesses",["userFilterAccess",function(n){var e={};return o(n.links,function(n){e[n.rel]=!0}),e}]),b.observe("accesses",function(e){n.accesses=e});var T=function(){return!1};n.isValid=T,n.registerValidationProvider=function(e){n.isValid=e||T};var S=function(n,e){return e()};n.registerPostFilterSavedProvider=function(n){S=n||S},n.submit=function(){n.$broadcast("pre-submit");for(var t,r=(n.filter.query||[]).concat(D),o={},c=0;t=r[c];c++){var p=t.key,f=t.value;if(!a(p))if(f=e(p,f),i(f)?-1===p.indexOf("Expression")&&(p+="Expression"):-1!==p.indexOf("Expression")&&(p=p.slice(0,p.indexOf("Expression"))),"candidateGroups"===p||"In"===p.slice(-2)){if("string"==typeof f){f=f.split(",");for(var m=0;m<f.length;m++)f[m]&&(f[m]=f[m].trim())}}else f=""+f;o[p]=f}n.filter.includeAssignedTasks&&(o.includeAssignedTasks=!0);var v={id:y,name:n.filter.name,resourceType:d,query:o,properties:{description:n.filter.properties.description,priority:parseInt(n.filter.properties.priority||0,10),color:n.filter.properties.color||u,refresh:n.filter.properties.refresh,variables:n.filter.properties.variables,showUndefinedVariable:n.filter.properties.showUndefinedVariable}};s(v),k.save(v,function(e,t){return e?h("FILTER_SAVE_ERROR",e,!0):(v.id=y=y||t.id,void S(v,function(e){if(e)if(l(e)&&e.length)for(var t,a=0;t=e[a];a++)h(t.status,t.error,0===a);else h(e.status,e.error,!0);else n.$close()}))})},n.abortDeletion=function(){n.deletion=!1},n.confirmDeletion=function(){n.deletion=!0},n["delete"]=function(){k["delete"](n.filter.id,function(e){return e?h("FILTER_DELETION_ERROR",e,!0):void n.$close()})}}]}),define("scripts/filter/index",["angular","./directives/cam-tasklist-filters","./directives/cam-tasklist-filter-modal-form","./directives/cam-tasklist-filter-modal-form-general","./directives/cam-tasklist-filter-modal-form-criteria","./directives/cam-tasklist-filter-modal-form-variable","./directives/cam-tasklist-filter-modal-form-permission","./controllers/cam-tasklist-filters-ctrl","./modals/cam-tasklist-filter-modal"],function(n,e,t,a,i,s,r,o,l){"use strict";var c=n.module("cam.tasklist.filter",["ui.bootstrap"]);return c.directive("camTasklistFilters",e),c.directive("camTasklistFilterModalForm",t),c.directive("camTasklistFilterModalFormGeneral",a),c.directive("camTasklistFilterModalFormCriteria",i),c.directive("camTasklistFilterModalFormVariable",s),c.directive("camTasklistFilterModalFormPermission",r),c.controller("camFiltersCtrl",o),c.controller("camFilterModalCtrl",l),c}),define("camunda-tasklist-ui",["camunda-commons-ui","camunda-bpm-sdk-js","angular-data-depend","scripts/config/date","scripts/config/routes","scripts/config/locales","scripts/config/tooltip","scripts/config/uris","scripts/controller/cam-tasklist-app-ctrl","scripts/controller/cam-tasklist-view-ctrl","scripts/services/cam-tasklist-assign-notification","scripts/services/cam-tasklist-configuration","scripts/user/index","scripts/variable/index","scripts/tasklist/index","scripts/task/index","scripts/process/index","scripts/navigation/index","scripts/form/index","scripts/filter/index","scripts/api/index","text!scripts/index.html"],function(){"use strict";function n(){var n=require("angular"),e=n.element;e(document).ready(function(){n.bootstrap(document,["cam.tasklist","cam.embedded.forms","cam.tasklist.custom"]),setTimeout(function(){var n=e("[autofocus]");n.length&&n[0].focus()},300)})}function e(){function e(){for(var n=t.element("base"),e={},a=["href","app-root","admin-api","tasklist-api","engine-api"],i=0;i<a.length;i++)e[a[i]]=n.attr(a[i]);return e}var t=require("angular"),s=["cam.commons","pascalprecht.translate","ngRoute","dataDepend",require("scripts/user/index").name,require("scripts/variable/index").name,require("scripts/tasklist/index").name,require("scripts/task/index").name,require("scripts/process/index").name,require("scripts/navigation/index").name,require("scripts/form/index").name,require("scripts/filter/index").name,require("scripts/api/index").name].concat(a.map(function(n){return n.ngModuleName})),r=e();if(i=t.module("cam.tasklist",s),i.factory("assignNotification",require("scripts/services/cam-tasklist-assign-notification")),i.provider("configuration",require("scripts/services/cam-tasklist-configuration")),require("scripts/config/locales")(i,r["app-root"]),require("scripts/config/uris")(i,r),i.config(require("scripts/config/routes")),i.config(require("scripts/config/date")),i.config(require("scripts/config/tooltip")),i.controller("camTasklistAppCtrl",require("scripts/controller/cam-tasklist-app-ctrl")),i.controller("camTasklistViewCtrl",require("scripts/controller/cam-tasklist-view-ctrl")),"undefined"!=typeof window.camTasklistConf&&window.camTasklistConf.customScripts){var o=window.camTasklistConf.customScripts||{},l={};["baseUrl","paths","bundles","shim","map","config","packages","waitSeconds","context","callback","enforceDefine","xhtml","urlArgs","scriptType"].forEach(function(n){o[n]&&(l[n]=o[n])}),require.config(l),require(o.deps||[],function(){t.module("cam.tasklist.custom",o.ngDeps),n.apply(this,arguments)})}else t.module("cam.tasklist.custom",[]),require([],function(){n()})}var t=window.PLUGIN_PACKAGES||[],a=window.PLUGIN_DEPENDENCIES||[];require.config({packages:t});var i,s=["camunda-commons-ui"].concat(a.map(function(n){return n.requirePackageName}));require(s,e)});
//# sourceMappingURL=camunda-tasklist-ui.js.map