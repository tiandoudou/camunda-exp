{"version":3,"sources":["../../camunda-commons-ui/node_modules/angular-data-depend/src/dataDepend.js","scripts/config/date.js","scripts/index.html!text","text!scripts/user/controller/cam-auth-login.html","scripts/api/index.js","scripts/user/controller/cam-user-logout-ctrl.js","scripts/user/controller/cam-user-login-ctrl.js","scripts/user/index.js","scripts/config/routes.js","scripts/config/locales.js","scripts/config/tooltip.js","scripts/config/uris.js","scripts/controller/cam-tasklist-app-ctrl.js","scripts/controller/cam-tasklist-view-ctrl.js","scripts/services/cam-tasklist-assign-notification.js","scripts/services/cam-tasklist-configuration.js","text!scripts/variable/directives/cam-tasklist-variables.html","text!scripts/variable/modals/cam-tasklist-variables-detail-modal.html","scripts/variable/directives/cam-tasklist-variables.js","scripts/variable/modals/cam-tasklist-variables-detail-modal.js","../../camunda-commons-ui/node_modules/angular-moment/angular-moment.js","scripts/variable/index.js","scripts/tasklist/controller/cam-tasklist-list-ctrl.js","text!scripts/tasklist/directives/cam-tasklist-sorting-choices.html","scripts/tasklist/directives/cam-tasklist-sorting-choices.js","text!scripts/tasklist/directives/cam-tasklist-sorting-dropdown.html","scripts/tasklist/directives/cam-tasklist-sorting-dropdown.js","text!scripts/tasklist/directives/cam-tasklist-sorting-inputs.html","scripts/tasklist/directives/cam-tasklist-sorting-inputs.js","text!scripts/tasklist/directives/cam-tasklist-tasks.html","scripts/tasklist/directives/cam-tasklist-tasks.js","scripts/tasklist/filters/cam-query-component.js","text!scripts/tasklist/plugins/cam-tasklist-search-plugin.html","text!scripts/tasklist/plugins/cam-tasklist-search-plugin-config.json","scripts/tasklist/plugins/cam-tasklist-search-plugin.js","scripts/tasklist/index.js","text!scripts/task/directives/cam-tasklist-task.html","scripts/task/directives/cam-tasklist-task.js","text!scripts/task/directives/cam-tasklist-task-meta.html","text!scripts/task/modals/cam-tasklist-groups-modal.html","scripts/task/directives/cam-tasklist-task-meta.js","scripts/task/controller/cam-tasklist-task-action-ctrl.js","scripts/task/controller/cam-tasklist-task-groups-ctrl.js","text!scripts/task/plugins/detail/cam-tasklist-task-detail-form-plugin.html","scripts/task/plugins/detail/cam-tasklist-task-detail-form-plugin.js","text!scripts/task/plugins/detail/cam-tasklist-task-detail-history-plugin.html","scripts/task/plugins/detail/cam-tasklist-task-detail-history-plugin.js","text!scripts/task/plugins/detail/cam-tasklist-task-detail-diagram-plugin.html","scripts/task/plugins/detail/cam-tasklist-task-detail-diagram-plugin.js","text!scripts/task/plugins/detail/cam-tasklist-task-detail-description-plugin.html","scripts/task/plugins/detail/cam-tasklist-task-detail-description-plugin.js","text!scripts/task/plugins/action/cam-tasklist-task-action-comment-plugin.html","text!scripts/task/plugins/action/modals/cam-tasklist-comment-form.html","scripts/task/plugins/action/cam-tasklist-task-action-comment-plugin.js","scripts/task/plugins/action/modals/cam-tasklist-comment-form.js","scripts/task/modals/cam-tasklist-groups-modal.js","scripts/task/index.js","text!scripts/process/plugins/action/cam-tasklist-navbar-action-start-process-plugin.html","text!scripts/process/plugins/action/modals/cam-tasklist-process-start-modal.html","scripts/process/plugins/action/cam-tasklist-navbar-action-start-process-plugin.js","scripts/process/plugins/action/modals/cam-tasklist-process-start-modal.js","scripts/process/index.js","scripts/navigation/controllers/cam-layout-ctrl.js","scripts/navigation/controllers/cam-header-views-ctrl.js","scripts/navigation/index.js","text!scripts/form/directives/cam-tasklist-form.html","scripts/form/directives/cam-tasklist-form.js","text!scripts/form/directives/cam-tasklist-form-generic.html","scripts/form/directives/cam-tasklist-form-generic.js","text!scripts/form/directives/cam-tasklist-form-generic-variables.html","scripts/form/directives/cam-tasklist-form-generic-variables.js","text!scripts/form/directives/cam-tasklist-form-embedded.html","scripts/form/directives/cam-tasklist-form-embedded.js","text!scripts/form/directives/cam-tasklist-form-external.html","scripts/form/directives/cam-tasklist-form-external.js","scripts/form/directives/cam-tasklist-unique-value.js","scripts/form/index.js","text!scripts/filter/directives/cam-tasklist-filters.html","scripts/filter/directives/cam-tasklist-filters.js","text!scripts/filter/directives/cam-tasklist-filter-modal-form.html","scripts/filter/directives/cam-tasklist-filter-modal-form.js","text!scripts/filter/directives/cam-tasklist-filter-modal-form-general.html","scripts/filter/directives/cam-tasklist-filter-modal-form-general.js","text!scripts/filter/directives/cam-tasklist-filter-modal-form-criteria.html","scripts/filter/directives/cam-tasklist-filter-modal-criteria.js","scripts/filter/directives/cam-tasklist-filter-modal-form-criteria.js","text!scripts/filter/directives/cam-tasklist-filter-modal-form-variable.html","scripts/filter/directives/cam-tasklist-filter-modal-form-variable.js","text!scripts/filter/directives/cam-tasklist-filter-modal-form-permission.html","scripts/filter/directives/cam-tasklist-filter-modal-form-permission.js","text!scripts/filter/modals/cam-tasklist-filter-modal.html","scripts/filter/controllers/cam-tasklist-filters-ctrl.js","scripts/filter/modals/cam-tasklist-filter-modal.js","scripts/filter/index.js","scripts/camunda-tasklist-ui.js"],"names":["angular","createBinding","ensureArray","elements","isArray","toArray","arrayLike","Array","prototype","slice","apply","module","isFunction","forEach","isObject","dataDependFactory","extend","$rootScope","$injector","$q","createDataDependFactory","annotate","nextTick","createProviders","parent","get","key","v","providers","put","value","Error","local","nextId","id","createProvider","options","setLoaded","newValue","oldValue","data","$loaded","$error","changed","log","notifyParentChanged","getTracker","name","tracker","parentValues","setLoading","dirty","getProvider","provider","registry","allChildrenDo","fn","children","allDependenciesDo","dependencies","child","parentChanged","resolveDependencies","logValue","d","promises","promise","resolve","then","error","message","push","all","values","asyncLoad","reload","loading","factory","length","e","eager","when","set","filter","idx","args","arguments","__resolve","__get","produces","indexOf","filteredProvider","destroy","parentChildren","splice","handleApi","createDataDepend","scope","inheritedProvides","observe","variables","callback","internalCreateProvider","watchScope","expression","oldValueName","provide","$eval","oldValueProvider","$watch","undefined","localProviders","createChild","$on","$providers","newChild","create","$evalAsync","define","amd","camDateFormatProvider","configurationProvider","dateProperties","i","setDateFormat","getDateFormat","CamSDK","apiModule","Client","Form","run","Notifications","$translate","translations","addError","status","SESSION_EXPIRED","SESSION_EXPIRED_MESSAGE","exclusive","camAPIHttpClient","$window","Uri","conf","apiUri","HttpClient","engine","appUri","tasklistConf","c","AuthenticationService","logout","translated","add","$scope","loginSuccess","addMessage","duration","loginError","login","username","password","auth","api","camUserLogoutCtrl","camUserLoginCtrl","userModule","controller","tasklistTemplate","userLoginTemplate","$routeProvider","template","authentication","reloadOnSearch","otherwise","redirectTo","moment","ngModule","appRoot","$http","isString","prefix","suffix","deferred","defer","url","join","method","params","success","labels","reject","config","$translateProvider","avail","getAvailableLocales","fallback","getFallbackLocale","useLoader","err","locale","dateLocales","registerAvailableLanguageKeys","fallbackLanguage","determinePreferredLanguage","nav","window","navigator","browserLang","languages","language","browserLanguage","systemLanguage","userLanguage","split","lowercase","$tooltipProvider","appendToBody","popupDelay","UriProvider","replace","href","uri","location","match","TasklistApp","this","refreshProvider","camAPI","getUserProfile","userFullName","userService","resource","profile","info","firstName","lastName","tasklistApp","ev","getRefreshProvider","tasklistData","refreshTaskList","$location","$interval","search","dataDepend","getPropertyFromLocation","property","updateSilently","currentFilter","taskId","detailsTab","Filter","Task","list","itemCount","resoureType","res","filters","focused","filterId","properties","priority","currentPage","page","copy","processVariables","taskVariables","caseInstanceVariables","searchQuery","taskListQuery","firstResult","sorting","JSON","parse","sortOrder","sortBy","maxResults","active","getTasks","count","_embedded","task","_currentFilter","intervalPromise","cancel","refresh","oldTaskId","oldDetailsTab","assignee","processInstanceId","caseInstanceId","msg","camTasklistConf","defaultConfig","dateFormat","monthName","day","abbr","normal","long","short","locales","availableLocales","fallbackLocale","formatName","dateFormatObj","getDateLocales","camDateLocales","$get","modalTemplate","$modal","filterProperties","link","variableDefinitions","variablesByName","expanded","shownVariablesCount","toggle","$event","preventDefault","stopPropagation","showValue","variable","open","windowClass","details","download","_links","self","Object","keys","showUndefinedVariable","$dismiss","valueDeserialized","deserializationError","type","dataFormat","selectedTab","valueInfo","objectTypeName","serializationDataFormat","stringify","selectTab","tab","angularMoment","constant","preprocess","timezone","format","statefulFilters","withoutSuffix","serverTime","titleFormat","directive","amMoment","amTimeAgoConfig","angularMomentConfig","element","attr","getNow","now","localNow","Date","getTime","nowMillis","localDate","cancelTimer","activeTimeout","clearTimeout","updateTime","momentInstance","text","from","isBindOnce","howOld","Math","abs","diff","secondsUntilUpdate","setTimeout","updateDateTimeAttr","isTimeElement","updateMoment","currentValue","momentValue","preprocessDate","currentFormat","toISOString","unwatchChanges","modelName","amTimeAgo","nodeName","toUpperCase","isDefined","amWithoutSuffix","$observe","service","$log","preprocessors","utc","unix","changeLocale","result","$broadcast","isUndefined","warn","isNaN","parseFloat","isFinite","parseInt","applyTimezone","aMoment","tz","amCalendarFilter","date","isValid","calendar","$stateful","amDateFormatFilter","amDurationFormatFilter","humanize","amTimeAgoFilter","fromNow","exports","require","camTasklistVariables","camTasklistVariablesDetailsModalCtrl","variableModule","Views","tasklistVars","read","tasklistPlugins","getProviders","component","stringifySortings","sortingQuery","map","obj","by","order","parameters","$timeout","restrict","updateColumns","plannedRefresh","columns","parents","headers","find","bodies","shown","$bdy","hasClass","css","minHeight","height","columnTop","columnTopHeight","positionDropdown","el","edgeLeft","position","left","edgeRight","outerWidth","$newSort","sortings","openDropdowns","openDropdownNew","sortedOn","uniqueProps","instant","created","dueDate","followUpDate","nameCaseInsensitive","byLabel","index","urlSortings","availableOptions","returned","addSorting","before","updateSortings","els","changeSorting","resetFunctions","openDropdown","newSorting","removeSorting","changeOrder","clickHandler","change","resetFunction","varName","varType","hasOptions","resetInputs","sortableVariables","focusedOn","handleClick","evt","processVariable","executionVariable","taskVariable","caseExecutionVariable","caseInstanceVariable","showInputs","applyHandler","variableTypes","Boolean","Double","Integer","Long","Short","String","applySorting","$","$element","forceFocus","pageNum","pageSize","totalItems","toJSON","tasksData","query","assignees","parseAssignees","assigneeList","state","taskList","tasks","focus","trigger","scrollIntoView","currentTaskId","searchParams","selectNextTask","ceil","pageChange","selectPreviousTask","handleKeydown","keyCode","$el","target","getHrefUrl","resetPage","$filter","isDateValue","dateRegex","camDate","input","searchConfigJSON","expressionsRegex","searchConfig","parseValue","trim","lastIndexOf","substr","sanitizeValue","operator","sanitizeProperty","out","test","Controller","searches","tooltips","types","operators","op","searchData","ea","potentialNames","label","Configuration","ViewsProvider","registerDefaultView","$inject","camTasklistListCtrl","camTasklistSortingChoices","camTasklistSortingDropdown","camTasklistSortingInputs","camTasklistTasks","camQueryComponent","camTasklistSearchPlugin","jquery","TaskErrorManager","errorProvider","errorNotification","src","enhanceErrorMessage","clearTask","updateLocation","taskData","setDefaultTaskDetailTab","tabs","selectedTabId","selectedTaskDetailTab","errorHandler","_status","identityLink","user","userId","groups","groupId","group","$root","processDefinition","caseDefinition","taskState","isAssignee","taskVars","taskDetailTabs","selectTaskDetailTab","editGroupsFormTemplate","successHandler","taskMetaData","saveDate","propName","inlineFieldScope","setEditingState","varValue","updateTask","resetProperty","toSend","update","notifyOnStartEditing","notifyOnCancelEditing","editingState","notify","action","messages","notifications","groupNames","saveFollowUpDate","resetFollowUpDate","startEditingFollowUpDate","cancelEditingFollowUpDate","saveDueDate","resetDueDate","startEditingDueDate","cancelEditingDueDate","followUp","due","assigned","assigneeReseted","claimed","unclaimed","startEditingAssignee","cancelEditingAssignee","assign","newAssignee","setAssignee","unclaim","resetAssignee","claim","editGroups","dialogClosed","groupsChanged","CamForm","cleanLocalStorage","taskActions","GROUP_TYPE","NEW_GROUP","newGroup","taskGroupsData","_groups","failure","FAILURE","initGroupsFailed","INIT_GROUPS_FAILURE","addGroupFailed","ADD_GROUP_FAILED","removeGroupFailed","REMOVE_GROUP_FAILED","modalGroupsState","validateNewGroup","_task","addGroup","identityLinksAdd","taskGroupForm","$setPristine","removeGroup","identityLinksDelete","$setValidity","newGroupId","currentGroup","assignNotification","taskFormData","DEFAULT_OPTIONS","hideCompleteButton","hideLoadVariablesButton","disableCompleteButton","disableForm","disableAddVariableButton","form","taskFormState","taskForm","completionCallback","isTimestampProperty","propertyName","findOrCreateDay","days","timestamp","grep","elem","events","findOrCreateParentEvent","event","parentEvent","operationId","time","operationType","subEvents","History","historyData","userOperation","comments","history","historyEvent","propertyIsDate","orgValue","comment","ProcessDefinition","diagramData","xml","bpmn20xml","processDiagram","bpmn20Xml","processDiagramState","control","highlightTask","highlight","taskDefinitionKey","addCommentTemplate","addCommentFormTemplate","commentData","createComment","size","submit","$close","taskDirective","taskMetaDirective","camTaskActionCtrl","camTaskGroupsCtrl","camTaskDetailFormPlugin","camTaskDetailHistoryPlugin","camTaskDetailDiagramPlugin","camTaskDetailDescriptionPlugin","camTaskActionCommentPlugin","camCommentCreateModalCtrl","camGroupEditModalCtrl","apiClient","taskModule","startProcessActionTemplate","processData","DEFAULT_PROCESS_DEFINITION_QUERY","latest","processDefinitionQuery","currentProcessDefinitionId","startForm","debounce","successNotification","processStartData","PROCESS_TO_START_SELECTED","total","current","searchValue","triggerOnStart","_query","startFormState","processDefinitionState","processDefinitions","items","sort","a","b","aName","toLowerCase","bName","lookupProcessDefinitionByName","nameLike","selectProcessDefinition","processDefinitionId","processDefinitionKey","$invalid","back","executeAfterDestroy","job","pop","registerCompletionHandler","startProcessInstance","notifyFormValidation","invalid","camNavbarActionStartProcessPlugin","camProcessStartModalCtrl","processModule","region","currentTarget","isClosed","removeClass","close","addClass","toggleVariableSearch","toggleClass","toggleRegion","maximizeRegion","resetRegions","navbarVars","navbarActions","camLayoutCtrl","camHeaderViewsCtrl","navigationModule","compact","arr","ay","EMBEDDED_KEY","APP_KEY","ENGINE_KEY","noop","tasklistForm","onFormCompletionCallback","onFormCompletion","onFormValidation","parseForm","applicationContextPath","contextPath","substring","completionHandler","saveHandler","complete","showCompleteButton","save","notifyFormInitialized","notifyFormInitializationFailed","notifyFormValidated","notifyFormCompleted","notifyFormDirty","$dirty","getOptions","getTasklistForm","getParams","registerSaveHandler","attrs","formController","showForm","client","formElement","done","camForm","clearVariableManager","variableManager","destroyVariable","clearFields","fields","showBusinessKeyField","$valid","$update","_camForm","formName","camFormScope","localCallback","initializeFieldHandlers","variablesLoaded","emptyVariable","addVariable","newVariable","removeVariable","delta","vars","getVariableNames","loadVariables","formVariables","deserializeValues","variableAdded","fixedName","container","formUrl","containerElement","store","triggerHandler","Event","$elment","externalFormUrl","EXTERNAL_FORM_NOTE","queryParam","absoluteUrl","absUrl","encodeURI","$attrs","ctrl","validate","viewValue","names","camUniqueValue","$pristine","nameFound","$parsers","unshift","$formatters","comparisonModel","$viewValue","camTasklistForm","camTasklistFormGeneric","camTasklistFormGenericVariables","camTasklistFormEmbedded","camTasklistFormExternal","camTasklistUniqueValue","formModule","filtersData","openModal","filterCount","style","border-color","color","background-color","isFocused","GENERAL_ACCORDION","PERMISSION_ACCORDION","CRITERIA_ACCORDION","VARIABLE_ACCORDION","filterModalData","registerIsValidProvider","registerPostFilterSavedProvider","filterModalFormData","opened","accordion","general","permission","criteria","accesses","isValidProvider","filterForm","hintProvider","registerHintProvider","showHint","postFilterSavedProviders","postFilterSavedProvider","errors","concat","removeArrayItem","newArr","parentCtrl","_form","filterGeneralForm","controls","filterColor","filterName","filterPriority","filterDescription","filterRefresh","showHintProvider","regex","exprSupport","valid","dateExpLangHelp","userExpLangHelp","commaSeparatedExps","commaSeparatedValues","numberRegex","help","bool","expressionSupport","includeAssignedTasksSupport","item","each","booleanCriterion","criteriaExpressionSupport","criteriaHelp","criteriaValidator","defaultValidate","criterion","emptyCriterion","includeAssignedTasks","canIncludeAssignedTasks","q","nestedForm","nestedForms","queryParamKey","queryParamValue","addForm","addCriterion","_emptyCriteria","removeCriterion","valueChanged","$setViewValue","getCriterionName","validationResult","getQueryParamKeys","entry","criterionName","simple","getCriteriaHelp","isCriteriaHelpAvailable","variableName","variableLabel","_emptyVariable","RESOURCE_TYPE","isOpen","performSubmit","actions","submitAction","authorization","$permissions","$$hashKey","resourceId","resp","permissions","Authorization","initializeAuthorizations","authorizations","getNewPermissionField","newPermission","isGlobalAuthorization","isGrantAuthorization","isGlobalUserOrGroupId","hasProperty","prop","hasReadPermission","perm","getGlobalAuthorization","getAuthorizationsWithReadPermissions","getAuthorziationMap","_authorizations","getAuthorziations","_criteria","addReadPermissionToAuthorization","removeReadPermissionFromAuthorization","showNewPermissionFields","actual","previous","disableAddButton","addReadPermission","filterAuthorizationData","filterPermissionForm","globalAuthorization","groupAuthorizationMap","userAuthorizationMap","NEW_DEFAULT_AUTHORIZATION","resourceType","NEW_PERMISSION","duplicate","authorizationState","isGlobalReadAuthorization","globalReadAuthorizationChanged","validateNewPermission","switchType","getReadAuthorizations","auths","_auth","keyPressed","removeReadPermission","submitAuthorizations","k","userCanCreateFilter","filterAuthorizations","links","rel","fixLike","likeExp","unfixLike","isQueryVariable","varExp","isExpression","expressionsExp","cleanJson","DEFAULT_COLOR","deletion","description","queryVariables","access","defaultValidationProvider","registerValidationProvider","_queryArray","_queryObj","toSave","filterResponse","abortDeletion","confirmDeletion","camTasklistFilters","camTasklistFilterModalForm","camTasklistFilterModalFormGeneral","camTasklistFilterModalFormCriteria","camTasklistFilterModalFormVariable","camTasklistFilterModalFormPermission","camTasklistFiltersCtrl","camTasklistFilterModal","filterModule","bootstrapApp","document","ready","bootstrap","$aufocused","loaded","parseUriConfig","$baseTag","ngDeps","pluginDependencies","ngModuleName","uriConfig","customScripts","custom","deps","pluginPackages","PLUGIN_PACKAGES","PLUGIN_DEPENDENCIES","packages","plugin","requirePackageName"],"mappings":"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AAtE,WAAA,qBAAAkQ,QAAA,6CACA5L,EAAAtE,WAAA,sBAAAkQ,QAAA,8CAKA,mBAAA3N,QAAAuF,iBAAAvF,OAAAuF,gBAAAwyB,cAAA,CACA,GAAAC,GAAAh4B,OAAAuF,gBAAAwyB,kBAIA97B,MAEA,UACA,QACA,UACA,OACA,MACA,SACA,WAEA,cACA,UAEA,WACA,gBACA,QACA,UACA,cAEAjI,QAAA,SAAA4+B,GACAoF,EAAApF,KACA32B,EAAA22B,GAAAoF,EAAApF,MAKAjlB,QAAAzO,OAAAjD,GAGA0R,QAAAqqB,EAAAC,SAAA,WAKA9kC,EAAAW,OAAA,sBAAAkkC,EAAAL,QAEAR,EAAAtjC,MAAAuN,KAAA3I,iBAKAtF,GAAAW,OAAA,0BASA6Z,WAAA,WACAwpB,MAjJA,GAAAe,GAAAl4B,OAAAm4B,oBACAP,EAAA53B,OAAAo4B,uBAEAzqB,SAAAzO,QACAm5B,SAAAH,GAGA,IAAAn2B,GAEAk2B,GACA,sBACAnK,OAAA8J,EAAArpB,IAAA,SAAA+pB,GACA,MAAAA,GAAAC,qBAmJA5qB,SAAAsqB,EAAAT;A9FhrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjBA;AACA;AACA;AACA,ACHA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA,AD8BA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA,AD6CA;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA,AD0CA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACznRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnDA;AACA;AACA;AACA,ACHA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA,ADgCA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACllDA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC/BA;AACA;AACA;ACFA,ADGA;ACFA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChJA,ADiJA;AChJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9DA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClnQA,ADoQA;ACnQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtvrKA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxFA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9BA;AACA;AACA;AACA,ACHA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA,ADmDA;ACljGA;AACA;AACA;AACA,ACHA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3MA,AD4MA;AC3MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA,ADwCA;ACvxtvlDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACllxJA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvlMA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChrktVA,ADuVA;ACtVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA,ADmEA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"camunda-tasklist-ui.js","sourcesContent":["/**\n * dataDepend - a toolkit for implementing complex, data heavy AngularJS applications\n *\n * See https://github.com/Nikku/angular-data-depend for details.\n *\n * @version 1.0.0\n * \n * @author Nico Rehwaldt <http://github.com/Nikku>\n * @author Roman Smirnov <https://github.com/romansmirnov>\n * \n * @license (c) 2013 Nico Rehwaldt, MIT\n */\n\n(function(angular) {\n  \n  function createBinding(angular) {\n\n    var module = angular.module('dataDepend', []);\n\n    var isArray = angular.isArray,\n        isFunction = angular.isFunction,\n        isObject = angular.isObject,\n        forEach = angular.forEach,\n        extend = angular.extend;\n\n    function ensureArray(elements) {\n      if (!isArray(elements)) {\n        return [ elements ];\n      } else {\n        return elements;\n      }\n    }\n\n    function toArray(arrayLike) {\n      return Array.prototype.slice.apply(arrayLike);\n    }\n\n    var dataDependFactory = [ '$rootScope', '$injector', '$q', function($rootScope, $injector, $q) {\n\n      function createDataDependFactory(annotate, nextTick) {\n\n        function createProviders(parent) {\n\n          var providers = {};\n\n          function get(key) {\n            var v = providers[key];\n            if (!v) {\n              if (parent) {\n                v = parent.get(key);\n              }\n            }\n\n            return v;\n          }\n\n          function put(key, value) {\n            if (get(key)) {\n              throw new Error('[dataDepend] provider with key ' + key + ' already registered');\n            }\n\n            providers[key] = value;\n          }\n\n          return {\n            local: providers,\n            get: get,\n            put: put\n          };\n        }\n\n        var id = 0;\n\n        function nextId() {\n          return id++;\n        }\n\n        /**\n         * Create a provider using the specified options\n         * \n         * @param {object} options\n         *\n         * @returns {object} the newly created, unregistered provider\n         */\n        function createProvider(options) {\n          \n          options = options || {};\n\n          var produces = options.produces,\n              registry = options.registry,\n              dependencies = options.dependencies || [],\n              factory = options.factory,\n              eager = options.eager || false;\n\n          var parentValues = {},\n              children = [],\n              changed = true,\n              dirty = true,\n              loading = null,\n              data = { $loaded: false };\n\n          // element produced by \n          // the factory\n          var provider = {\n            produces: produces,\n            data: data,\n            get: get,\n            set: set,\n            resolve: resolve,\n            children: children,\n            filter: filter,\n            destroy: destroy,\n            parentChanged: parentChanged\n          };\n\n          allDependenciesDo(function(d) {\n            getProvider(d).children.push(provider);\n          });\n\n          if (eager) {\n            log('resolve async');\n            nextTick(function() {\n              log('resolve');\n              resolve();\n            });\n          }\n\n          if (!factory) {\n            setLoaded(options.value);\n          }\n\n          function setLoaded(newValue) {\n\n            var oldValue = data.value;\n\n            data.$loaded = true;\n            delete data.$error;\n\n            changed = false;\n\n            if (oldValue !== newValue) {\n              data.value = newValue;\n              \n              log('setLoaded', oldValue, ' -> ', newValue);\n\n              notifyParentChanged();\n            }\n          }\n\n          function getTracker(name) {\n            var tracker = parentValues[name];\n            if (!tracker) {\n              parentValues[name] = tracker = {};\n            }\n\n            return tracker;\n          }\n\n          function setLoading() {\n            data.$loaded = false;\n            dirty = false;\n          }\n\n          function getProvider(key) {\n            var provider = registry.get(key);\n            \n            if (!provider) {\n              throw new Error('[dataDepend] No provider for ' + key);\n            }\n\n            return provider;\n          }\n\n          function allChildrenDo(fn) {\n            forEach(children, fn);\n          }\n\n          function allDependenciesDo(fn) {\n            forEach(dependencies, fn);\n          }\n\n          function notifyParentChanged() {\n            allChildrenDo(function(child) {\n              child.parentChanged();\n            });\n          }\n\n          function resolveDependencies() {\n            var promises = [];\n\n            function logValue(d, value) {\n              var tracker = getTracker(d),\n                  oldValue = tracker.value;\n\n              log('resolveDependencies', d, ':', oldValue, '->', value);\n\n              if (oldValue !== value) {\n                log('resolveDependencies', 'changed');\n                \n                tracker.value = value;\n                changed = true;\n              }\n            }\n\n            allDependenciesDo(function(d) {\n              var provider = getProvider(d);\n\n              var promise = provider.resolve().then(function(value) {\n                logValue(d, value);\n                return value;\n              }, function(error) {\n                throw new Error('<' + d + '> <- ' + error.message);\n              });\n\n              promises.push(promise);\n            });\n\n            return $q.all(promises).then(function() {\n\n              var values = [];\n\n              // best effort to receive up-to-date values\n              // return the most current one\n              allDependenciesDo(function(d) {\n                var v = getProvider(d).get();\n\n                logValue(d, v);\n                values.push(v);\n              });\n\n              return values;\n            });\n          }\n\n          function asyncLoad(reload) {\n            setLoading();\n\n            log('asyncLoad: init load');\n\n            var promise = resolveDependencies().then(function(values) {\n\n              log('asyncLoad dependencies resolved', values);\n\n              if (loading !== promise) {\n                log('asyncLoad: skip (new load request)');\n                return loading;\n              }\n\n              var value = get();\n\n              if (factory) {\n\n                // call factory only if neccessary\n                // (i.e. if parent variables changed, reload is explicitly set\n                // or no dependencies are given)\n                if (changed || reload || values.length == 0) {\n                  log('asyncLoad: call factory');\n                  try {\n                    value = factory.apply(factory, values);\n                  } catch (e) {\n                    throw new Error('unresolvable: ' + e.message);\n                  }\n                }\n              }\n\n              return value;\n            }).then(function(value) {\n\n              if (loading !== promise) {\n                log('asyncLoad: skip (new load request)');\n                return loading;\n              }\n\n              log('asyncLoad: load complete');\n\n              loading = null;\n              setLoaded(value);\n              return value;\n            }, function(error) {\n\n              if (loading !== promise) {\n                log('asyncLoad: skip (new load request)');\n                return loading;\n              }\n\n              log('asyncLoad: load error');\n\n              loading = null;\n              data.$error = error;\n              changed = false;\n\n              throw error;\n            });\n\n            return promise;\n          }\n\n          /**\n           * Receive a notification from the parent that it got changed\n           * and update your state accordingly.\n           *\n           */\n          function parentChanged() {\n\n            log('parentChanged START');\n\n            // anticipating parent change, everything ok\n            if (loading) {\n              log('parentChanged SKIP (loading)');\n              return;\n            }\n\n            dirty = true;\n\n            // should this provider resolve its data \n            // eagerly if it got dirty\n            if (eager) {\n              log('parentChanged RESOLVE async');\n\n              nextTick(function() {\n                log('parentChanged RESOLVE');\n                resolve();\n              });\n            }\n\n            notifyParentChanged();\n          }\n\n          function get() {\n            return data.value;\n          }\n\n          /**\n           * Resolve the value of this data holder\n           */\n          function resolve(options) {\n            options = options || {};\n\n            var reload = options.reload;\n\n            if (dirty || reload) {\n              loading = asyncLoad(reload);\n            }\n\n            if (loading) {\n              log('resolve: load async');\n              return loading;\n            } else {\n              log('resolve: load sync');\n              return $q.when(get());\n            }\n          }\n\n          function set(value) {\n            if (factory) {\n              throw new Error('[dataDepend] Cannot set value, was using factory');\n            } else if (isFunction(value)) {\n              throw new Error('[dataDepend] Cannot refine static value using factory function');\n            }\n\n            setLoaded(value);\n          }\n\n          function log() {\n            // var args = toArray(arguments);\n            // args.unshift('[' + produces + ']');\n            // args.unshift('[dataDepend]');\n\n            // console.log.apply(console, args);\n          }\n\n          /**\n           * Return a filtered view on the provider, that exposes only\n           * the dependency with the given name, if multiple dependencies\n           * are produced. \n           *\n           * @param {object} provider the provider to filter\n           * @param {string} name the produced name to filter for\n           *\n           * @returns {object} a view on the provider that filters for the\n           *                   specified name\n           *\n           * @throws error if the provider is not a multi provider\n           */\n          function filter(name) {\n\n            if (!isArray(provider.produces)) {\n              throw new Error('[dataDepend] Provider does not produce multiple values');\n            }\n\n            var idx = provider.produces.indexOf(name),\n                __get = provider.get,\n                __resolve = provider.resolve;\n\n            function filter(values) {\n              if (!values) {\n                return values;\n              } else {\n                return values[idx];\n              }\n            }\n            \n            function resolve() {\n              var args = toArray(arguments);\n              return __resolve.apply(null, args).then(filter);\n            }\n\n            function get() {\n              var args = toArray(arguments);\n              return filter(__get.apply(null, args));\n            }\n\n            var filteredProvider = angular.extend({}, provider, {\n              resolve: resolve,\n              get: get\n            });\n\n            return filteredProvider;\n          }\n\n          function destroy() {\n            allDependenciesDo(function(d) {\n              var parent = getProvider(d),\n                  parentChildren =  parent.children,\n                  idx = parentChildren.indexOf(provider);\n\n              if (idx !== -1) {\n                parentChildren.splice(idx, 1);\n              }\n            });\n          }\n\n          var handleApi = {\n            reload: function() {\n              resolve({ reload: true});\n            }\n          };\n\n          angular.extend(data, handleApi);\n          \n          return provider;\n        }\n\n        function createDataDepend(scope, inheritedProvides) {\n\n          var providers = createProviders(inheritedProvides);\n\n          /**\n           * Registers an observer on the data object that gets called whenever \n           * any of the required observed variables change. \n           *\n           * @param {String|Array<String>} variables single variable or list of \n           *                                         variables the callback depends on\n           * @param {Function} callback to be invoked when any of the required variables\n           *                            change\n           * @return {Object} a handle to getters data, including a $loaded attribute\n           *                  that reflects the load status of the getter.\n           * \n           * The method accepts a single variable name or an array of variable names \n           * the provided callback depends on.\n           *\n           * The second parameter is the callback that is executed when the required \n           * variables change. When no variables argument is given the dependencies\n           * may be provided using the [ 'a', 'b', function callback(a, b) { }]\n           * notation.\n           * \n           * Example: \n           *\n           *      var data = dataDepend.create($scope);\n           *      data.provide('a', 'A');\n           *      \n           *      var status = data.observe('a', function(a) {\n           *        console.log('a is ' + a);\n           *      });\n           *  \n           *      $timeout(function() {\n           *        data.set('a', 'B');\n           *      }, 2000);\n           *\n           *   prints out the following to the console: \n           *\n           *      > a is A\n           *      > a is B\n           */\n          function observe(variables, callback) {\n\n            var name = 'provider$' + nextId();\n            \n            if (!callback) {\n              // parse callback and variables from \n              // [ 'A', 'B', function(A, B) { ... }] notation \n              callback = variables;\n              variables = annotate(callback);\n\n              if (isArray(callback)) {\n                callback = callback[callback.length - 1];\n              }\n            } else {\n              // make sure we can use get('asdf', function(asdf) { })\n              // in place of get([ 'asdf' ], function(asdf) { })\n              variables = ensureArray(variables);\n            }\n\n            if (!isFunction(callback)) {\n              throw new Error('[dataDepend] Must provide callback as second parameter or use [ \"A\", \"B\", function(a, b) { } ] notation');\n            }\n\n            var provider = internalCreateProvider({\n              produces: name,\n              factory: callback,\n              dependencies: variables,\n              eager: true,\n              registry: providers\n            });\n\n            // return handle to the\n            // providers data\n            return provider.data;\n          }\n\n          function internalCreateProvider(options) {\n            var produces = options.produces,\n                provider;\n\n            if (!produces) {\n              throw new Error('[dataDepend] Must provide produces when creating new provider');\n            }\n\n            provider = createProvider(options);\n\n            if (isArray(produces)) {\n              forEach(produces, function(name) {\n                providers.put(name, provider.filter(name));\n              });\n            } else {\n              providers.put(produces, provider);\n            }\n\n            return provider;\n          }\n\n          /**\n           * Watches an expression on the scope this object was registered on\n           * and publishes that value as a variable.\n           *\n           * The old value of the watch expression is published as {name}:old in the object.\n           *\n           * @param {string} name of the variable to publish\n           * @param {string} expression (optional) expression used to watch on the scope (defaults to name)\n           *\n           * @return {object} data object representing the load status\n           */\n          function watchScope(name, expression) {\n            expression = expression || name;\n\n            var oldValueName = name + ':old';\n\n            // create provider\n            provide(name, scope.$eval(expression));\n            provide(oldValueName, null);\n\n            var provider = providers.get(name);\n            var oldValueProvider = providers.get(oldValueName);\n\n            scope.$watch(expression, function(newValue, oldValue) {\n              if (newValue !== oldValue) {\n                provider.set(newValue);\n\n                // publish old value as {name}:old\n                oldValueProvider.set(oldValue);\n              }\n            });\n\n            return provider.data;\n          }\n\n          /**\n           * Provide one ore more variables under well known names.\n           * \n           * @param {String|Array<String>} name of the variable(s)\n           * @param {Function | Object | Array } value the value to initialize the object with\n           *\n           * @return {Object} handle to the newly created providers data\n           */\n          function provide(name, value) {\n            var factory,\n                variables,\n                provider;\n\n            if (providers.get(name)) {\n              throw new Error('[dataDepend] provider for ' + name + ' already registered');\n            }\n\n            if (isFunction(value) || (isArray(value) && isFunction(value[value.length - 1]))) {\n              // parse factory and variables from \n              // [ 'A', 'B', function(A, B) { ... }] notation \n              factory = value;\n              variables = annotate(factory);\n              value = undefined;\n\n              if (isArray(factory)) {\n                factory = factory[factory.length - 1];\n              }\n            }\n\n            provider = internalCreateProvider({\n              produces: name,\n              factory: factory,\n              value: value,\n              dependencies: variables,\n              registry: providers\n            });\n\n            // return handle to the\n            // providers data\n            return provider.data;\n          }\n\n          /**\n           * Set a provided variable to the given value\n           * \n           * @param {string} name of the variable\n           * @param {function | object | array } value the value to initialize the object with\n           */\n          function set(name, value) {\n\n            if (typeof name !== 'string') {\n              throw new Error('[dataDepend] expected name to be a string, got ' + name);\n            }\n\n            var provider = providers.get(name);\n\n            if (!provider) {\n              throw new Error('[dataDepend] no provider with name ' + name);\n            }\n\n            provider.set(value);\n          }\n\n          function changed(name) {\n            var provider = providers.get(name);\n\n            if (!provider) {\n              throw new Error('[dataDepend] Provider \"' + name + '\" does not exists');\n            }\n\n            provider.resolve({ reload: true });\n          }\n\n          function destroy() {\n            var localProviders = providers.local;\n            \n            forEach(localProviders, function(provider) {\n              provider.destroy();\n            });\n          }\n\n          function createChild(scope) {\n            return createDataDepend(scope, providers);\n          }\n\n          scope.$on('$destroy', destroy);\n\n          return {\n            $providers: providers,\n            observe: observe,\n            provide: provide,\n            set: set,\n            changed: changed,\n            watchScope: watchScope,\n            newChild: createChild\n          };\n        }\n\n        return {\n          create: createDataDepend\n        };\n      }\n\n      return createDataDependFactory($injector.annotate, function(fn) {\n        $rootScope.$evalAsync(fn);\n      });\n    }];\n\n    module.factory('dataDepend', dataDependFactory);\n\n    return module;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define('angular-data-depend',[ 'angular' ], function(angular) {\n      return createBinding(angular);\n    });\n  } else\n  if (typeof angular !== undefined) {\n    createBinding(angular);\n  } else {\n    throw new Error('[dataDepend] Failed to bind: AngularJS not available on window or via AMD');\n  }\n})(angular);\n","define('scripts/config/date',[], function() {\n  'use strict';\n  return [\n    'camDateFormatProvider',\n    'configurationProvider',\n  function(\n    camDateFormatProvider,\n    configurationProvider\n  ) {\n    var dateProperties = ['monthName', 'day', 'abbr', 'normal', 'long', 'short'];\n    for(var i = 0; i < dateProperties.length; i++) {\n      camDateFormatProvider.setDateFormat(configurationProvider.getDateFormat(dateProperties[i]), dateProperties[i]);\n    }\n\n  }];\n});\n\n","\ndefine('text!scripts/index.html',[],function () { return '<div class=\"columns\"\\n     ng-controller=\"camLayoutCtrl\">\\n\\n  <!-- # filters column -->\\n  <section class=\"column task-filters\"\\n           ng-controller=\"camFiltersCtrl\">\\n    <header class=\"cell top\">\\n      <button class=\"btn btn-link\"\\n              ng-show=\"userCanCreateFilter\"\\n              ng-click=\"openModal($event)\">\\n        <span class=\"glyphicon glyphicon-plus-sign\"></span>\\n        {{ \\'FILTER_CREATE\\' | translate }}\\n      </button>\\n\\n      <button ng-click=\"toggleRegion($event)\"\\n              data-region=\"filters\"\\n              class=\"region-toggle btn btn-link\">\\n        <span class=\"icon-bar\"></span>\\n        <span class=\"icon-bar\"></span>\\n        <span class=\"icon-bar\"></span>\\n      </button>\\n    </header>\\n\\n    <div class=\"cell content\">\\n      <div cam-tasklist-filters\\n           filters-data=\"filtersData\"\\n           open-modal=\"openModal\"></div>\\n    </div>\\n  </section>\\n  <!-- / filters column -->\\n\\n\\n\\n\\n\\n  <!-- # list column -->\\n  <section class=\"column tasks-list\"\\n           ng-controller=\"camListCtrl\">\\n    <header class=\"cell top\">\\n      <div cam-sorting-choices\\n           tasklist-data=\"tasklistData\"></div>\\n\\n      <button ng-click=\"toggleRegion($event)\"\\n              data-region=\"list\"\\n              class=\"region-toggle btn btn-link\">\\n        <span class=\"icon-bar\"></span>\\n        <span class=\"icon-bar\"></span>\\n        <span class=\"icon-bar\"></span>\\n      </button>\\n    </header>\\n\\n    <div class=\"cell content\">\\n      <view ng-repeat=\"tasklistPlugin in tasklistPlugins\"\\n            provider=\"tasklistPlugin\"\\n            vars=\"tasklistVars\" />\\n\\n      <div cam-tasks\\n           tasklist-data=\"tasklistData\"></div>\\n    </div>\\n  </section>\\n  <!-- / list column -->\\n\\n\\n\\n\\n\\n  <!-- # task column -->\\n  <section class=\"column task-details\"\\n           ng-controller=\"camTaskActionCtrl\">\\n    <header class=\"cell top\">\\n      <button ng-click=\"toggleRegion($event)\"\\n              data-region=\"task\"\\n              class=\"region-toggle btn btn-link\">\\n        <span class=\"icon-bar\"></span>\\n        <span class=\"icon-bar\"></span>\\n        <span class=\"icon-bar\"></span>\\n      </button>\\n\\n      <button ng-click=\"maximizeRegion($event)\"\\n              data-region=\"task\"\\n              class=\"btn btn-link maximize\">\\n        <span class=\"glyphicon glyphicon-resize-full\"></span>\\n      </button>\\n\\n      <button ng-click=\"resetRegions($event)\"\\n              class=\"btn btn-link reset-regions\">\\n        <span class=\"glyphicon glyphicon-resize-small\"></span>\\n      </button>\\n\\n      <div class=\"task-actions\"\\n           ng-show=\"task\"\\n           ng-repeat=\"taskAction in taskActions\">\\n        <view provider=\"taskAction\" vars=\"taskVars\">\\n      </div>\\n    </header>\\n\\n    <div class=\"cell content\">\\n      <div cam-tasklist-task\\n           tasklist-data=\"tasklistData\"></div>\\n    </div>\\n  </section>\\n  <!-- # task column -->\\n\\n</div>\\n';});\n\n","\ndefine('text!scripts/user/controller/cam-auth-login.html',[],function () { return '<div class=\"form-signin-container\">\\n  <form role=\"form\"\\n        name=\"signinForm\"\\n        class=\"form-signin cam-auth-login \">\\n\\n    <div class=\"auth-fields\">\\n\\n      <h2 translate=\"PLEASE_SIGN_IN\">Please sign in</h2>\\n\\n      <div notifications-panel />\\n\\n      <div class=\"form-group\">\\n        <input required\\n               autofocus=\"autofocus\"\\n               tabindex=\"1\"\\n               ng-model=\"username\"\\n               name=\"username\"\\n               type=\"text\"\\n               class=\"form-control\"\\n               id=\"signinFormInputUsername\"\\n               placeholder=\"{{ \\'USERNAME\\' | translate }}\"\\n               auto-fill>\\n      </div>\\n\\n      <div class=\"form-group\">\\n        <input required\\n               tabindex=\"2\"\\n               ng-model=\"password\"\\n               name=\"password\"\\n               type=\"password\"\\n               class=\"form-control\"\\n               id=\"signinFormInputPassword\"\\n               placeholder=\"{{ \\'PASSWORD\\' | translate }}\"\\n               auto-fill>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\"auth-actions\">\\n      <button class=\"btn btn-lg btn-primary\"\\n              tabindex=\"3\"\\n              type=\"submit\"\\n              ng-disabled=\"!username || !password\"\\n              ng-click=\"login()\"\\n              translate=\"SIGN_IN_ACTION\">Sign in</button>\\n    </div>\\n  </form>\\n</div>\\n';});\n\n","define('scripts/api/index',[\n  'angular',\n  'camunda-bpm-sdk-js'\n],\nfunction(\n  angular,\n  CamSDK\n) {\n  'use strict';\n\n  var apiModule = angular.module('cam.tasklist.client', []);\n\n  apiModule.value('HttpClient', CamSDK.Client);\n\n  apiModule.value('CamForm', CamSDK.Form);\n\n  apiModule.run([ '$rootScope', 'Notifications', '$translate', function($rootScope, Notifications, $translate) {\n    $rootScope.$on('authentication.login.required', function() {\n      $translate([\n        'SESSION_EXPIRED',\n        'SESSION_EXPIRED_MESSAGE'\n      ]).then(function(translations) {\n        Notifications.addError({\n          status: translations.SESSION_EXPIRED,\n          message: translations.SESSION_EXPIRED_MESSAGE,\n          exclusive: true\n        });\n      });\n    });\n  }]);\n\n  apiModule.factory('camAPI', [\n          'camAPIHttpClient',\n          '$window',\n          'Uri',\n  function(camAPIHttpClient, $window, Uri) {\n\n    var conf = {\n      apiUri:     'engine-rest/api/engine',\n      HttpClient: camAPIHttpClient,\n      engine: Uri.appUri(':engine')\n    };\n    if ($window.tasklistConf) {\n      for (var c in $window.tasklistConf) {\n        conf[c] = $window.tasklistConf[c];\n      }\n    }\n\n    return new CamSDK.Client(conf);\n  }]);\n\n  return apiModule;\n});\n\n","define('scripts/user/controller/cam-user-logout-ctrl',[\n], function(\n) {\n  'use strict';\n\n  return [\n    '$translate',\n    'AuthenticationService',\n    'Notifications',\n  function(\n    $translate,\n    AuthenticationService,\n    Notifications\n  ) {\n\n    AuthenticationService\n      .logout()\n      .then(function() {\n        $translate('LOGGED_OUT').then(function(translated) {\n          Notifications.add({\n            status: translated,\n            exclusive: true\n          });\n        });\n      });\n\n  }];\n\n});\n\n","define('scripts/user/controller/cam-user-login-ctrl',[\n], function(\n) {\n  'use strict';\n\n  return [\n    '$scope',\n    '$translate',\n    'AuthenticationService',\n    'Notifications',\n  function(\n    $scope,\n    $translate,\n    AuthenticationService,\n    Notifications\n  ) {\n\n    function loginSuccess() {\n      $translate('LOGGED_IN').then(function(translated) {\n        Notifications.addMessage({\n          duration: 5000,\n          status: translated,\n          exclusive: true\n        });\n      });\n    }\n\n    function loginError() {\n      $translate('CREDENTIALS_ERROR').then(function(translated) {\n        Notifications.addError({\n          status: translated,\n          scope: $scope\n        });\n      });\n    }\n\n    $scope.login = function() {\n      AuthenticationService\n        .login($scope.username, $scope.password)\n        .then(loginSuccess, loginError);\n    };\n\n  }];\n\n});\n\n","define('scripts/user/index',[\n  'angular',\n  'camunda-commons-ui/auth/index',\n  '../api/index',\n\n  './controller/cam-user-logout-ctrl',\n  './controller/cam-user-login-ctrl'\n], function(\n  angular,\n  auth,\n  api,\n\n  camUserLogoutCtrl,\n  camUserLoginCtrl\n) {\n  'use strict';\n\n  /**\n   * @module cam.tasklist.user\n   */\n\n  /**\n   * @memberof cam.tasklist\n   */\n\n  var userModule = angular.module('cam.tasklist.user', [\n    auth.name,\n    api.name\n  ]);\n\n  /**\n   * controller to be used for the /logout route\n   */\n  userModule.controller('camUserLogoutCtrl', camUserLogoutCtrl);\n\n  /**\n   * Controller used for the /login route\n   */\n  userModule.controller('camUserLoginCtrl', camUserLoginCtrl);\n\n\n  return userModule;\n});\n\n\n","define('scripts/config/routes',[\n  'text!./../index.html',\n  'text!./../user/controller/cam-auth-login.html',\n  './../user/index'\n], function(\n  tasklistTemplate,\n  userLoginTemplate\n) {\n  'use strict';\n\n  return [\n    '$routeProvider',\n  function(\n    $routeProvider\n  ) {\n\n    $routeProvider\n      .when('/', {\n        template: tasklistTemplate,\n        controller: 'camTasklistViewCtrl',\n        authentication: 'required',\n        reloadOnSearch: false\n      })\n\n      .when('/login', {\n        template: userLoginTemplate,\n        controller: 'camUserLoginCtrl'\n      })\n\n      .when('/logout', {\n        template: userLoginTemplate,\n        authentication: 'required',\n        controller: 'camUserLogoutCtrl'\n      })\n\n      .otherwise({\n        redirectTo: '/'\n      })\n    ;\n  }];\n});\n\n","define('scripts/config/locales',['moment', 'angular'], function(moment, angular) {\n  'use strict';\n\n  return function(ngModule, appRoot) {\n\n    ngModule.factory('localeLoader', ['$q', '$http', 'Notifications',\n      function($q, $http, Notifications) {\n        return function (options) {\n\n          if (!options || (!angular.isString(options.prefix) || !angular.isString(options.suffix))) {\n            throw new Error('Couldn\\'t load static files, no prefix or suffix specified!');\n          }\n\n          var deferred = $q.defer();\n\n          $http(angular.extend({\n            url: [\n              options.prefix,\n              options.key,\n              options.suffix\n            ].join(''),\n            method: 'GET',\n            params: ''\n          }, options.$http)).success(function (data) {\n            if(typeof options.callback === \"function\") {\n              options.callback(null, data, options.key);\n            }\n            deferred.resolve(data.labels);\n          }).error(function (data) {\n            if(typeof options.callback === \"function\") {\n              options.callback(data, null, options.key);\n            }\n            // error notification\n            Notifications.addError({\n              status: 'Error in localization configuration',\n              message: '\"' + options.key + '\" is declared as available locale, but no such locale file exists.'\n            });\n            deferred.reject(options.key);\n          });\n\n          return deferred.promise;\n        };\n      }]);\n\n    ngModule.config([\n      '$translateProvider',\n      'configurationProvider',\n      function(\n      $translateProvider,\n       configurationProvider\n      ) {\n        var avail = configurationProvider.getAvailableLocales();\n        var fallback = configurationProvider.getFallbackLocale();\n\n        $translateProvider.useLoader('localeLoader', {\n          prefix: appRoot + '/app/tasklist/locales/',\n          suffix: '.json',\n          callback: function(err, data, locale) {\n            if(!err && data && data.dateLocales) {\n              // Deprecation warning: moment.lang is deprecated. Use moment.locale instead.\n              moment.locale(locale || fallback, data.dateLocales);\n            }\n          }\n        });\n\n        $translateProvider.registerAvailableLanguageKeys(avail);\n        $translateProvider.fallbackLanguage(fallback);\n\n        $translateProvider.determinePreferredLanguage(function() {\n          var nav = window.navigator;\n          var browserLang = ((angular.isArray(nav.languages) ? nav.languages[0] :\n                              nav.language ||\n                              nav.browserLanguage ||\n                              nav.systemLanguage ||\n                              nav.userLanguage\n                            ) || '').split('-');\n          var idx = avail.indexOf(angular.lowercase(browserLang[0]));\n          if (idx > -1) {\n            return avail[idx];\n          } else {\n            return fallback;\n          }\n        });\n      }]);\n  };\n});\n\n","define('scripts/config/tooltip',[], function() {\n  'use strict';\n\n  return [\n    '$tooltipProvider',\n  function(\n    $tooltipProvider\n  ) {\n    $tooltipProvider.options({\n      appendToBody: true,\n      popupDelay: 500\n    });\n  }];\n});\n\n","define('scripts/config/uris',[\n  'angular'\n], function(\n  angular\n) {\n  'use strict';\n\n\n  return function(ngModule, config) {\n\n    ngModule.config([\n      'UriProvider',\n      function(\n        UriProvider\n      ) {\n\n        UriProvider.replace(':appName', 'tasklist');\n        UriProvider.replace('app://', config.href);\n        UriProvider.replace('adminbase://', config['app-root'] + '/app/admin/');\n        UriProvider.replace('tasklistbase://', config['app-root'] + '/app/tasklist/');\n        UriProvider.replace('cockpitbase://', config['app-root'] + '/app/cockpit/');\n        UriProvider.replace('admin://', config['admin-api']);\n        UriProvider.replace('plugin://', config['tasklist-api'] + 'plugin/');\n        UriProvider.replace('engine://', config['engine-api']);\n\n        UriProvider.replace(':engine', ['$window', function($window) {\n          var uri = $window.location.href;\n\n          var match = uri.match(/\\/app\\/tasklist\\/(\\w+)(|\\/)/);\n          if (match) {\n            return match[1];\n          } else {\n            throw new Error('no process engine selected');\n          }\n        }]);\n      }]);\n  };\n});\n\n","define('scripts/controller/cam-tasklist-app-ctrl',[],function() {\n  'use strict';\n\n  var TasklistApp = (function() {\n\n    function TasklistApp() {\n\n      this.refreshProvider = null;\n\n    }\n\n    return TasklistApp;\n\n  })();\n\n  return [\n    'camAPI',\n    '$window',\n    '$scope',\n  function(\n    camAPI,\n    $window,\n    $scope\n  ) {\n\n    // create a new tasklistApp\n    $scope.tasklistApp = new TasklistApp();\n\n    function getUserProfile(auth) {\n      if (!auth || !auth.name) {\n        $scope.userFullName = null;\n        return;\n      }\n\n      var userService = camAPI.resource('user');\n      userService.profile(auth.name, function (err, info) {\n        if (err) {\n          $scope.userFullName = null;\n          throw err;\n        }\n        $scope.userFullName = info.firstName + ' ' + info.lastName;\n      });\n    }\n\n    $scope.$on('authentication.changed', function (ev, auth) {\n      getUserProfile(auth);\n    });\n\n    getUserProfile($scope.authentication);\n\n    $scope.$on('authentication.logout.success', function () {\n      $window.location.reload();\n    });\n  }];\n\n});\n\n","define('scripts/controller/cam-tasklist-view-ctrl',[\n  'angular'\n], function(\n  angular\n) {\n  'use strict';\n\n  function getRefreshProvider(tasklistData) {\n    return {\n      refreshTaskList : function () {\n        tasklistData.changed('taskList');\n      }\n    };\n  }\n\n  return [\n    '$scope',\n    '$q',\n    '$location',\n    '$interval',\n    'search',\n    'dataDepend',\n    'camAPI',\n  function(\n    $scope,\n    $q,\n    $location,\n    $interval,\n    search,\n    dataDepend,\n    camAPI\n  ) {\n\n    function getPropertyFromLocation(property) {\n      var search = $location.search() || {};\n      return search[property] || null;\n    }\n\n    function updateSilently(params) {\n      search.updateSilently(params);\n    }\n\n    $scope.$on('$destroy', function () {\n      $scope.tasklistApp.refreshProvider = null;\n    });\n\n    // init data depend for task list data\n    var tasklistData = $scope.tasklistData = dataDepend.create($scope);\n\n    // init taslist app with a refresh provider\n    if ($scope.tasklistApp) {\n      $scope.tasklistApp.refreshProvider = getRefreshProvider(tasklistData);\n    }\n\n    // get current task id from location\n    var taskId = getPropertyFromLocation('task');\n    var detailsTab = getPropertyFromLocation('detailsTab');\n\n    // resources\n    var Filter = camAPI.resource('filter');\n    var Task = camAPI.resource('task');\n\n    // current selected filter\n    var currentFilter;\n\n    // provide /////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Provides the list of filters\n     */\n    tasklistData.provide('filters', [ function() {\n      var deferred = $q.defer();\n\n      Filter.list({\n        itemCount: false,\n        resoureType: 'Task'\n      }, function(err, res) {\n        if(!!err) {\n          deferred.reject(err);\n\n        }\n        else {\n          deferred.resolve(res);\n        }\n      });\n\n      return deferred.promise;\n    }]);\n\n    tasklistData.provide('currentFilter', ['filters', function(filters) {\n\n      var focused,\n          filterId = getPropertyFromLocation('filter');\n\n      for (var i = 0, filter; !!(filter = filters[i]); i++) {\n\n          if (filterId === filter.id) {\n            focused = filter;\n            break;\n          }\n          // auto focus first filter\n          if(!focused || filter.properties.priority < focused.properties.priority) {\n            focused = filter;\n          }\n      }\n\n      if(currentFilter && currentFilter.id !== focused.id) {\n        var currentPage = getPropertyFromLocation('page');\n        if (currentPage) {\n          updateSilently({\n            page: '1'\n          });\n        }\n      }\n\n      if(focused && focused.id !== filterId) {\n        updateSilently({\n          filter: focused.id\n        });\n      }\n\n      return angular.copy(focused);\n\n    }]);\n\n    tasklistData.provide('searchQuery', {\n        processVariables: [],\n        taskVariables: [],\n        caseInstanceVariables: []\n      });\n\n    tasklistData.provide('taskListQuery', ['currentFilter', 'searchQuery', function(currentFilter, searchQuery) {\n      if (!currentFilter) {\n        return null;\n      }\n\n      var taskListQuery = angular.copy(searchQuery);\n\n      var firstResult = ((getPropertyFromLocation('page') || 1) - 1) * 15;\n      var sorting = getPropertyFromLocation('sorting');\n      try {\n        sorting = JSON.parse(sorting);\n      }\n      catch (err) {\n        sorting = [{}];\n      }\n      sorting = (Array.isArray(sorting) && sorting.length) ? sorting : [{}];\n      sorting[0].sortOrder = sorting[0].sortOrder || 'desc';\n      sorting[0].sortBy = sorting[0].sortBy || 'created';\n\n      taskListQuery.id = currentFilter.id;\n      taskListQuery.firstResult = firstResult;\n      taskListQuery.maxResults = 15;\n      taskListQuery.sorting = sorting;\n      taskListQuery.active = true;\n\n      return taskListQuery;\n\n    }]);\n\n     /**\n      * Provide the list of tasks\n      */\n     tasklistData.provide('taskList', [ 'taskListQuery', function(taskListQuery) {\n       var deferred = $q.defer();\n\n       if(!taskListQuery || taskListQuery.id === null) {\n         // no filter selected\n         deferred.resolve({\n           count: 0,\n           _embedded : {}\n         });\n       }\n       else {\n         // filter selected\n         Filter.getTasks(angular.copy(taskListQuery), function(err, res) {\n           if(err) {\n             deferred.reject(err);\n           }\n           else {\n             deferred.resolve(res);\n           }\n         });\n       }\n       return deferred.promise;\n     }]);\n\n   /**\n     * Provide current task id\n     */\n    tasklistData.provide('taskId', { 'taskId' : taskId });\n\n\n    /**\n     * Provide the current task or the value 'null' in case no task is selected\n     */\n    tasklistData.provide('task', ['taskId', function(task) {\n\n      var deferred = $q.defer();\n\n      var taskId = task.taskId;\n\n      if(typeof taskId !== 'string') {\n        deferred.resolve(null);\n      }\n      else {\n        Task.get(taskId, function(err, res) {\n          if(err) {\n            deferred.reject(err);\n          }\n          else {\n            deferred.resolve(res);\n          }\n\n        });\n      }\n\n      return deferred.promise;\n    }]);\n\n    // observe //////////////////////////////////////////////////////////////////////////////\n\n\n    tasklistData.observe('currentFilter', function(_currentFilter) {\n      currentFilter = _currentFilter;\n    });\n\n    /*\n     * automatically refresh the taskList every 10 seconds so that changes\n     * (such as claims) are represented in realtime\n     */\n    var intervalPromise;\n    tasklistData.observe('currentFilter', function(currentFilter) {\n      // stop current refresh\n      if(intervalPromise) {\n        $interval.cancel(intervalPromise);\n      }\n\n      if(currentFilter && currentFilter.properties.refresh) {\n        intervalPromise = $interval(function(){\n\n          if($scope.tasklistApp && $scope.tasklistApp.refreshProvider) {\n            $scope.tasklistApp.refreshProvider.refreshTaskList();\n\n          }\n          else {\n            $interval.cancel(intervalPromise);\n          }\n\n        }, 10000);\n      }\n    });\n\n    // routeChanged listener ////////////////////////////////////////////////////////////////\n\n    /**\n     * Update task if location changes\n     */\n    $scope.$on('$routeChanged', function() {\n      var oldTaskId = taskId;\n      var oldDetailsTab = detailsTab;\n\n      taskId = getPropertyFromLocation('task');\n      detailsTab = getPropertyFromLocation('detailsTab');\n\n      if (oldTaskId !== taskId || oldDetailsTab === detailsTab) {\n        tasklistData.set('taskId', { 'taskId' : taskId });\n      }\n\n      currentFilter = null;\n      tasklistData.changed('currentFilter');\n    });\n  }];\n});\n\n","define('scripts/services/cam-tasklist-assign-notification',[], function() {\n  'use strict';\n  return ['camAPI', 'Notifications', '$translate',\n  function(camAPI,   Notifications,   $translate) {\n    var Task = camAPI.resource('task');\n    /**\n     * Search for tasks which are assigned to the user and display a notification containin a list of these tasks\n     *\n     * @param {Object} params\n     * @param {String} [params.assignee]              The name of the user for which the tasks should be retrieved\n     * @param {String} [params.processInstanceId]     The ID of the process instance.\n     * @param {String} [params.caseInstanceId]        The ID of the case instance.\n     */\n    return function(params) {\n      if(!params.assignee || !(params.processInstanceId || params.caseInstanceId)) {\n        return;\n      }\n      Task.list(params, function(err, data) {\n        if(data._embedded.task.length > 0) {\n          var msg = \"\";\n          for(var task, i = 0; !!(task = data._embedded.task[i]); i++) {\n            msg += '<a ng-href=\"#/?task='+ task.id +'\" ng-click=\"removeNotification(notification)\">'+task.name+'</a>, ';\n          }\n          $translate(params.processInstanceId ? 'ASSIGN_NOTE_PROCESS' : 'ASSIGN_NOTE_CASE').then(function(translated) {\n            Notifications.addMessage({\n              duration: 16000,\n              status: translated,\n              message: msg.slice(0,-2)\n            });\n          });\n        }\n      });\n    };\n  }];\n});\n\n","define('scripts/services/cam-tasklist-configuration',['angular'], function(angular) {\n  'use strict';\n\n  var config = window.camTasklistConf;\n  var defaultConfig = {\n    \"dateFormat\": {\n      \"monthName\": \"MMMM\",\n      \"day\": \"DD\",\n      \"abbr\": \"lll\",\n      \"normal\": \"LLL\",\n      \"long\": \"LLLL\",\n      \"short\": \"LL\"\n    },\n    \"locales\": {\n      \"availableLocales\": [\"en\"],\n      \"fallbackLocale\": \"en\"\n    }\n  };\n  return [function() {\n    this.getDateFormat = function(formatName) {\n      var dateFormatObj = config.dateFormat || defaultConfig.dateFormat;\n      return dateFormatObj[formatName] || defaultConfig.dateFormat[formatName];\n    };\n\n    this.getFallbackLocale = function() {\n      if(config.locales && config.locales.fallbackLocale) {\n        return config.locales.fallbackLocale;\n      } else {\n        return defaultConfig.locales.fallbackLocale;\n      }\n    };\n\n    this.getAvailableLocales = function() {\n      if(config.locales && config.locales.availableLocales) {\n        return config.locales.availableLocales;\n      } else {\n        return defaultConfig.locales.availableLocales;\n      }\n    };\n\n    this.getDateLocales = function() {\n      return config.camDateLocales;\n    };\n\n\n    this.$get = function() {\n      return this;\n    };\n  }];\n});\n\n","\ndefine('text!scripts/variable/directives/cam-tasklist-variables.html',[],function () { return '<div class=\"variables-list\"\\n     ng-class=\"{expanded: (expanded && shownVariablesCount > 2)}\">\\n\\n  <!-- <h6 class=\"col-xs-12\"\\n      translate=\"TASK_VARIABLES\">Variables</h6> -->\\n\\n  <div ng-repeat=\"(delta, info) in variableDefinitions\"\\n       ng-if=\"variablesByName[info.name] || filterProperties.showUndefinedVariable\">\\n    <div class=\"col-xs-12 col-lg-6\">\\n\\n      <div class=\"row variable-item\">\\n        <!-- <span class=\"col-xs-4 col-lg-12\"\\n              ng-click=\"selectValue($event)\"> -->\\n        <span class=\"col-xs-4 col-lg-12\">\\n          <strong class=\"variable-label\"\\n                  ng-class=\"{\\'undefined\\' : !variablesByName[info.name] && filterProperties.showUndefinedVariable}\"\\n                  tooltip-placement=\"top\"\\n                  tooltip=\"{{ info.name }}\">\\n            {{ info.label }}:\\n          </strong>\\n        </span>\\n\\n\\n        <span class=\"col-xs-8 col-lg-12\"\\n              ng-if=\"!variablesByName[info.name] && filterProperties.showUndefinedVariable\">\\n          <span class=\"variable-value undefined\"\\n                translate=\"UNDEFINED_VARIABLE\">\\n            &lt;Undefined&gt;\\n          </span>\\n        </span>\\n\\n\\n        <span class=\"col-xs-8 col-lg-12\"\\n              ng-if=\"(variablesByName[info.name] && variablesByName[info.name].value !== null) || variablesByName[info.name].type === \\'Bytes\\'\"\\n              ng-switch=\"variablesByName[info.name].type\">\\n          <span class=\"variable-value\"\\n                ng-switch-when=\"Date\"\\n                tooltip-placement=\"top\"\\n                tooltip=\"{{ variablesByName[info.name].value | camDate }}\">\\n            {{ variablesByName[info.name].value | camDate }}\\n          </span>\\n\\n          <span class=\"variable-value\"\\n                ng-switch-when=\"Null\">\\n            {{ variablesByName[info.name].value }}\\n          </span>\\n\\n          <a class=\"variable-value variable-type\"\\n             ng-switch-when=\"Object\"\\n             ng-click=\"showValue(variablesByName[info.name], $event)\">\\n            {{ variablesByName[info.name].valueInfo.objectTypeName }}\\n          </a>\\n\\n          <a class=\"variable-value\"\\n             ng-switch-when=\"Bytes\"\\n             ng-click=\"download(variablesByName[info.name], $event)\">\\n            {{ \\'DOWNLOAD\\' | translate }}\\n            <span class=\"glyphicon glyphicon-download\"></span>\\n          </a>\\n\\n          <span class=\"variable-value\"\\n                ng-switch-default\\n                tooltip-placement=\"top\"\\n                tooltip=\"{{ variablesByName[info.name].value }}\">\\n            {{ variablesByName[info.name].value }}\\n          </span>\\n        </span>\\n\\n        <span class=\"col-xs-8 col-lg-12\"\\n          ng-if=\"variablesByName[info.name].value === null && variablesByName[info.name].type !== \\'Bytes\\'\">\\n          <span class=\"variable-value variable-empty-value\"\\n                translate=\"EMPTY_VALUE\">Empty</span>\\n        </span>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n\\n  <div class=\"shutter\"\\n       ng-if=\"shownVariablesCount > 2\"\\n       ng-click=\"toggle($event)\"\\n       tooltip-placement=\"bottom\"\\n       tooltip=\"{{ (expanded ? \\'LESS_VARIABLES\\' : \\'MORE_VARIABLES\\') | translate }}\">\\n    <a class=\"glyphicon\"\\n       ng-class=\"{\\'glyphicon-chevron-up\\': expanded, \\'glyphicon-chevron-down\\': !expanded}\">\\n    </a>\\n  </div>\\n</div>\\n\\n';});\n\n","\ndefine('text!scripts/variable/modals/cam-tasklist-variables-detail-modal.html',[],function () { return '<div class=\"modal-header\">\\n  <h3 class=\"modal-title\">\\n    <span translate=\"VARIABLE_VALUE\">Value of</span>\\n    {{ variable.name }}\\n  </h3>\\n</div>\\n\\n<div class=\"modal-body\">\\n  <div class=\"form-group\">\\n    <label translate=\"VARIABLE_VALUE_INFO\">Value Info</label>\\n  </div>\\n  <div class=\"form-group\">\\n    {{ \\'VARIABLE_OBJECT_TYPE_NAME\\' | translate }}:\\n    <code class=\"variable-type\">{{ type }}</code>\\n  </div>\\n  <div class=\"form-group\">\\n    {{ \\'VARIABLE_SERIALIZATION_DATA_FORMAT\\' | translate }}:\\n    <code class=\"variable-type\">{{ dataFormat }}</code>\\n  </div>\\n\\n  <div class=\"form-group\">\\n    <label translate=\"VARIABLE_VALUE\">Value</label>\\n  </div>\\n\\n   <ul class=\"nav nav-tabs\">\\n    <li ng-class=\"{ active: selectedTab === \\'serialized\\' }\">\\n      <a href ng-click=\"selectTab(\\'serialized\\')\">{{ \\'SERIALIZED\\' | translate }}</a>\\n    </li>\\n    <li ng-class=\"{ active: selectedTab === \\'deserialized\\' }\">\\n      <a href ng-click=\"selectTab(\\'deserialized\\')\">{{ \\'DESERIALIZED\\' | translate }}</a>\\n    </li>\\n  </ul>\\n\\n  <div ng-show=\"selectedTab === \\'serialized\\'\" class=\"tab-content\">\\n    <textarea disabled\\n              ng-model=\"value\"\\n              rows=\"10\"\\n              class=\"form-control input-xxlarge\">\\n    </textarea>\\n  </div>\\n  <div ng-show=\"selectedTab === \\'deserialized\\'\" class=\"tab-content\">\\n    <div class=\"alert alert-warning\"\\n         role=\"alert\" \\n         ng-show=\"deserializationError\">\\n      <strong>{{ \\'DESERIALIZATION_ERROR\\' | translate }}</strong>:\\n      {{ deserializationError }}\\n    </div>\\n    <div ng-show=\"!deserializationError\">\\n      <textarea disabled\\n                ng-model=\"valueDeserialized\"\\n                rows=\"10\"\\n                class=\"form-control input-xxlarge\">\\n      </textarea>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n<div class=\"modal-footer\">\\n  <div class=\"row row-action\">\\n    <div class=\"col-xs-12\">\\n      <button class=\"btn btn-xs btn-link\"\\n              type=\"submit\"\\n              ng-click=\"$dismiss()\"\\n              translate=\"CLOSE\">Close</button>\\n    </div>\\n  </div>\\n</div>\\n';});\n\n","// RequireJS dependencies\ndefine('scripts/variable/directives/cam-tasklist-variables',[\n  'angular',\n  'text!./cam-tasklist-variables.html',\n  'text!../modals/cam-tasklist-variables-detail-modal.html'\n], function(\n  angular,\n  template,\n  modalTemplate\n) {\n  'use strict';\n\n  // AngularJS DI\n  return [\n    '$modal',\n    '$window',\n    'Uri',\n  function(\n    $modal,\n    $window,\n    Uri\n  ) {\n\n    return {\n      template: template,\n\n      scope: {\n        variables:        '=',\n        filterProperties: '='\n      },\n\n      link: function(scope) {\n        scope.variableDefinitions = [];\n        scope.variablesByName = {};\n        scope.expanded = false;\n        scope.shownVariablesCount = 0;\n\n        scope.toggle = function($event) {\n          scope.expanded = !scope.expanded;\n          if ($event && $event.preventDefault) {\n            $event.preventDefault();\n          }\n          $event.stopPropagation();\n        };\n\n        scope.showValue = function(variable, $event) {\n          $event.preventDefault();\n          $event.stopPropagation();\n          $modal.open({\n            template: modalTemplate,\n\n            windowClass: 'variable-modal-detail',\n\n            resolve: {\n              details: function() { return variable; }\n            },\n\n            controller: 'camTasklistVariablesDetailsModalCtrl'\n          });\n        };\n\n        scope.download = function(variable, $event) {\n          $event.preventDefault();\n          $event.stopPropagation();\n          var link = variable._links.self.href +'/data';\n          link = Uri.appUri('engine://engine/:engine'+ link);\n          $window.open(link, 'download');\n        };\n\n        if (scope.filterProperties) {\n          scope.variableDefinitions = scope.filterProperties.variables || {};\n\n          // building an object on which keys are name of variables is more efficient\n          // than calling a function which would iterate every time.\n          angular.forEach(scope.variables, function(variable) {\n            scope.variablesByName[variable.name] = variable;\n          });\n\n          scope.shownVariablesCount = Object.keys(scope.filterProperties.showUndefinedVariable ? scope.variableDefinitions : scope.variablesByName).length;\n        }\n      }\n    };\n  }];\n});\n\n","define('scripts/variable/modals/cam-tasklist-variables-detail-modal',[\n  'angular'\n], function(\n  angular\n) {\n  'use strict';\n\n  return [\n    '$scope',\n    '$http',\n    'Uri',\n    'details',\n  function(\n    $scope,\n    $http,\n    Uri,\n    details\n  ) {\n\n    $scope.$on('$locationChangeSuccess', function() {\n      $scope.$dismiss();\n    });\n\n    $scope.value = null;\n    $scope.valueDeserialized = null;\n    $scope.deserializationError = null;\n    $scope.type = null;\n    $scope.dataFormat = null;\n    $scope.variable = details;\n    $scope.selectedTab = 'serialized';\n\n    switch ($scope.variable.type) {\n      case 'Object':\n        $scope.type = $scope.variable.valueInfo.objectTypeName;\n        $scope.value = $scope.variable.value;\n        $scope.dataFormat = $scope.variable.valueInfo.serializationDataFormat;\n\n        // attempt fetching the deserialized value\n        $http({\n          method: 'GET', \n          url: Uri.appUri('engine://engine/:engine'+$scope.variable._links.self.href)\n        }).success(function(data, status) {\n          $scope.valueDeserialized = JSON.stringify(data.value);\n        }).error(function(data, status) {\n          $scope.deserializationError = data.message;\n        });\n\n        break;\n\n      default:\n        $scope.value = $scope.variable.value;\n    }\n\n    $scope.selectTab = function(tab) {\n      $scope.selectedTab = tab;\n    };\n\n  }];\n\n});\n","/* angular-moment.js / v0.9.0 / (c) 2013, 2014, 2015 Uri Shaked / MIT Licence */\n\n'format global';\n/* global define */\n'deps angular';\n'deps moment';\n\n(function () {\n\t'use strict';\n\n\tfunction angularMoment(angular, moment) {\n\n\t\t/**\n\t\t * @ngdoc overview\n\t\t * @name angularMoment\n\t\t *\n\t\t * @description\n\t\t * angularMoment module provides moment.js functionality for angular.js apps.\n\t\t */\n\t\treturn angular.module('angularMoment', [])\n\n\t\t/**\n\t\t * @ngdoc object\n\t\t * @name angularMoment.config:angularMomentConfig\n\t\t *\n\t\t * @description\n\t\t * Common configuration of the angularMoment module\n\t\t */\n\t\t\t.constant('angularMomentConfig', {\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name angularMoment.config.angularMomentConfig#preprocess\n\t\t\t\t * @propertyOf angularMoment.config:angularMomentConfig\n\t\t\t\t * @returns {string} The default preprocessor to apply\n\t\t\t\t *\n\t\t\t\t * @description\n\t\t\t\t * Defines a default preprocessor to apply (e.g. 'unix', 'etc', ...). The default value is null,\n\t\t\t\t * i.e. no preprocessor will be applied.\n\t\t\t\t */\n\t\t\t\tpreprocess: null, // e.g. 'unix', 'utc', ...\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name angularMoment.config.angularMomentConfig#timezone\n\t\t\t\t * @propertyOf angularMoment.config:angularMomentConfig\n\t\t\t\t * @returns {string} The default timezone\n\t\t\t\t *\n\t\t\t\t * @description\n\t\t\t\t * The default timezone (e.g. 'Europe/London'). Empty string by default (does not apply\n\t\t\t\t * any timezone shift).\n\t\t\t\t */\n\t\t\t\ttimezone: '',\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name angularMoment.config.angularMomentConfig#format\n\t\t\t\t * @propertyOf angularMoment.config:angularMomentConfig\n\t\t\t\t * @returns {string} The pre-conversion format of the date\n\t\t\t\t *\n\t\t\t\t * @description\n\t\t\t\t * Specify the format of the input date. Essentially it's a\n\t\t\t\t * default and saves you from specifying a format in every\n\t\t\t\t * element. Overridden by element attr. Null by default.\n\t\t\t\t */\n\t\t\t\tformat: null,\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name angularMoment.config.angularMomentConfig#statefulFilters\n\t\t\t\t * @propertyOf angularMoment.config:angularMomentConfig\n\t\t\t\t * @returns {boolean} Whether angular-moment filters should be stateless (or not)\n\t\t\t\t *\n\t\t\t\t * @description\n\t\t\t\t * Specifies whether the filters included with angular-moment are stateful.\n\t\t\t\t * Stateful filters will automatically re-evaluate whenever you change the timezone\n\t\t\t\t * or language settings, but may negatively impact performance. true by default.\n\t\t\t\t */\n\t\t\t\tstatefulFilters: true\n\t\t\t})\n\n\t\t/**\n\t\t * @ngdoc object\n\t\t * @name angularMoment.object:moment\n\t\t *\n\t\t * @description\n\t\t * moment global (as provided by the moment.js library)\n\t\t */\n\t\t\t.constant('moment', moment)\n\n\t\t/**\n\t\t * @ngdoc object\n\t\t * @name angularMoment.config:amTimeAgoConfig\n\t\t * @module angularMoment\n\t\t *\n\t\t * @description\n\t\t * configuration specific to the amTimeAgo directive\n\t\t */\n\t\t\t.constant('amTimeAgoConfig', {\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name angularMoment.config.amTimeAgoConfig#withoutSuffix\n\t\t\t\t * @propertyOf angularMoment.config:amTimeAgoConfig\n\t\t\t\t * @returns {boolean} Whether to include a suffix in am-time-ago directive\n\t\t\t\t *\n\t\t\t\t * @description\n\t\t\t\t * Defaults to false.\n\t\t\t\t */\n\t\t\t\twithoutSuffix: false,\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name angularMoment.config.amTimeAgoConfig#serverTime\n\t\t\t\t * @propertyOf angularMoment.config:amTimeAgoConfig\n\t\t\t\t * @returns {number} Server time in milliseconds since the epoch\n\t\t\t\t *\n\t\t\t\t * @description\n\t\t\t\t * If set, time ago will be calculated relative to the given value.\n\t\t\t\t * If null, local time will be used. Defaults to null.\n\t\t\t\t */\n\t\t\t\tserverTime: null,\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name angularMoment.config.amTimeAgoConfig#format\n\t\t\t\t * @propertyOf angularMoment.config:amTimeAgoConfig\n\t\t\t\t * @returns {string} The format of the date to be displayed in the title of the element. If null,\n\t\t\t\t *        the directive set the title of the element.\n\t\t\t\t *\n\t\t\t\t * @description\n\t\t\t\t * Specify the format of the date when displayed. null by default.\n\t\t\t\t */\n\t\t\t\ttitleFormat: null\n\t\t\t})\n\n\t\t/**\n\t\t * @ngdoc directive\n\t\t * @name angularMoment.directive:amTimeAgo\n\t\t * @module angularMoment\n\t\t *\n\t\t * @restrict A\n\t\t */\n\t\t\t.directive('amTimeAgo', ['$window', 'moment', 'amMoment', 'amTimeAgoConfig', 'angularMomentConfig', function ($window, moment, amMoment, amTimeAgoConfig, angularMomentConfig) {\n\n\t\t\t\treturn function (scope, element, attr) {\n\t\t\t\t\tvar activeTimeout = null;\n\t\t\t\t\tvar currentValue;\n\t\t\t\t\tvar currentFormat = angularMomentConfig.format;\n\t\t\t\t\tvar withoutSuffix = amTimeAgoConfig.withoutSuffix;\n\t\t\t\t\tvar titleFormat = amTimeAgoConfig.titleFormat;\n\t\t\t\t\tvar localDate = new Date().getTime();\n\t\t\t\t\tvar preprocess = angularMomentConfig.preprocess;\n\t\t\t\t\tvar modelName = attr.amTimeAgo.replace(/^::/, '');\n\t\t\t\t\tvar isBindOnce = (attr.amTimeAgo.indexOf('::') === 0);\n\t\t\t\t\tvar isTimeElement = ('TIME' === element[0].nodeName.toUpperCase());\n\t\t\t\t\tvar unwatchChanges;\n\n\t\t\t\t\tfunction getNow() {\n\t\t\t\t\t\tvar now;\n\t\t\t\t\t\tif (amTimeAgoConfig.serverTime) {\n\t\t\t\t\t\t\tvar localNow = new Date().getTime();\n\t\t\t\t\t\t\tvar nowMillis = localNow - localDate + amTimeAgoConfig.serverTime;\n\t\t\t\t\t\t\tnow = moment(nowMillis);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnow = moment();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn now;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction cancelTimer() {\n\t\t\t\t\t\tif (activeTimeout) {\n\t\t\t\t\t\t\t$window.clearTimeout(activeTimeout);\n\t\t\t\t\t\t\tactiveTimeout = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction updateTime(momentInstance) {\n\t\t\t\t\t\telement.text(momentInstance.from(getNow(), withoutSuffix));\n\n\t\t\t\t\t\tif (titleFormat && !element.attr('title')) {\n\t\t\t\t\t\t\telement.attr('title', momentInstance.local().format(titleFormat));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!isBindOnce) {\n\n\t\t\t\t\t\t\tvar howOld = Math.abs(getNow().diff(momentInstance, 'minute'));\n\t\t\t\t\t\t\tvar secondsUntilUpdate = 3600;\n\t\t\t\t\t\t\tif (howOld < 1) {\n\t\t\t\t\t\t\t\tsecondsUntilUpdate = 1;\n\t\t\t\t\t\t\t} else if (howOld < 60) {\n\t\t\t\t\t\t\t\tsecondsUntilUpdate = 30;\n\t\t\t\t\t\t\t} else if (howOld < 180) {\n\t\t\t\t\t\t\t\tsecondsUntilUpdate = 300;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tactiveTimeout = $window.setTimeout(function () {\n\t\t\t\t\t\t\t\tupdateTime(momentInstance);\n\t\t\t\t\t\t\t}, secondsUntilUpdate * 1000);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction updateDateTimeAttr(value) {\n\t\t\t\t\t\tif (isTimeElement) {\n\t\t\t\t\t\t\telement.attr('datetime', value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction updateMoment() {\n\t\t\t\t\t\tcancelTimer();\n\t\t\t\t\t\tif (currentValue) {\n\t\t\t\t\t\t\tvar momentValue = amMoment.preprocessDate(currentValue, preprocess, currentFormat);\n\t\t\t\t\t\t\tupdateTime(momentValue);\n\t\t\t\t\t\t\tupdateDateTimeAttr(momentValue.toISOString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tunwatchChanges = scope.$watch(modelName, function (value) {\n\t\t\t\t\t\tif ((typeof value === 'undefined') || (value === null) || (value === '')) {\n\t\t\t\t\t\t\tcancelTimer();\n\t\t\t\t\t\t\tif (currentValue) {\n\t\t\t\t\t\t\t\telement.text('');\n\t\t\t\t\t\t\t\tupdateDateTimeAttr('');\n\t\t\t\t\t\t\t\tcurrentValue = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentValue = value;\n\t\t\t\t\t\tupdateMoment();\n\n\t\t\t\t\t\tif (value !== undefined && isBindOnce) {\n\t\t\t\t\t\t\tunwatchChanges();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (angular.isDefined(attr.amWithoutSuffix)) {\n\t\t\t\t\t\tscope.$watch(attr.amWithoutSuffix, function (value) {\n\t\t\t\t\t\t\tif (typeof value === 'boolean') {\n\t\t\t\t\t\t\t\twithoutSuffix = value;\n\t\t\t\t\t\t\t\tupdateMoment();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twithoutSuffix = amTimeAgoConfig.withoutSuffix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tattr.$observe('amFormat', function (format) {\n\t\t\t\t\t\tif (typeof format !== 'undefined') {\n\t\t\t\t\t\t\tcurrentFormat = format;\n\t\t\t\t\t\t\tupdateMoment();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tattr.$observe('amPreprocess', function (newValue) {\n\t\t\t\t\t\tpreprocess = newValue;\n\t\t\t\t\t\tupdateMoment();\n\t\t\t\t\t});\n\n\t\t\t\t\tscope.$on('$destroy', function () {\n\t\t\t\t\t\tcancelTimer();\n\t\t\t\t\t});\n\n\t\t\t\t\tscope.$on('amMoment:localeChanged', function () {\n\t\t\t\t\t\tupdateMoment();\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}])\n\n\t\t/**\n\t\t * @ngdoc service\n\t\t * @name angularMoment.service.amMoment\n\t\t * @module angularMoment\n\t\t */\n\t\t\t.service('amMoment', ['moment', '$rootScope', '$log', 'angularMomentConfig', function (moment, $rootScope, $log, angularMomentConfig) {\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name angularMoment:amMoment#preprocessors\n\t\t\t\t * @module angularMoment\n\t\t\t\t *\n\t\t\t\t * @description\n\t\t\t\t * Defines the preprocessors for the preprocessDate method. By default, the following preprocessors\n\t\t\t\t * are defined: utc, unix.\n\t\t\t\t */\n\t\t\t\tthis.preprocessors = {\n\t\t\t\t\tutc: moment.utc,\n\t\t\t\t\tunix: moment.unix\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc function\n\t\t\t\t * @name angularMoment.service.amMoment#changeLocale\n\t\t\t\t * @methodOf angularMoment.service.amMoment\n\t\t\t\t *\n\t\t\t\t * @description\n\t\t\t\t * Changes the locale for moment.js and updates all the am-time-ago directive instances\n\t\t\t\t * with the new locale. Also broadcasts a `amMoment:localeChanged` event on $rootScope.\n\t\t\t\t *\n\t\t\t\t * @param {string} locale Locale code (e.g. en, es, ru, pt-br, etc.)\n\t\t\t\t */\n\t\t\t\tthis.changeLocale = function (locale) {\n\t\t\t\t\tvar result = moment.locale(locale);\n\t\t\t\t\tif (angular.isDefined(locale)) {\n\t\t\t\t\t\t$rootScope.$broadcast('amMoment:localeChanged');\n\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc function\n\t\t\t\t * @name angularMoment.service.amMoment#preprocessDate\n\t\t\t\t * @methodOf angularMoment.service.amMoment\n\t\t\t\t *\n\t\t\t\t * @description\n\t\t\t\t * Preprocess a given value and convert it into a Moment instance appropriate for use in the\n\t\t\t\t * am-time-ago directive and the filters.\n\t\t\t\t *\n\t\t\t\t * @param {*} value The value to be preprocessed\n\t\t\t\t * @param {string} preprocess The name of the preprocessor the apply (e.g. utc, unix)\n\t\t\t\t * @param {string=} format Specifies how to parse the value (see {@link http://momentjs.com/docs/#/parsing/string-format/})\n\t\t\t\t * @return {Moment} A value that can be parsed by the moment library\n\t\t\t\t */\n\t\t\t\tthis.preprocessDate = function (value, preprocess, format) {\n\t\t\t\t\tif (angular.isUndefined(preprocess)) {\n\t\t\t\t\t\tpreprocess = angularMomentConfig.preprocess;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.preprocessors[preprocess]) {\n\t\t\t\t\t\treturn this.preprocessors[preprocess](value, format);\n\t\t\t\t\t}\n\t\t\t\t\tif (preprocess) {\n\t\t\t\t\t\t$log.warn('angular-moment: Ignoring unsupported value for preprocess: ' + preprocess);\n\t\t\t\t\t}\n\t\t\t\t\tif (!isNaN(parseFloat(value)) && isFinite(value)) {\n\t\t\t\t\t\t// Milliseconds since the epoch\n\t\t\t\t\t\treturn moment(parseInt(value, 10));\n\t\t\t\t\t}\n\t\t\t\t\t// else just returns the value as-is.\n\t\t\t\t\treturn moment(value, format);\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc function\n\t\t\t\t * @name angularMoment.service.amMoment#applyTimezone\n\t\t\t\t * @methodOf angularMoment.service.amMoment\n\t\t\t\t *\n\t\t\t\t * @description\n\t\t\t\t * Apply a timezone onto a given moment object - if moment-timezone.js is included\n\t\t\t\t * Otherwise, it'll not apply any timezone shift.\n\t\t\t\t *\n\t\t\t\t * @param {Moment} aMoment a moment() instance to apply the timezone shift to\n\t\t\t\t * @returns {Moment} The given moment with the timezone shift applied\n\t\t\t\t */\n\t\t\t\tthis.applyTimezone = function (aMoment) {\n\t\t\t\t\tvar timezone = angularMomentConfig.timezone;\n\t\t\t\t\tif (aMoment && timezone) {\n\t\t\t\t\t\tif (aMoment.tz) {\n\t\t\t\t\t\t\taMoment = aMoment.tz(timezone);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$log.warn('angular-moment: timezone specified but moment.tz() is undefined. Did you forget to include moment-timezone.js?');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn aMoment;\n\t\t\t\t};\n\t\t\t}])\n\n\t\t/**\n\t\t * @ngdoc filter\n\t\t * @name angularMoment.filter:amCalendar\n\t\t * @module angularMoment\n\t\t */\n\t\t\t.filter('amCalendar', ['moment', 'amMoment', 'angularMomentConfig', function (moment, amMoment, angularMomentConfig) {\n\t\t\t\tfunction amCalendarFilter(value, preprocess) {\n\t\t\t\t\tif (typeof value === 'undefined' || value === null) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = amMoment.preprocessDate(value, preprocess);\n\t\t\t\t\tvar date = moment(value);\n\t\t\t\t\tif (!date.isValid()) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn amMoment.applyTimezone(date).calendar();\n\t\t\t\t}\n\n\t\t\t\t// Since AngularJS 1.3, filters have to explicitly define being stateful\n\t\t\t\t// (this is no longer the default).\n\t\t\t\tamCalendarFilter.$stateful = angularMomentConfig.statefulFilters;\n\n\t\t\t\treturn amCalendarFilter;\n\t\t\t}])\n\n\t\t/**\n\t\t * @ngdoc filter\n\t\t * @name angularMoment.filter:amDateFormat\n\t\t * @module angularMoment\n\t\t * @function\n\t\t */\n\t\t\t.filter('amDateFormat', ['moment', 'amMoment', 'angularMomentConfig', function (moment, amMoment, angularMomentConfig) {\n\t\t\t\tfunction amDateFormatFilter(value, format, preprocess) {\n\t\t\t\t\tif (typeof value === 'undefined' || value === null) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = amMoment.preprocessDate(value, preprocess);\n\t\t\t\t\tvar date = moment(value);\n\t\t\t\t\tif (!date.isValid()) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn amMoment.applyTimezone(date).format(format);\n\t\t\t\t}\n\n\t\t\t\tamDateFormatFilter.$stateful = angularMomentConfig.statefulFilters;\n\n\t\t\t\treturn amDateFormatFilter;\n\t\t\t}])\n\n\t\t/**\n\t\t * @ngdoc filter\n\t\t * @name angularMoment.filter:amDurationFormat\n\t\t * @module angularMoment\n\t\t * @function\n\t\t */\n\t\t\t.filter('amDurationFormat', ['moment', 'angularMomentConfig', function (moment, angularMomentConfig) {\n\t\t\t\tfunction amDurationFormatFilter(value, format, suffix) {\n\t\t\t\t\tif (typeof value === 'undefined' || value === null) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn moment.duration(value, format).humanize(suffix);\n\t\t\t\t}\n\n\t\t\t\tamDurationFormatFilter.$stateful = angularMomentConfig.statefulFilters;\n\n\t\t\t\treturn amDurationFormatFilter;\n\t\t\t}])\n\n\t\t/**\n\t\t * @ngdoc filter\n\t\t * @name angularMoment.filter:amTimeAgo\n\t\t * @module angularMoment\n\t\t * @function\n\t\t */\n\t\t\t.filter('amTimeAgo', ['moment', 'amMoment', 'angularMomentConfig', function (moment, amMoment, angularMomentConfig) {\n\t\t\t\tfunction amTimeAgoFilter(value, preprocess, suffix) {\n\t\t\t\t\tif (typeof value === 'undefined' || value === null) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = amMoment.preprocessDate(value, preprocess);\n\t\t\t\t\tvar date = moment(value);\n\t\t\t\t\tif (!date.isValid()) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn amMoment.applyTimezone(date).fromNow(suffix);\n\t\t\t\t}\n\n\t\t\t\tamTimeAgoFilter.$stateful = angularMomentConfig.statefulFilters;\n\n\t\t\t\treturn amTimeAgoFilter;\n\t\t\t}]);\n\t}\n\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine('angular-moment', ['angular', 'moment'], angularMoment);\n\t} else if (typeof module !== 'undefined' && module && module.exports) {\n\t\tangularMoment(angular, require('moment'));\n\t} else {\n\t\tangularMoment(angular, window.moment);\n\t}\n})();\n\n\n","/**\n * @module  cam.tasklist.variables\n * @belongsto cam.tasklist\n *\n * Set of features to deal with variables (from tasks, processes, ...)\n */\n\n\n\ndefine('scripts/variable/index',[\n  'angular',\n  './directives/cam-tasklist-variables',\n  './modals/cam-tasklist-variables-detail-modal',\n  'angular-moment'\n], function(\n  angular,\n  camTasklistVariables,\n  camTasklistVariablesDetailsModalCtrl\n) {\n  'use strict';\n\n  var variableModule = angular.module('cam.tasklist.variables', [\n    'ui.bootstrap',\n    'angularMoment'\n  ]);\n\n  variableModule.directive('camTasklistVariables', camTasklistVariables);\n  variableModule.controller('camTasklistVariablesDetailsModalCtrl', camTasklistVariablesDetailsModalCtrl);\n\n  return variableModule;\n});\n\n","define('scripts/tasklist/controller/cam-tasklist-list-ctrl',[], function() {\n  'use strict';\n\n  return [\n    '$scope',\n    'Views',\n  function(\n    $scope,\n    Views\n  ) {\n\n    $scope.tasklistVars = { read: [ 'tasklistData' ] };\n    $scope.tasklistPlugins = Views.getProviders({ component: 'tasklist.list' });\n\n  }];\n\n});\n\n","\ndefine('text!scripts/tasklist/directives/cam-tasklist-sorting-choices.html',[],function () { return '<span class=\"sorting-label hidden-xs hidden-sm hidden-md\"\\n      translate=\"SORT_BY\"></span>\\n\\n<ol class=\"sorting-choice list-inline\">\\n  <li ng-repeat=\"(index, sorting) in sortings\"\\n      class=\"sorting-choice dropdown\"\\n      is-open=\"openDropdowns[index]\"\\n      on-toggle=\"openDropdown(index, open)\">\\n    <a class=\"glyphicon glyphicon-minus-sign\"\\n       ng-if=\"sortings.length > 1\"\\n       ng-click=\"removeSorting(index)\"\\n       tooltip-placement=\"bottom\"\\n       tooltip=\"{{ \\'REMOVE_SORTING\\' | translate }}\"></a>\\n\\n    <a href\\n       tabindex=\"-1\"\\n       class=\"dropdown-toggle\">\\n      <span class=\"sort-by\">{{ byLabel(index) }}</span>\\n    </a>\\n\\n    <a href\\n       tabindex=\"-1\"\\n       tooltip=\"{{ (sorting.order === \\'desc\\' ? \\'DESC\\' : \\'ASC\\') | translate }}\"\\n       class=\"sort-direction glyphicon\"\\n       ng-class=\"sorting.order === \\'asc\\' ? \\'glyphicon-chevron-up\\' : \\'glyphicon-chevron-down\\'\"\\n       ng-click=\"changeOrder(index)\"></a>\\n\\n    <ul cam-sorting-dropdown\\n        options=\"availableOptions\"\\n        click-handler=\"changeSorting(index, id, type, value)\"\\n        reset-function=\"resetFunctions[index]\"\\n        change=\"true\">\\n    </ul>\\n  </li>\\n\\n  <li class=\"dropdown new-sort\"\\n      is-open=\"openDropdownNew\"\\n      on-toggle=\"openDropdown(-1, open)\">\\n    <a href\\n       class=\"dropdown-toggle\">\\n      <span class=\"glyphicon glyphicon-plus-sign\"\\n            tooltip=\"{{ \\'ADD_SORT_BY\\' | translate }}\"></span>\\n      <span class=\"hidden-xs hidden-sm hidden-md\"\\n            translate=\"ADD_SORT_BY\"></span>\\n    </a>\\n\\n    <ul cam-sorting-dropdown\\n        options=\"availableOptions\"\\n        click-handler=\"addSorting(id, type, value)\"\\n        reset-function=\"resetFunctions[-1]\">\\n    </ul>\\n  </li>\\n</ol>\\n';});\n\n","define('scripts/tasklist/directives/cam-tasklist-sorting-choices',[\n  'angular',\n  'text!./cam-tasklist-sorting-choices.html'\n], function(\n  angular,\n  template\n) {\n  'use strict';\n\n  function stringifySortings(sortingQuery) {\n    return JSON.stringify(sortingQuery.map(function (sorting) {\n      var obj = {\n        sortBy: sorting.by,\n        sortOrder: sorting.order\n      };\n\n      if (sorting.by.indexOf('Variable') > -1) {\n        if (!sorting.parameters) {\n          throw new Error('Variable sorting needs parameters');\n        }\n        obj.parameters = sorting.parameters;\n      }\n\n      return obj;\n    }));\n  }\n\n  return [\n    'search',\n    '$translate',\n    '$location',\n    '$timeout',\n  function(\n    search,\n    $translate,\n    $location,\n    $timeout\n  ) {\n    return {\n\n      restrict: 'A',\n\n      scope: {\n        tasklistData: '='\n      },\n\n      template: template,\n\n      controller: [function () {}],\n\n      link: function(scope, element) {\n        var $bdy = angular.element('body');\n        var $newSort = element.find('.new-sort .dropdown-menu');\n\n        scope.sortings = [{\n          order:    'desc',\n          by:       'created'\n        }];\n\n        scope.openDropdowns = [];\n        scope.openDropdownNew = false;\n\n        scope.sortedOn = [];\n\n        var plannedRefresh;\n        function updateColumns() {\n          if (plannedRefresh) {\n            $timeout.cancel(plannedRefresh);\n          }\n\n          plannedRefresh = $timeout(function () {\n            var columns = element.parents('.columns');\n            var headers = columns.find('.cell.top');\n            var bodies = columns.find('.cell.content');\n            var shown = $bdy.hasClass('list-column-close');\n\n            element.css('height', 'auto');\n\n            if (shown) {\n              var minHeight = parseInt(headers.css('min-height'), 10);\n              headers.css('height', minHeight);\n              bodies.css('top', minHeight);\n              return;\n            }\n\n            var height = element.height();\n            var columnTop = element.parent();\n            columnTop.height(height);\n            var columnTopHeight = height;\n\n            headers.height(columnTopHeight);\n            bodies.css('top', columnTopHeight + 30);\n            plannedRefresh = null;\n          }, 100);\n        }\n\n        scope.$on('layout:change', updateColumns);\n\n        scope.uniqueProps = {\n          priority:               $translate.instant('PRIORITY'),\n          created:                $translate.instant('CREATION_DATE'),\n          dueDate:                $translate.instant('DUE_DATE'),\n          followUpDate:           $translate.instant('FOLLOW_UP_DATE'),\n          nameCaseInsensitive:    $translate.instant('TASK_NAME'),\n          assignee:               $translate.instant('ASSIGNEE')\n        };\n\n        scope.byLabel = function (index) {\n          if (!scope.sortings[index]) {\n            return '';\n          }\n\n          var by = scope.sortings[index].by;\n\n          if (scope.uniqueProps[by]) {\n            return scope.uniqueProps[by];\n          }\n\n          if (!scope.sortings[index] || !scope.sortings[index].parameters) {\n            return '';\n          }\n\n          return scope.sortings[index].parameters.variable;\n        };\n\n        /**\n         * observe the task list query\n         */\n        var tasklistData = scope.tasklistData.newChild(scope);\n\n        tasklistData.observe('taskListQuery', function(taskListQuery) {\n          if (taskListQuery) {\n            var urlSortings = JSON.parse(($location.search() || {}).sorting || '[]');\n\n            scope.sortedOn = [];\n            scope.openDropdowns = [];\n\n            scope.availableOptions = angular.copy(scope.uniqueProps);\n\n            scope.sortings = urlSortings.map(function (sorting) {\n              scope.sortedOn.push(sorting.sortBy);\n              scope.openDropdowns.push(false);\n\n              delete scope.availableOptions[sorting.sortBy];\n\n              var returned = {\n                order:      sorting.sortOrder,\n                by:         sorting.sortBy\n              };\n\n              if (sorting.parameters) {\n                returned.parameters = sorting.parameters;\n              }\n\n              return returned;\n            });\n\n\n            if (!scope.sortings.length) {\n              scope.addSorting('created');\n            }\n\n            updateColumns();\n          }\n        });\n\n\n        scope.$watch('sortings.length', function (now, before) {\n          if (now !== before) { scope.updateSortings(); }\n        });\n\n        scope.$watch('sortings', updateColumns, true);\n\n        function positionDropdown(el) {\n          var edgeLeft = el.parent().position().left;\n          var edgeRight = el.outerWidth() + edgeLeft;\n          if (edgeRight > element.outerWidth()) {\n            el.css('left', (element.outerWidth() - edgeRight) + 'px');\n          }\n        }\n\n        scope.$watch('openDropdowns', function (now) {\n          var index = now.indexOf(true);\n          var els = element\n                      .find('li.sorting-choice .dropdown-menu')\n                      .css('left', 'auto');\n          if (index > -1 && els[index]) {\n            positionDropdown(angular.element(els[index]));\n          }\n        }, true);\n\n        scope.$watch('openDropdownNew', function (now) {\n          if (now) {\n            positionDropdown($newSort);\n          }\n          else {\n            $newSort.css('left', 'auto');\n          }\n        });\n\n        scope.changeSorting = function(idx, id, type, value) {\n          scope.sortings[idx].by = id;\n          delete scope.sortings[idx].parameters;\n          if(type) {\n            scope.sortings[idx].parameters = {\n              variable : value,\n              type     : type\n            };\n          }\n\n          scope.updateSortings();\n        };\n\n        scope.resetFunctions = [];\n        scope.openDropdown = function(idx, open) {\n          if(open) {\n            var sorting = scope.sortings[idx];\n            if(sorting) {\n              scope.resetFunctions[idx](sorting.by, sorting.parameters && sorting.parameters.type, sorting.parameters && sorting.parameters.variable);\n            } else {\n              scope.resetFunctions[idx]();\n            }\n\n          }\n        };\n\n        // should NOT manipulate the `scope.sortings`!\n        scope.updateSortings = function () {\n          scope.openDropdowns = [];\n          scope.sortedOn = scope.sortings.map(function (sorting) {\n            scope.openDropdowns.push(false);\n            return sorting.by;\n          });\n\n          search.updateSilently({\n            sorting: stringifySortings(scope.sortings)\n          });\n\n          tasklistData.changed('taskListQuery');\n\n          updateColumns();\n        };\n\n        /**\n         * Invoked when adding a sorting object\n         */\n        scope.addSorting = function (id, type, value) {\n\n          var newSorting = {\n            order: 'desc',\n            by: id\n          };\n          if(type) {\n            newSorting.parameters = {\n              variable : value,\n              type     : type\n            };\n          }\n          scope.sortings.push(newSorting);\n\n          scope.updateSortings();\n        };\n\n        /**\n         * Invoked when removing a sorting object\n         */\n        scope.removeSorting = function (index) {\n          scope.sortings.splice(index, 1);\n          scope.updateSortings();\n        };\n\n        /**\n         * invoked when the sort order is changed\n         */\n        scope.changeOrder = function(index) {\n          scope.sortings[index].order = scope.sortings[index].order === 'asc' ? 'desc' : 'asc';\n\n          scope.updateSortings();\n        };\n      }\n    };\n  }];\n});\n\n","\ndefine('text!scripts/tasklist/directives/cam-tasklist-sorting-dropdown.html',[],function () { return '<ul class=\"dropdown-menu\">\\n  <!-- single time selectable -->\\n  <li ng-repeat=\"(name, label) in options\">\\n    <a tabindex=\"-1\"\\n       translate=\"{{ label }}\"\\n       ng-click=\"handleClick($event, name)\">\\n    </a>\\n  </li>\\n\\n  <li class=\"divider\"\\n      ng-if=\"hasOptions()\"></li>\\n\\n  <!-- multiple times selectable -->\\n  <li ng-repeat=\"(name, label) in sortableVariables\"\\n      ng-click=\"showInputs($event, name)\"\\n      ng-class=\"{\\'active\\': name === focusedOn}\">\\n    <a translate=\"{{ label }}\"\\n       tabindex=\"-1\"></a>\\n\\n    <div ng-show=\"name === focusedOn\"\\n         cam-sorting-inputs\\n         change=\"change\"\\n         apply-handler=\"handleClick($event, name)\"\\n         variable=\"variable\"\\n         reset-function=\"resetInputs[name]\"></div>\\n  </li>\\n\\n</ul>\\n';});\n\n","define('scripts/tasklist/directives/cam-tasklist-sorting-dropdown',[\n  'angular',\n  'text!./cam-tasklist-sorting-dropdown.html'\n], function (\n  angular,\n  template\n) {\n  'use strict';\n  return ['$translate',\n  function ($translate){\n    return {\n      restrict: 'A',\n\n      replace: true,\n\n      template: template,\n\n      scope: {\n        options: '=',\n        clickHandler: '&',\n        change: '&',\n        resetFunction: '='\n      },\n\n      link: function($scope) {\n\n        $scope.change = $scope.$eval($scope.change);\n\n        $scope.variable = {\n          varName: '',\n          varType: 'Integer'\n        };\n\n\n        $scope.hasOptions = function(){\n          return $scope.options && Object.keys($scope.options).length > 0;\n        };\n\n        // --- CONTROL FUNCTIONS ---\n        $scope.resetInputs = {};\n        $scope.resetFunction = function(id, type, value){\n          if($scope.sortableVariables[id]) {\n            $scope.focusedOn = id;\n            $scope.variable.varType = type;\n            $scope.variable.varName = value;\n          } else {\n            $scope.focusedOn = null;\n            $scope.variable.varType = 'Integer';\n            $scope.variable.varName = '';\n          }\n        };\n\n        $scope.handleClick = function(evt, name) {\n          if($scope.sortableVariables[name]) {\n            $scope.clickHandler({$event: evt, id: name, type: $scope.variable.varType, value: $scope.variable.varName});\n          } else {\n            $scope.clickHandler({$event: evt, id: name});\n          }\n\n        };\n\n        $scope.sortableVariables = {\n          processVariable:        $translate.instant('PROCESS_VARIABLE'),\n          executionVariable:      $translate.instant('EXECUTION_VARIABLE'),\n          taskVariable:           $translate.instant('TASK_VARIABLE'),\n          caseExecutionVariable:  $translate.instant('CASE_EXECUTION_VARIABLE'),\n          caseInstanceVariable:   $translate.instant('CASE_INSTANCE_VARIABLE')\n        };\n\n        $scope.showInputs = function ($event, name) {\n          $event.preventDefault();\n          $event.stopPropagation();\n          $scope.focusedOn = name;\n        };\n      }\n    };\n  }];\n});\n\n","\ndefine('text!scripts/tasklist/directives/cam-tasklist-sorting-inputs.html',[],function () { return '<div class=\"variable-inputs\">\\n  <div class=\"form-group\">\\n    <input type=\"text\"\\n           placeholder=\"{{ \\'VARIABLE_NAME\\' | translate }}\"\\n           class=\"form-control\"\\n           ng-model=\"variable.varName\"\\n           autofocus />\\n  </div>\\n\\n  <div class=\"form-group\">\\n    <select class=\"form-control\"\\n            ng-model=\"variable.varType\">\\n      <option ng-repeat=\"(varType, varText) in variableTypes\"\\n              ng-selected=\"varType === variable.varType\"\\n              value=\"{{ varType }}\">{{ varText }}</option>\\n    </select>\\n  </div>\\n\\n  <div class=\"form-group actions\">\\n    <button ng-click=\"applySorting($event)\"\\n            ng-disabled=\"!variable\"\\n            class=\"btn btn-primary btn-sm\">\\n      {{ (change ? \\'CHANGE\\' : \\'ADD\\') | translate }}\\n    </button>\\n  </div>\\n</div>\\n';});\n\n","define('scripts/tasklist/directives/cam-tasklist-sorting-inputs',[\n  'angular',\n  'text!./cam-tasklist-sorting-inputs.html'\n], function (\n  angular,\n  template\n) {\n  'use strict';\n  return [\n    '$translate',\n  function (\n    $translate\n  ){\n    return {\n      restrict: 'AC',\n\n      replace: true,\n\n      template: template,\n\n      scope: {\n        change: '=',\n        applyHandler: '&',\n        resetFunction: '=',\n        variable: '=',\n      },\n\n      controller: [\n        '$scope',\n      function (\n        $scope\n      ) {\n        $scope.variableTypes = {\n          'Boolean':  $translate.instant('BOOLEAN'),\n          'Double':   $translate.instant('DOUBLE'),\n          'Date':     $translate.instant('DATE'),\n          'Integer':  $translate.instant('INTEGER'),\n          'Long':     $translate.instant('LONG'),\n          'Short':    $translate.instant('SHORT'),\n          'String':   $translate.instant('STRING')\n        };\n\n        $scope.applySorting = function (evt) {\n          $scope.applyHandler({$event: evt});\n        };\n      }]\n    };\n  }];\n});\n\n","\ndefine('text!scripts/tasklist/directives/cam-tasklist-tasks.html',[],function () { return '<div ng-show=\"!state.$loaded && !state.$error\"\\n     class=\"loader\">\\n  <span class=\"animate-spin glyphicon glyphicon-refresh\"></span>\\n  {{ \\'LOADING\\' | translate }}\\n</div>\\n\\n<div ng-show=\"state.$error\" class=\"alert alert-danger\" role=\"alert\">\\n  <span class=\"glyphicon glyphicon-exclamation-sign\"></span>\\n  <strong class=\"status\">{{ \\'FAILURE\\' | translate }}:</strong>\\n  <span class=\"message\">{{ \\'TASK_LIST_LOADING_FAILURE\\' | translate }}</span>\\n</div>\\n\\n<div ng-show=\"state.$loaded && !state.$error\">\\n\\n  <div ng-hide=\"totalItems\"\\n       class=\"well\">\\n    <span class=\"glyphicon glyphicon-info-sign\"></span>\\n    {{ \\'NO_MATCHING_TASK\\' | translate }}\\n  </div>\\n\\n  <div ng-show=\"totalItems && !tasks\" class=\"well\">\\n    <span class=\"glyphicon glyphicon-info-sign\"></span>\\n    {{ \\'RESTRICTION_NOTICE\\' | translate }}\\n    <a ng-click=\"resetPage()\">{{ \\'RESET_PAGE\\' | translate }}</a>\\n  </div>\\n\\n  <div ng-show=\"totalItems\"\\n       tabindex=\"0\"\\n       ng-keydown=\"handleKeydown($event)\">\\n    <ol class=\"tasks-list list-unstyled\">\\n      <li class=\"task\"\\n          ng-repeat=\"(delta, task) in tasks\"\\n          ng-class=\"{active: currentTaskId === task.id}\">\\n\\n        <div class=\"priority\"\\n             tooltip-placement=\"right\"\\n             tooltip=\"{{ \\'PRIORITY\\' | translate }}\">\\n          {{ task.priority }}\\n        </div>\\n\\n        <div class=\"clickable\"\\n             ng-click=\"focus($event, task)\">\\n          <div class=\"names\">\\n            <h4 class=\"task\">\\n              <a ng-href=\"{{ getHrefUrl(task) }}\"\\n                 ng-click=\"focus($event, task)\">\\n                {{ task.name || task.taskDefinitionKey || task.id }}\\n              </a>\\n            </h4>\\n\\n            <h6 class=\"process-definition\"\\n                ng-if=\"task.processDefinitionId\">\\n              {{ task._embedded.processDefinition[0].name || task._embedded.processDefinition[0].key }}\\n            </h6>\\n\\n            <h6 class=\"case-definition\"\\n                ng-if=\"task.caseDefinitionId\">\\n              {{ task._embedded.caseDefinition[0].name || task._embedded.caseDefinition[0].key }}\\n            </h6>\\n          </div>\\n\\n\\n          <div class=\"row\"\\n               ng-click=\"focus($event, task)\">\\n            <ul class=\"col-sm-12 col-md-6 dates list-inline\">\\n              <li class=\"creation-date\">\\n                <span tooltip-placement=\"top\"\\n                      tooltip=\"{{ \\'CREATION_DATE\\' | translate }}\"\\n                      class=\"glyphicon glyphicon-bookmark\"></span>\\n                <span tooltip-placement=\"top\"\\n                      tooltip=\"{{ task.created | camDate:\\'long\\' }}\"\\n                      am-time-ago=\"task.created\">{{ task.created }}</span>\\n              </li>\\n\\n              <li class=\"followup-date\"\\n                  ng-if=\"!!task.followUp\"\\n                  ng-class=\"{overdue: task.followUp && (task.followUp < now) }\">\\n                <span tooltip-placement=\"top\"\\n                      tooltip=\"{{ \\'FOLLOW_UP_DATE\\' | translate }}\"\\n                      class=\"glyphicon glyphicon-calendar\"></span>\\n                <span tooltip-placement=\"top\"\\n                      tooltip=\"{{ task.followUp | camDate:\\'long\\' }}\"\\n                      am-time-ago=\"task.followUp\">{{ task.followUp }}</span>\\n              </li>\\n\\n              <li class=\"due-date\"\\n                  ng-if=\"!!task.due\"\\n                  ng-class=\"{overdue: task.due && (task.due < now) }\">\\n                <span tooltip-placement=\"top\"\\n                      tooltip=\"{{ \\'DUE_DATE\\' | translate }}\"\\n                      class=\"glyphicon glyphicon-bell\"></span>\\n                <span tooltip-placement=\"top\"\\n                      tooltip=\"{{ task.due | camDate:\\'long\\' }}\"\\n                      am-time-ago=\"task.due\">{{ task.due }}</span>\\n              </li>\\n            </ul>\\n\\n            <ul class=\"col-sm-12 col-md-6 actors list-inline\"\\n                ng-if=\"!!task.assignee\">\\n              <li class=\"assignee\">\\n                <span tooltip-placement=\"top\"\\n                      tooltip=\"{{ \\'ASSIGNEE\\' | translate }}\"\\n                      class=\"glyphicon glyphicon-user\"></span>\\n                <span ng-if=\"assignees[task.assignee] && ( assignees[task.assignee].firstName || assignees[task.assignee].lastName )\">\\n                  <span tooltip-placement=\"top\"\\n                        tooltip=\"{{ assignees[task.assignee].firstName }} {{ assignees[task.assignee].lastName }} ({{ task.assignee }})\">\\n                    {{ assignees[task.assignee].firstName }} {{ assignees[task.assignee].lastName }}\\n                  </span>\\n                </span>\\n                <span ng-if=\"!(assignees[task.assignee] && ( assignees[task.assignee].firstName || assignees[task.assignee].lastName ))\">\\n                  <span tooltip-placement=\"top\"\\n                        tooltip=\"{{ task.assignee }}\">\\n                    {{ task.assignee }}\\n                  </span>\\n                </span>\\n              </li>\\n            </ul>\\n          </div>\\n\\n          <div cam-tasklist-variables\\n               filter-properties=\"filterProperties\"\\n               variables=\"task._embedded.variable\"\\n               class=\"row variables\" />\\n       </div>\\n      </li>\\n    </ol>\\n  </div>\\n</div>\\n\\n<pagination ng-show=\"state.$loaded && totalItems > pageSize\"\\n            total-items=\"totalItems\"\\n            items-per-page=\"pageSize\"\\n            max-size=\"5\"\\n            class=\"pagination-sm\"\\n            boundary-links=\"true\"\\n            ng-model=\"pageNum\"\\n            ng-change=\"pageChange()\"\\n            next-text=\"&rsaquo;\"\\n            last-text=\"&raquo;\"\\n            previous-text=\"&lsaquo;\"\\n            first-text=\"&laquo;\"></pagination>\\n';});\n\n","define('scripts/tasklist/directives/cam-tasklist-tasks',[\n  'angular',\n  'moment',\n  'text!./cam-tasklist-tasks.html'\n], function(\n  angular,\n  moment,\n  template\n) {\n  'use strict';\n  var $ = angular.element;\n\n  return [function(){\n\n    return {\n\n      restrict: 'A',\n      scope: {\n        tasklistData: '='\n      },\n\n      template: template,\n\n      controller: [\n        '$scope',\n        '$location',\n        'search',\n        '$timeout',\n        '$element',\n      function(\n        $scope,\n        $location,\n        search,\n        $timeout,\n        $element\n      ) {\n\n        function updateSilently(params) {\n          search.updateSilently(params);\n        }\n\n        var forceFocus = false;\n\n        $scope.pageNum = 1;\n        $scope.pageSize = null;\n        $scope.totalItems = 0;\n        $scope.now = (new Date()).toJSON();\n\n        $scope.filterProperties = null;\n\n        var tasksData = $scope.tasklistData.newChild($scope);\n\n        $scope.query = {};\n\n        $scope.assignees = {};\n        var parseAssignees = function(assigneeList) {\n          for(var i = 0; i < assigneeList.length; i++) {\n            $scope.assignees[assigneeList[i].id] = assigneeList[i];\n          }\n        };\n\n        /**\n         * observe the list of tasks\n         */\n        $scope.state = tasksData.observe('taskList', function (taskList) {\n          $scope.totalItems = taskList.count;\n          $scope.tasks = taskList._embedded.task;\n          if(taskList._embedded.assignee) {\n            parseAssignees(taskList._embedded.assignee);\n          }\n          if(forceFocus) {\n            $scope.focus(null, $scope.tasks[forceFocus === 'first' ? 0 : $scope.pageSize - 1]);\n            $timeout(function(){\n              $element\n                .find('div[ng-keydown]')\n                .trigger('focus')\n                  .find('li.active')[0]\n                  .scrollIntoView(false);\n            }, 0);\n            forceFocus = false;\n          }\n        });\n\n        /**\n         * observe the task list query\n         */\n        tasksData.observe('taskListQuery', function(taskListQuery) {\n          if (taskListQuery) {\n            // parse pagination properties from query\n            $scope.query = angular.copy(taskListQuery);\n            $scope.pageSize = $scope.query.maxResults;\n            // Sachbearbeiter starts counting at '1'\n            $scope.pageNum = ($scope.query.firstResult / $scope.pageSize) + 1;\n          }\n        });\n\n        tasksData.observe('taskId', function(taskId) {\n          $scope.currentTaskId = taskId.taskId;\n        });\n\n        /**\n         * Observes the properties of the current filter.\n         * Used to retrieve information about variables displayed on a task.\n         */\n        tasksData.observe(['currentFilter', function(currentFilter) {\n          if (currentFilter) {\n            $scope.filterProperties = currentFilter !== null ? currentFilter.properties : null;\n          }\n        }]);\n\n        $scope.focus = function ($event, task) {\n          if ($event) {\n            $event.preventDefault();\n          }\n\n          var taskId = task.id;\n          tasksData.set('taskId', { 'taskId' : taskId });\n          $scope.currentTaskId = taskId;\n\n          var searchParams = $location.search() || {};\n          searchParams.task = taskId;\n          updateSilently(searchParams);\n        };\n\n        var selectNextTask = function() {\n          for(var i = 0; i < $scope.tasks.length - 1; i++) {\n            if($scope.tasks[i].id === $scope.currentTaskId) {\n              return $scope.focus(null, $scope.tasks[i+1]);\n            }\n          }\n          if($scope.pageNum < Math.ceil($scope.totalItems / $scope.pageSize)) {\n            $scope.pageNum++;\n            forceFocus = 'first';\n            $scope.pageChange();\n          }\n        };\n\n        var selectPreviousTask = function() {\n          for(var i = 1; i < $scope.tasks.length; i++) {\n            if($scope.tasks[i].id === $scope.currentTaskId) {\n              return $scope.focus(null, $scope.tasks[i-1]);\n            }\n          }\n          if($scope.pageNum > 1) {\n            $scope.pageNum--;\n            forceFocus = 'last';\n            $scope.pageChange();\n          }\n        };\n\n        $scope.handleKeydown = function($event) {\n          if($event.keyCode === 40) {\n            $event.preventDefault();\n            selectNextTask($event);\n          }\n          else if($event.keyCode === 38) {\n            $event.preventDefault();\n            selectPreviousTask();\n          }\n          // wait for angular to update the classes and scroll to the newly selected task\n          $timeout(function(){\n            var $el = $($event.target).find('li.active')[0];\n            if ($el) {\n              $el.scrollIntoView(false);\n            }\n          });\n        };\n\n        $scope.getHrefUrl = function (task) {\n          var href = '#/?task=' + task.id;\n          var detailsTab = $location.search().detailsTab;\n          if (detailsTab) {\n            href = href + '&detailsTab=' + detailsTab;\n          }\n\n          return href;\n        };\n\n        /**\n         * invoked when pagination is changed\n         */\n        $scope.pageChange = function() {\n          // update query\n          updateSilently({\n            page:  $scope.pageNum\n          });\n          tasksData.changed('taskListQuery');\n        };\n\n         $scope.resetPage = function() {\n           updateSilently({\n             page: 1\n           });\n           tasksData.changed('taskListQuery');\n         };\n\n      }]\n    };\n  }];\n});\n\n","define('scripts/tasklist/filters/cam-query-component',[\n  'angular',\n  'moment'\n], function(\n  angular,\n  moment\n) {\n  'use strict';\n\n  return [\n    '$filter',\n  function($filter) {\n\n    var dateRegex = /(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)(?:.(\\d\\d\\d)| )?$/;\n\n    function isDateValue(value) {\n       return value.match(dateRegex);\n    }\n\n    var camDate = $filter('camDate');\n\n    return function(input) {\n      if(input && isDateValue(input)) {\n        return camDate(input, 'abbr');\n      }\n      return input ? input : '??';\n    };\n\n  }];\n});\n\n","\ndefine('text!scripts/tasklist/plugins/cam-tasklist-search-plugin.html',[],function () { return '<div cam-widget-search\\n     cam-widget-search-valid-searches=\"searches\"\\n     cam-widget-search-translations=\"translations\"\\n     cam-widget-search-types=\"types\"\\n     cam-widget-search-operators=\"operators\"\\n/>\\n';});\n\n","\ndefine('text!scripts/tasklist/plugins/cam-tasklist-search-plugin-config.json',[],function () { return '{\\n  \"types\": [\\n    {\\n      \"id\": {\\n        \"key\": \"processVariables\",\\n        \"value\": \"PROCESS_VARIABLE\"\\n      },\\n      \"extended\": true,\\n      \"allowDates\": true\\n    },\\n    {\\n      \"id\": {\\n        \"key\": \"taskVariables\",\\n        \"value\": \"TASK_VARIABLE\"\\n      },\\n      \"extended\": true,\\n      \"allowDates\": true\\n    },\\n    {\\n      \"id\": {\\n        \"key\": \"caseInstanceVariables\",\\n        \"value\": \"CASE_VARIABLE\"\\n      },\\n      \"extended\": true,\\n      \"allowDates\": true\\n    },\\n    {\\n      \"id\": {\\n        \"key\": \"processInstanceId\",\\n        \"value\": \"PROCESS_INSTANCE_ID\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"processInstanceBusinessKey\",\\n        \"value\": \"PROCESS_INSTANCE_BUSINESS_KEY\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"Like\",\\n          \"value\": \"LIKE\"\\n        },{\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"processDefinitionId\",\\n        \"value\": \"PROCESS_DEFINITION_ID\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"processDefinitionKey\",\\n        \"value\": \"PROCESS_DEFINITION_KEY\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"processDefinitionName\",\\n        \"value\": \"PROCESS_DEFINITION_NAME\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"Like\",\\n          \"value\": \"LIKE\"\\n        },{\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"executionId\",\\n        \"value\": \"EXECUTION_ID\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"caseInstanceId\",\\n        \"value\": \"CASE_INSTANCE_ID\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"caseInstanceBusinessKey\",\\n        \"value\": \"CASE_INSTANCE_BUSINESS_KEY\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"Like\",\\n          \"value\": \"LIKE\"\\n        },{\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"caseDefinitionId\",\\n        \"value\": \"CASE_DEFINITION_ID\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"caseDefinitionKey\",\\n        \"value\": \"CASE_DEFINITION_KEY\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"caseDefinitionName\",\\n        \"value\": \"CASE_DEFINITION_NAME\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"Like\",\\n          \"value\": \"LIKE\"\\n        },{\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"caseExecutionId\",\\n        \"value\": \"CASE_EXECUTION_ID\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"assignee\",\\n        \"value\": \"ASSIGNEE\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"Like\",\\n          \"value\": \"LIKE\"\\n        },{\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"owner\",\\n        \"value\": \"OWNER\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"candidateGroup\",\\n        \"value\": \"CANDIDATE_GROUP\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"candidateUser\",\\n        \"value\": \"CANDIDATE_USER\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"involvedUser\",\\n        \"value\": \"INVOLVED_USER\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"taskDefinitionKey\",\\n        \"value\": \"TASK_DEFINITION_KEY\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"Like\",\\n          \"value\": \"LIKE\"\\n        },{\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"name\",\\n        \"value\": \"NAME\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"Like\",\\n          \"value\": \"LIKE\"\\n        },{\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n\\n      ],\\n      \"default\": true\\n    },    {\\n      \"id\": {\\n        \"key\": \"description\",\\n        \"value\": \"DESCRIPTION\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"Like\",\\n          \"value\": \"LIKE\"\\n        },{\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"priority\",\\n        \"value\": \"PRIORITY\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        },\\n        {\\n          \"key\": \"max\",\\n          \"value\": \"<=\"\\n        },\\n        {\\n          \"key\": \"min\",\\n          \"value\": \">=\"\\n        }\\n      ]\\n    },    {\\n      \"id\": {\\n        \"key\": \"due\",\\n        \"value\": \"DUE_DATE\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"Before\",\\n          \"value\": \"BEFORE\"\\n        },\\n        {\\n          \"key\": \"After\",\\n          \"value\": \"AFTER\"\\n        }\\n      ],\\n      \"allowDates\": true,\\n      \"enforceDates\": true\\n    },    {\\n      \"id\": {\\n        \"key\": \"followUp\",\\n        \"value\": \"FOLLOW_UP_DATE\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"Before\",\\n          \"value\": \"BEFORE\"\\n        },\\n        {\\n          \"key\": \"After\",\\n          \"value\": \"AFTER\"\\n        }\\n      ],\\n      \"allowDates\": true,\\n      \"enforceDates\": true\\n    },    {\\n      \"id\": {\\n        \"key\": \"created\",\\n        \"value\": \"CREATION_DATE\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"Before\",\\n          \"value\": \"BEFORE\"\\n        },\\n        {\\n          \"key\": \"After\",\\n          \"value\": \"AFTER\"\\n        }\\n      ],\\n      \"allowDates\": true,\\n      \"enforceDates\": true\\n    },    {\\n      \"id\": {\\n        \"key\": \"delegationState\",\\n        \"value\": \"DELEGATION_STATE\"\\n      },\\n      \"operators\": [\\n        {\\n          \"key\": \"eq\",\\n          \"value\": \"=\"\\n        }\\n      ]\\n    }\\n  ],\\n  \"operators\": {\\n    \"date\": [\\n      {\\n        \"key\": \"lteq\",\\n        \"value\": \"BEFORE\"\\n      },\\n      {\\n        \"key\": \"gteq\",\\n        \"value\": \"AFTER\"\\n      }\\n    ],\\n    \"boolean\": [\\n      {\\n        \"key\": \"eq\",\\n        \"value\": \"=\"\\n      },\\n      {\\n        \"key\": \"neq\",\\n        \"value\": \"!=\"\\n      }\\n    ],\\n    \"object\": [\\n      {\\n        \"key\": \"eq\",\\n        \"value\": \"=\"\\n      },\\n      {\\n        \"key\": \"neq\",\\n        \"value\": \"!=\"\\n      }\\n    ],\\n    \"number\": [\\n      {\\n        \"key\": \"eq\",\\n        \"value\": \"=\"\\n      },\\n      {\\n        \"key\": \"neq\",\\n        \"value\": \"!=\"\\n      },\\n      {\\n        \"key\": \"gt\",\\n        \"value\": \">\"\\n      },\\n      {\\n        \"key\": \"gteq\",\\n        \"value\": \">=\"\\n      },\\n      {\\n        \"key\": \"lt\",\\n        \"value\": \"<\"\\n      },\\n      {\\n        \"key\": \"lteq\",\\n        \"value\": \"<=\"\\n      }\\n    ],\\n    \"string\": [\\n      {\\n        \"key\": \"eq\",\\n        \"value\": \"=\"\\n      },\\n      {\\n        \"key\": \"neq\",\\n        \"value\": \"!=\"\\n      },\\n      {\\n        \"key\": \"gt\",\\n        \"value\": \">\"\\n      },\\n      {\\n        \"key\": \"gteq\",\\n        \"value\": \">=\"\\n      },\\n      {\\n        \"key\": \"lt\",\\n        \"value\": \"<\"\\n      },\\n      {\\n        \"key\": \"lteq\",\\n        \"value\": \"<=\"\\n      },\\n      {\\n        \"key\": \"like\",\\n        \"value\": \"like\"\\n      }\\n    ],\\n    \"undefined\": [\\n      {\\n        \"key\": \"eq\",\\n        \"value\": \"=\"\\n      },\\n      {\\n        \"key\": \"neq\",\\n        \"value\": \"!=\"\\n      },\\n      {\\n        \"key\": \"gt\",\\n        \"value\": \">\"\\n      },\\n      {\\n        \"key\": \"gteq\",\\n        \"value\": \">=\"\\n      },\\n      {\\n        \"key\": \"lt\",\\n        \"value\": \"<\"\\n      },\\n      {\\n        \"key\": \"lteq\",\\n        \"value\": \"<=\"\\n      },\\n      {\\n        \"key\": \"like\",\\n        \"value\": \"like\"\\n      }\\n    ]\\n  },\\n  \"tooltips\": {\\n    \"inputPlaceholder\": \"SEARCH_PLACEHOLDER\",\\n    \"invalid\": \"INVALID_SEARCH\",\\n    \"deleteSearch\": \"DELETE_SEARCH\",\\n    \"type\": \"TYPE\",\\n    \"name\": \"PROPERTY\",\\n    \"operator\": \"OPERATOR\",\\n    \"value\": \"VALUE\"\\n  }\\n}\\n';});\n\n","define('scripts/tasklist/plugins/cam-tasklist-search-plugin',[\n  'angular',\n  'text!./cam-tasklist-search-plugin.html',\n  'text!./cam-tasklist-search-plugin-config.json'\n], function(\n  angular,\n  template,\n  searchConfigJSON\n) {\n  'use strict';\n\n  var expressionsRegex = /^[\\s]*(\\#|\\$)\\{/;\n\n  var searchConfig = JSON.parse(searchConfigJSON);\n\n  var parseValue = function(value) {\n    if(!isNaN(value) && value.trim() !== '') {\n      // value must be transformed to number\n      return +value;\n    }\n    if(value === 'true') {\n      return true;\n    }\n    if(value === 'false') {\n      return false;\n    }\n    if(value === 'NULL') {\n      return null;\n    }\n    if(value.indexOf('\\'') === 0 && value.lastIndexOf('\\'') === value.length - 1) {\n      return value.substr(1, value.length - 2);\n    }\n    return value;\n  };\n\n  var sanitizeValue = function(value, operator) {\n    if(operator === 'Like' || operator === 'like') {\n      return '%'+value+'%';\n    }\n    return value;\n  };\n\n  var sanitizeProperty = function(search, type, operator, value) {\n    var out = type;\n    if(['Like', 'Before', 'After'].indexOf(operator) !== -1) {\n      out += operator;\n    }\n    if(expressionsRegex.test(value) &&\n       ['assignee', 'owner', 'candidateGroup', 'candidateUser', 'involvedUser'].indexOf(type) !== -1) {\n      out += 'Expression';\n    }\n    return out;\n  };\n\n  var Controller = [\n   '$scope',\n   '$translate',\n  function (\n    $scope,\n    $translate\n  ) {\n\n    $scope.searches = [];\n    $scope.translations = {};\n\n    angular.forEach(searchConfig.tooltips, function(value, key) {\n      $scope.translations[key] = $translate.instant(value);\n    });\n\n    $scope.types = searchConfig.types.map(function(el) {\n      el.id.value = $translate.instant(el.id.value);\n      if(el.operators) {\n        el.operators = el.operators.map(function(op) {\n          op.value = $translate.instant(op.value);\n          return op;\n        });\n      }\n      return el;\n    });\n\n    $scope.operators = searchConfig.operators;\n    angular.forEach($scope.operators.date, function(el) {\n      el.value = $translate.instant(el.value);\n    });\n\n    var searchData = $scope.tasklistData.newChild($scope);\n    $scope.$watch('searches', function() {\n      var query = {};\n\n      query.processVariables = [];\n      query.taskVariables = [];\n      query.caseInstanceVariables = [];\n\n      angular.forEach($scope.searches, function(search) {\n        if(typeof query[search.type.value.key] === 'object') {\n          query[search.type.value.key].push({\n            name: typeof search.name.value === 'object' ? search.name.value.key : search.name.value,\n            operator: search.operator.value.key,\n            value: sanitizeValue(parseValue(search.value.value), search.operator.value.key)\n          });\n        } else {\n          query[sanitizeProperty(search, search.type.value.key, search.operator.value.key, search.value.value)] = sanitizeValue(parseValue(search.value.value), search.operator.value.key);\n        }\n      });\n\n      searchData.set('searchQuery', query);\n    }, true);\n\n    searchData.observe('currentFilter', function(filter) {\n      angular.forEach($scope.types, function(ea) {\n        ea.potentialNames = [];\n        for(var i = 0; i < (filter.properties.variables && filter.properties.variables.length) || 0; i++) {\n          var v = filter.properties.variables[i];\n          ea.potentialNames.push({\n            key: v.name,\n            value: v.label+' ('+v.name+')'\n          });\n        }\n      });\n\n      angular.forEach($scope.searches, function(ea) {\n        ea.potentialNames = $scope.types.filter(function(type) {\n          return type.id.key === ea.type.value.key;\n        })[0].potentialNames;\n      });\n    });\n\n  }];\n\n  var Configuration = function PluginConfiguration(ViewsProvider) {\n\n    ViewsProvider.registerDefaultView('tasklist.list', {\n      id: 'task-search',\n      template: template,\n      controller: Controller,\n      priority: 100\n    });\n  };\n\n  Configuration.$inject = ['ViewsProvider'];\n\n  return Configuration;\n\n});\n\n","define('scripts/tasklist/index',[\n  'angular',\n\n  /* controller */\n  './controller/cam-tasklist-list-ctrl',\n\n  /* directives */\n  './directives/cam-tasklist-sorting-choices',\n  './directives/cam-tasklist-sorting-dropdown',\n  './directives/cam-tasklist-sorting-inputs',\n  './directives/cam-tasklist-tasks',\n\n  /* filters */\n  './filters/cam-query-component',\n\n  /* plugins */\n  './plugins/cam-tasklist-search-plugin'\n\n], function(\n  angular,\n\n  /* controller */\n  camTasklistListCtrl,\n\n  /* directives */\n  camTasklistSortingChoices,\n  camTasklistSortingDropdown,\n  camTasklistSortingInputs,\n  camTasklistTasks,\n\n  /* filters */\n  camQueryComponent,\n\n  /* plugins */\n  camTasklistSearchPlugin\n\n) {\n  'use strict';\n\n  var module = angular.module('cam.tasklist.tasklist', [\n    'ui.bootstrap'\n  ]);\n\n  /* controller */\n  module.controller('camListCtrl', camTasklistListCtrl);\n\n  /* directives */\n  module.directive('camSortingChoices', camTasklistSortingChoices);\n  module.directive('camSortingDropdown', camTasklistSortingDropdown);\n  module.directive('camSortingInputs', camTasklistSortingInputs);\n  module.directive('camTasks', camTasklistTasks);\n\n  /* filters */\n  module.filter('camQueryComponent', camQueryComponent);\n\n  /* plugins */\n  module.config(camTasklistSearchPlugin);\n\n  return module;\n\n});\n\n","\ndefine('text!scripts/task/directives/cam-tasklist-task.html',[],function () { return '<div ng-show=\"!taskState.$loaded\"\\n     class=\"loader\">\\n  <span class=\"animate-spin glyphicon glyphicon-refresh\"></span>\\n  {{ \\'LOADING\\' | translate }}\\n</div>\\n\\n<div ng-show=\"taskState.$loaded\">\\n  <div ng-hide=\"task\">\\n    <div class=\"no-task well\">\\n      <span class=\"glyphicon glyphicon-info-sign\"></span>\\n      {{ \\'SELECT_TASK_IN_LIST\\' | translate }}\\n    </div>\\n  </div>\\n\\n  <section ng-if=\"task\" class=\"task-card\">\\n    <header class=\"row\">\\n      <div class=\"col-xs-12\">\\n        <div class=\"names\">\\n          <h2 class=\"task\">{{ task.name || task.taskDefinitionKey || task.id }}</h2>\\n          <h4 class=\"process-definition\"\\n              ng-if=\"task.processDefinitionId\">\\n            {{ task._embedded.processDefinition[0].name || task._embedded.processDefinition[0].key }}\\n          </h4>\\n          <h4 class=\"case-definition\"\\n              ng-if=\"task.caseDefinitionId\">\\n            {{ task._embedded.caseDefinition[0].name || task._embedded.caseDefinition[0].key }}\\n          </h4>\\n        </div>\\n\\n        <div cam-tasklist-task-meta\\n             task-data=\"taskData\"\\n             error-handler=\"errorHandler\"></div>\\n      </div>\\n    </header>\\n\\n    <div class=\"row tabbed-content\">\\n\\n      <div ng-show=\"taskDetailTabs.length\" class=\"col-xs-12\">\\n        <ul class=\"nav nav-tabs\">\\n          <li ng-class=\"{ active: selectedTaskDetailTab == taskDetailTab }\" ng-repeat=\"taskDetailTab in taskDetailTabs\">\\n            <a href ng-click=\"selectTaskDetailTab(taskDetailTab)\">{{ taskDetailTab.label | translate }}</a>\\n          </li>\\n        </ul>\\n\\n        <div class=\"tab-content\">\\n          <view provider=\"selectedTaskDetailTab\" vars=\"taskVars\" />\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n  </section>\\n\\n</div>\\n\\n\\n';});\n\n","define('scripts/task/directives/cam-tasklist-task',[\n  'angular',\n  'text!./cam-tasklist-task.html',\n  'jquery'\n], function(\n  angular,\n  template,\n  jquery\n) {\n  'use strict';\n\n  var TaskErrorManager = (function() {\n\n    function TaskErrorManager() {\n\n      this.errorProvider = null;\n\n    }\n\n    return TaskErrorManager;\n\n  })();\n\n  return [ function() {\n\n    return {\n      restrict: 'A',\n      scope: {\n        tasklistData: '='\n      },\n\n      template: template,\n\n      controller : [\n        '$scope',\n        '$q',\n        '$location',\n        '$translate',\n        'Notifications',\n        'camAPI',\n        'Views',\n        'search',\n      function(\n        $scope,\n        $q,\n        $location,\n        $translate,\n        Notifications,\n        camAPI,\n        Views,\n        search\n      ) {\n\n        // setup /////////////////////////////////////////////////////////////////////\n\n        var Task = camAPI.resource('task');\n\n        var taskData = $scope.taskData = $scope.tasklistData.newChild($scope);\n\n        // error handling //////////////////////////////////////////////////////////////\n\n        function errorNotification(src, err) {\n          $translate(src).then(function(translated) {\n            Notifications.addError({\n              status: translated,\n              message: (err ? err.message : ''),\n              exclusive: true,\n              scope: $scope\n            });\n          });\n        }\n\n        $scope.errorHandler = function (status, err) {\n          var _status = enhanceErrorMessage(err.message);\n\n          if(_status === 'TASK_NOT_EXIST' || _status === 'INSTANCE_SUSPENDED') {\n            return $translate(_status).then(function(translated) {\n              err.message = translated;\n              errorNotification(status, err);\n              clearTask(true);\n            });\n\n          }\n          else {\n            errorNotification(status, err);\n          }\n\n        };\n\n        function enhanceErrorMessage(msg) {\n          if (msg) {\n            if(msg.indexOf('task is null') !== -1 || msg.indexOf('No matching task') !== -1) {\n              // task does not exist (e.g. completed by someone else)\n              return 'TASK_NOT_EXIST';\n            }\n            else if(msg.indexOf('is suspended') !== -1) {\n              // process instance is suspended\n              return 'INSTANCE_SUSPENDED';\n            }\n          }\n          return msg;\n        }\n\n        function clearTask(updateLocation) {\n\n          if (updateLocation) {\n            var search = $location.search() || {};\n\n            delete search.task;\n            delete search.detailsTab;\n\n            // reseting the location leads that\n            // the taskId will set to null and\n            // the current selected task will\n            // also be set to null, so that the\n            // view gets clear\n            $location.search(angular.copy(search));\n\n          }\n          else {\n            // reset current select taskId to null\n            taskData.set('taskId', { 'taskId' : null });\n          }\n\n          // list of tasks must be reloaded as\n          // well: changed properties on this\n          // task may cause the list to change\n          taskData.changed('taskList');\n        }\n\n        $scope.$watch('taskState.$error', function (err) {\n          if (err) {\n            var src = enhanceErrorMessage(err.message);\n            errorNotification(src, err);\n            // pass false to not reset the search params!\n            // in that case the history works properly.\n            clearTask(false);\n          }\n        });\n\n        // provider ///////////////////////////////////////////////////////////////////\n\n        taskData.provide('assignee', ['task', function(task) {\n          if (task && task._embedded) {\n            if(task._embedded.identityLink) {\n              for(var i = 0; i < task._embedded.identityLink.length; i++) {\n                if(task._embedded.identityLink[i].type === 'assignee') {\n                  if(task._embedded.identityLink[i]._embedded.user) {\n                    return task._embedded.identityLink[i]._embedded.user[0];\n                  } else {\n                    return {id: task._embedded.identityLink[i].userId};\n                  }\n\n                }\n              }\n            }\n          }\n          return null;\n        }]);\n\n        taskData.provide('groups', ['task', function(task) {\n          var groups = [];\n          if (task && task._embedded) {\n            if(task._embedded.identityLink) {\n              for(var i = 0; i < task._embedded.identityLink.length; i++) {\n                if(task._embedded.identityLink[i].type === 'candidate' && task._embedded.identityLink[i].groupId !== null) {\n                  if(task._embedded.identityLink[i]._embedded.group) {\n                    groups.push(task._embedded.identityLink[i]._embedded.group[0]);\n                  } else {\n                    groups.push({id: task._embedded.identityLink[i].groupId});\n                  }\n                }\n              }\n            }\n          }\n          return groups;\n        }]);\n\n        taskData.provide('isAssignee', ['assignee', function(assignee) {\n          return !!assignee && assignee.id === $scope.$root.authentication.name;\n        }]);\n\n        taskData.provide('processDefinition', ['task', function (task) {\n          if (!task || !task._embedded || !task._embedded.processDefinition) {\n            return null;\n          }\n          return task._embedded.processDefinition[0];\n        }]);\n\n        taskData.provide('caseDefinition', ['task', function (task) {\n          if (!task || !task._embedded || !task._embedded.caseDefinition) {\n            return null;\n          }\n          return task._embedded.caseDefinition[0];\n        }]);\n\n        // observer ////////////////////////////////////////////////////////////////////////\n\n        /**\n         * expose current task as scope variable\n         */\n        $scope.taskState = taskData.observe('task', function(task) {\n          $scope.task = task;\n        });\n\n        taskData.observe('isAssignee', function (isAssignee) {\n          $scope.isAssignee = isAssignee;\n        });\n\n        // plugins //////////////////////////////////////////////////////////////\n\n        $scope.taskVars = { read: [ 'task', 'taskData', 'errorHandler' ] };\n        $scope.taskDetailTabs = Views.getProviders({ component: 'tasklist.task.detail' });\n\n        $scope.selectedTaskDetailTab = $scope.taskDetailTabs[0];\n\n        $scope.selectTaskDetailTab = function(tab) {\n          $scope.selectedTaskDetailTab = tab;\n\n          search.updateSilently({\n            detailsTab: tab.id\n          });\n        };\n\n        function setDefaultTaskDetailTab(tabs) {\n          var selectedTabId = search().detailsTab;\n\n          if (!tabs || !tabs.length) {\n            return;\n          }\n\n          if (selectedTabId) {\n            var provider = Views.getProvider({ component: 'tasklist.task.detail', id: selectedTabId });\n            if (provider && tabs.indexOf(provider) != -1) {\n              $scope.selectedTaskDetailTab = provider;\n              return;\n            }\n          }\n\n          search.updateSilently({\n            detailsTab: null\n          });\n\n          $scope.selectedTaskDetailTab = tabs[0];\n        }\n\n        setDefaultTaskDetailTab($scope.taskDetailTabs);\n\n        $scope.$on('$routeChanged', function() {\n          setDefaultTaskDetailTab($scope.taskDetailTabs);\n        });\n\n      }]\n    };\n  }];\n});\n\n\n","\ndefine('text!scripts/task/directives/cam-tasklist-task-meta.html',[],function () { return '<ul class=\"meta list-inline dates times\">\\n\\n  <li>\\n\\n    <span cam-widget-inline-field\\n          class=\"followup-date\"\\n          ng-class=\"{overdue: task.followUp && (task.followUp < now) }\"\\n          type=\"datetime\"\\n          change=\"saveFollowUpDate(this)\"\\n          on-start-editing=\"startEditingFollowUpDate(this)\"\\n          on-cancel-editing=\"cancelEditingFollowUpDate(this)\"\\n          value=\"task.followUp\">\\n      <span tooltip-placement=\"top\"\\n            tooltip=\"{{ \\'FOLLOW_UP_DATE\\' | translate }}\"\\n            class=\"glyphicon glyphicon-calendar\"></span>\\n\\n      <span ng-if=\"task.followUp\"\\n            tooltip-placement=\"top\"\\n            tooltip=\"{{ task.followUp | camDate:\\'long\\' }}\"\\n            am-time-ago=\"task.followUp\">{{ task.followUp }}</span>\\n      <a href\\n         ng-if=\"!task.followUp\"\\n         translate=\"SET_FOLLOW_UP_DATE\">Set follow up</a>\\n    </span>\\n\\n    <a href\\n       ng-if=\"task.followUp && !editingState.followUp\"\\n       tooltip-placement=\"top\"\\n       tooltip=\"{{ \\'RESET_FOLLOW_UP_DATE\\' | translate }}\"\\n       ng-click=\"resetFollowUpDate()\"\\n       class=\"reset-follow-up-date glyphicon glyphicon-remove\">\\n    </a>\\n\\n  </li>\\n\\n  <li>\\n\\n    <span cam-widget-inline-field\\n          class=\"due-date\"\\n          ng-class=\"{overdue: task.due && (task.due < now) }\"\\n          type=\"datetime\"\\n          change=\"saveDueDate(this)\"\\n          on-start-editing=\"startEditingDueDate(this)\"\\n          on-cancel-editing=\"cancelEditingDueDate(this)\"\\n          value=\"task.due\">\\n\\n      <span tooltip-placement=\"top\"\\n            tooltip=\"{{ \\'DUE_DATE\\' | translate }}\"\\n            class=\"glyphicon glyphicon-bell\"></span>\\n\\n      <span ng-if=\"task.due\"\\n            tooltip-placement=\"top\"\\n            tooltip=\"{{ task.due | camDate:\\'long\\' }}\"\\n            am-time-ago=\"task.due\">{{ task.due }}</span>\\n\\n      <a href\\n         ng-if=\"!task.due\"\\n         translate=\"SET_DUE_DATE\">Set due date</a>\\n    </span>\\n\\n    <a href\\n       ng-if=\"task.due && !editingState.due\"\\n       tooltip-placement=\"top\"\\n       tooltip=\"{{ \\'RESET_DUE_DATE\\' | translate }}\"\\n       ng-click=\"resetDueDate()\"\\n       class=\"reset-due-date glyphicon glyphicon-remove\">\\n    </a>\\n  </li>\\n</ul>\\n\\n\\n<ul class=\"meta list-inline actors\">\\n  <li class=\"groups\">\\n    <span ng-click=\"editGroups()\">\\n      <span tooltip-placement=\"top\"\\n            tooltip=\"{{ \\'GROUPS\\' | translate }}\"\\n            class=\"glyphicon glyphicon-th\"></span>\\n\\n      <a href ng-if=\"groupNames.length > 0\">\\n        {{ groupNames.join(\\', \\') }}\\n      </a>\\n\\n      <a href ng-if=\"groupNames.length === 0\"\\n         translate=\"ADD_GROUPS\">\\n        Add groups\\n      </a>\\n    </span>\\n  </li>\\n\\n  <li class=\"assignee set-value\"\\n      ng-if=\"!task.assignee\">\\n    <span tooltip-placement=\"top\"\\n          tooltip=\"{{ \\'ASSIGNEE\\' | translate }}\"\\n          class=\"glyphicon glyphicon-user\"></span>\\n\\n    <a href\\n       class=\"claim\"\\n       ng-click=\"claim()\"\\n       translate=\"CLAIM_TASK\">Claim</a>\\n  </li>\\n\\n  <li class=\"assignee\"\\n      ng-if=\"task.assignee\">\\n    <span cam-widget-inline-field\\n          class=\"set-value\"\\n          type=\"text\"\\n          validate=\"validateUser(this)\"\\n          change=\"assign(this)\"\\n          on-start-editing=\"startEditingAssignee(this)\"\\n          on-cancel-editing=\"cancelEditingAssignee(this)\"\\n          value=\"assignee.id\">\\n\\n      <span tooltip-placement=\"top\"\\n            tooltip=\"{{ \\'ASSIGNEE\\' | translate }}\"\\n            class=\"glyphicon glyphicon-user\"></span>\\n      <span ng-if=\"assignee.firstName || assignee.lastName\">{{ assignee.firstName }} {{ assignee.lastName }}</span>\\n      <span ng-if=\"!(assignee.firstName || assignee.lastName)\">{{ assignee.id }}</span>\\n    </span>\\n\\n    <a href\\n       ng-if=\"isAssignee && !editingState.assignee\"\\n       tooltip-placement=\"top\"\\n       tooltip=\"{{ \\'UNCLAIM_TASK\\' | translate }}\"\\n       ng-click=\"unclaim()\"\\n       class=\"unclaim glyphicon glyphicon-remove\">\\n    </a>\\n\\n    <a href\\n       ng-if=\"!isAssignee && !editingState.assignee\"\\n       tooltip-placement=\"top\"\\n       tooltip=\"{{ \\'RESET_TASK_ASSIGNEE\\' | translate }}\"\\n       ng-click=\"resetAssignee()\"\\n       class=\"reset-assignee glyphicon glyphicon-remove\">\\n    </a>\\n\\n  </li>\\n\\n</ul>\\n';});\n\n","\ndefine('text!scripts/task/modals/cam-tasklist-groups-modal.html',[],function () { return '<div class=\"modal-header\">\\n  <h3 class=\"modal-title\">\\n    {{ \\'MANAGE_GROUPS\\' | translate }}\\n  </h3>\\n</div>\\n\\n<div class=\"modal-body groups-modal\">\\n\\n  <div notifications-panel></div>\\n\\n  <form name=\"taskGroupForm\"\\n        class=\"form-horizontal\"\\n        ng-controller=\"camTaskGroupsCtrl\"\\n        ng-hide=\"!modalGroupsState.$loaded || modalGroupsState.$error\"\\n        ng-submit=\"(isValid() && addGroup())\">\\n\\n  <div ng-show=\"!modalGroupsState.$loaded && !modalGroupsState.$error\"\\n       class=\"loader\">\\n    <span class=\"animate-spin glyphicon glyphicon-refresh\"></span>\\n    {{ \\'LOADING\\' | translate }}\\n  </div>\\n\\n  <div class=\"text-help\">\\n    <span class=\"glyphicon glyphicon-info-sign\"></span>\\n    {{ \\'USE_ADD_GROUP\\' | translate }}\\n  </div>\\n\\n    <div class=\"form-group\">\\n      <div class=\"col-xs-4 align-right\">\\n        <button class=\"btn btn-link\"\\n                ng-click=\"addGroup()\"\\n                type=\"button\"\\n                ng-disabled=\"!isValid()\">\\n          <span class=\"hidden-sm hidden-xs\">{{ \\'GROUP_ADD\\' | translate }}</span>\\n          <span class=\"glyphicon glyphicon-plus-sign\"></span>\\n        </button>\\n      </div>\\n\\n      <div class=\"col-xs-8\"\\n           ng-class=\"{\\'has-error\\': newGroup.error }\">\\n        <input type=\"text\"\\n               name=\"newGroup\"\\n               required\\n               placeholder=\"{{ \\'GROUP_ID\\' | translate }}\"\\n               class=\"form-control\"\\n               ng-model=\"newGroup.groupId\"\\n               ng-change=\"validateNewGroup()\"/>\\n\\n        <span ng-if=\"newGroup.error\"\\n              class=\"help-block\">\\n          {{ newGroup.error.message | translate }}\\n        </span>\\n      </div>\\n    </div>\\n\\n    <div class=\"form-group values\"\\n         ng-repeat=\"group in _groups\">\\n      <div class=\"col-xs-4 row-action\">\\n        <a href\\n           ng-click=\"removeGroup(group, $index)\"\\n           class=\"glyphicon glyphicon-minus-sign\"></a>\\n      </div>\\n\\n      <div class=\"col-xs-8 value\">\\n        {{ group.id }}\\n      </div>\\n    </div>\\n\\n  </form>\\n\\n</div>\\n\\n<div class=\"modal-footer\">\\n  <div class=\"row row-action\">\\n    <div class=\"col-xs-12\">\\n      <button class=\"btn btn-xs btn-link\"\\n              type=\"button\"\\n              ng-click=\"$dismiss()\"\\n              translate=\"CLOSE\">Close</button>\\n    </div>\\n  </div>\\n</div>\\n';});\n\n","define('scripts/task/directives/cam-tasklist-task-meta',[\n  'angular',\n  'text!./cam-tasklist-task-meta.html',\n  'text!../modals/cam-tasklist-groups-modal.html',\n], function(\n  angular,\n  template,\n  editGroupsFormTemplate\n) {\n  'use strict';\n\n  var $ = angular.element;\n\n  return [\n    '$modal',\n    'camAPI',\n  function(\n    $modal,\n    camAPI\n  ) {\n    var Task = camAPI.resource('task');\n\n    return {\n      scope: {\n        taskData: '=',\n        successHandler: '&',\n        errorHandler: '&'\n      },\n\n      template: template,\n\n      controller: [\n        '$scope',\n      function(\n        $scope\n      ){\n\n        var taskMetaData = $scope.taskData.newChild($scope);\n\n        var successHandler = $scope.successHandler() || function () {};\n        var errorHandler = $scope.errorHandler() || function () {};\n\n        /**\n         * observe task changes\n         */\n        taskMetaData.observe('task', function(task) {\n          $scope.task = angular.copy(task);\n        });\n\n        taskMetaData.observe('assignee', function(assignee) {\n          $scope.assignee = angular.copy(assignee);\n        });\n\n\n        /**\n         * observe task changes\n         */\n        taskMetaData.observe('isAssignee', function(isAssignee) {\n          $scope.isAssignee = isAssignee;\n        });\n\n        taskMetaData.observe('groups', function(groups) {\n          groups = groups || [];\n          var groupNames = [];\n          for (var i = 0, group; !!(group = groups[i]); i++) {\n            groupNames.push(group.name || group.id);\n          }\n          $scope.groupNames = groupNames;\n        });\n\n        /**\n         * reload data after the task has been updated\n         */\n        function reload() {\n\n          // we always refresh the state from the backend after we made a change.\n          // this has advantages:\n          // - limits the risk that our copy gets corrupted\n          // - we see changes made by other users faster\n          taskMetaData.changed('task');\n\n          // list of tasks must be reloaded as well:\n          // changed properties on this task may cause the list to change\n          taskMetaData.changed('taskList');\n        }\n\n        function saveDate(propName) {\n          return function(inlineFieldScope) {\n            setEditingState(propName, false);\n            $scope.task[propName] = inlineFieldScope.varValue;\n\n            updateTask();\n          };\n        }\n\n        function resetProperty(propName) {\n          return function() {\n            $scope.task[propName] = null;\n            updateTask();\n          };\n        }\n\n        function updateTask() {\n          var toSend = $scope.task;\n\n          delete toSend._embedded;\n          delete toSend._links;\n\n          Task.update(toSend, function(err, result) {\n            reload();\n            if (err) {\n              return errorHandler('TASK_UPDATE_ERROR', err);\n            }\n          });\n        }\n\n        function notifyOnStartEditing(property) {\n          return function (inlineFieldScope) {\n            setEditingState(property, true);\n          };\n        }\n\n        function notifyOnCancelEditing(property) {\n          return function (inlineFieldScope) {\n            setEditingState(property, false);\n          };\n        }\n\n        function setEditingState(property, state) {\n          $scope.editingState[property] = state;\n        }\n\n        $scope.saveFollowUpDate = saveDate('followUp');\n        $scope.resetFollowUpDate = resetProperty('followUp');\n        $scope.startEditingFollowUpDate = notifyOnStartEditing('followUp');\n        $scope.cancelEditingFollowUpDate = notifyOnCancelEditing('followUp');\n\n        $scope.saveDueDate = saveDate('due');\n        $scope.resetDueDate = resetProperty('due');\n        $scope.startEditingDueDate = notifyOnStartEditing('due');\n        $scope.cancelEditingDueDate = notifyOnCancelEditing('due');\n\n        // initially set each control to false\n        $scope.editingState = {\n          followUp: false,\n          due: false,\n          assignee: false\n        };\n\n        $scope.now = (new Date()).toJSON();\n\n        var notifications = {\n\n          assigned: {\n            error: 'ASSIGNED_ERROR'\n          },\n\n          assigneeReseted: {\n            error: 'ASSIGNEE_RESET_ERROR'\n          },\n\n          claimed: {\n            error: 'CLAIM_ERROR'\n          },\n\n          unclaimed: {\n            error: 'UNCLAIM_ERROR'\n          }\n\n        };\n\n        $scope.startEditingAssignee = notifyOnStartEditing('assignee');\n        $scope.cancelEditingAssignee = notifyOnCancelEditing('assignee');\n\n        $scope.assign = function(inlineFieldScope) {\n          setEditingState('assignee', false);\n\n          var newAssignee = inlineFieldScope.varValue.trim();\n\n          if (!newAssignee) {\n\n            if ($scope.isAssignee) {\n              unclaim();\n            }\n            else {\n              resetAssignee();\n            }\n\n          }\n          else {\n            setAssignee(newAssignee);\n          }\n\n        };\n\n        var claim = $scope.claim = function() {\n          var assignee = $scope.$root.authentication.name;\n          Task.claim($scope.task.id, assignee, notify('claimed'));\n        };\n\n        var unclaim = $scope.unclaim = function() {\n          Task.unclaim($scope.task.id, notify('unclaimed'));\n        };\n\n        var setAssignee = $scope.setAssignee = function(newAssignee) {\n          Task.assignee($scope.task.id, newAssignee, notify('assigned'));\n        };\n\n        var resetAssignee = $scope.resetAssignee = function() {\n          Task.assignee($scope.task.id, null, notify('assigneeReseted'));\n        };\n\n        $scope.editGroups = function() {\n          var groupsChanged;\n\n          $modal.open({\n            // creates a child scope of a provided scope\n            scope: $scope,\n            //TODO: extract filter edit modal class to super style sheet\n            windowClass: 'filter-edit-modal',\n            // size: 'md',\n            template: editGroupsFormTemplate,\n            controller: 'camGroupEditModalCtrl',\n            resolve: {\n              taskMetaData: function() { return taskMetaData; },\n              groupsChanged: function() {\n                return function () {\n                  groupsChanged = true;\n                };\n              },\n              errorHandler: function () { return $scope.errorHandler; }\n            }\n          }).result.then(dialogClosed, dialogClosed);\n\n          function dialogClosed() {\n            if (groupsChanged) {\n              taskMetaData.set('taskId', { taskId: $scope.task.id });\n              taskMetaData.changed('taskList');\n            }\n          }\n\n        };\n\n        function notify(action) {\n          var messages = notifications[action];\n\n          return function (err) {\n            if (err) {\n              return errorHandler(messages.error, err);\n            }\n\n            reload();\n          };\n        }\n\n      }\n    ]};\n  }];\n});\n\n","define('scripts/task/controller/cam-tasklist-task-action-ctrl',[\n], function(\n) {\n  'use strict';\n\n  return [\n    '$scope',\n    'Views',\n    'CamForm',\n  function(\n    $scope,\n    Views,\n    CamForm\n  ) {\n\n    var taskData = $scope.taskData = $scope.tasklistData.newChild($scope);\n\n    /**\n     * expose current task as scope variable\n     */\n    taskData.observe('task', function(task) {\n      $scope.task = task;\n    });\n\n    /**\n     * remove outdated saved forms\n     */\n    CamForm.cleanLocalStorage(Date.now() - 7 * 24 * 60 * 60 * 1000);\n\n    // plugins //////////////////////////////////////////////////////////////\n\n    $scope.taskVars = { read: [ 'task', 'taskData' ] };\n    $scope.taskActions = Views.getProviders({ component: 'tasklist.task.action' });\n\n  }];\n\n});\n\n","define('scripts/task/controller/cam-tasklist-task-groups-ctrl',[\n  'angular'\n], function(\n  angular\n) {\n  'use strict';\n\n  var GROUP_TYPE = 'candidate';\n\n  return [\n    '$scope',\n    '$translate',\n    '$q',\n    'Notifications',\n    'camAPI',\n  function(\n    $scope,\n    $translate,\n    $q,\n    Notifications,\n    camAPI\n  ) {\n    // setup //////////////////////////////////////////////\n\n    var Task = camAPI.resource('task');\n\n    var task = null;\n\n    var NEW_GROUP = { groupId : null, type: GROUP_TYPE };\n\n    var newGroup = $scope.newGroup =  angular.copy(NEW_GROUP);\n\n    var taskGroupsData = $scope.taskGroupsData;\n\n    var groupsChanged = $scope.groupsChanged;\n\n    var errorHandler = $scope.errorHandler();\n\n    $scope._groups = [];\n\n    var messages = {};\n    $translate([\n      'FAILURE',\n      'INIT_GROUPS_FAILURE',\n      'ADD_GROUP_FAILED',\n      'REMOVE_GROUP_FAILED'\n    ])\n    .then(function(result) {\n      messages.failure            = result.FAILURE;\n      messages.initGroupsFailed   = result.INIT_GROUPS_FAILURE;\n      messages.addGroupFailed     = result.ADD_GROUP_FAILED;\n      messages.removeGroupFailed  = result.REMOVE_GROUP_FAILED;\n    });\n\n    // observe ////////////////////////////////////////////////////////\n\n    $scope.modalGroupsState = taskGroupsData.observe('groups', function(groups) {\n      $scope._groups = angular.copy(groups) || [];\n      $scope.validateNewGroup();\n    });\n\n    taskGroupsData.observe('task', function (_task) {\n      task = _task;\n    });\n\n    // actions ///////////////////////////////////////////////////////\n\n    $scope.$watch('modalGroupsState.$error', function (error){\n      if (error) {\n        Notifications.addError({\n          status: messages.failure,\n          message: messages.initGroupsFailed,\n          exclusive: true,\n          scope: $scope\n        });\n      }\n    });\n\n    $scope.addGroup = function () {\n      var taskId = task.id;\n\n      groupsChanged();\n\n      delete newGroup.error;\n      Task.identityLinksAdd(taskId, newGroup, function(err) {\n        if (err) {\n          return errorHandler('TASK_UPDATE_ERROR', err);\n        }\n\n        $scope.taskGroupForm.$setPristine();\n\n        $scope._groups.push({id: newGroup.groupId});\n\n        newGroup = $scope.newGroup = angular.copy(NEW_GROUP);\n\n      });\n    };\n\n    $scope.removeGroup = function(group, index) {\n      var taskId = task.id;\n\n      groupsChanged();\n\n      Task.identityLinksDelete(taskId, {type: GROUP_TYPE, groupId: group.id}, function(err) {\n        if (err) {\n          return Notifications.addError({\n            status: messages.failure,\n            message: messages.removeGroupFailed,\n            exclusive: true,\n            scope: $scope\n          });\n        }\n\n        $scope._groups.splice(index, 1);\n      });\n    };\n\n    $scope.validateNewGroup = function () {\n      delete newGroup.error;\n\n      if ($scope.taskGroupForm && $scope.taskGroupForm.newGroup) {\n\n        $scope.taskGroupForm.newGroup.$setValidity('duplicate', true);\n\n        var newGroupId = newGroup.groupId;\n\n        if (newGroupId) {\n          for(var i = 0, currentGroup; !!(currentGroup = $scope._groups[i]); i++) {\n            if (newGroupId === currentGroup.id) {\n              newGroup.error = { message: 'DUPLICATE_GROUP' };\n\n              $scope.taskGroupForm.newGroup.$setValidity('duplicate', false);\n            }\n          }\n        }\n      }\n\n    };\n\n    $scope.isValid = function () {\n      if (!newGroup.groupId || newGroup.error) {\n        return false;\n      }\n\n      return true;\n    };\n\n  }];\n\n});\n\n","\ndefine('text!scripts/task/plugins/detail/cam-tasklist-task-detail-form-plugin.html',[],function () { return '<div class=\"form-pane\">\\n\\n  <div ng-if=\"taskFormState.$error\" class=\"alert alert-danger\" role=\"alert\">\\n    <span class=\"glyphicon glyphicon-exclamation-sign\"></span>\\n    <strong class=\"status\">{{ \\'FORM_FAILURE\\' | translate }}</strong>\\n    <span class=\"message\">{{ taskFormState.$error.message }}</span>\\n  </div>\\n\\n  <div ng-if=\"taskFormState.$loaded && !taskFormState.$error\"\\n       cam-tasklist-form\\n       tasklist-form=\"taskForm\"\\n       on-form-completion-callback=\"completionCallback\"\\n       options=\"options\"\\n       params=\"params\" >\\n  </div>\\n\\n</div>';});\n\n","define('scripts/task/plugins/detail/cam-tasklist-task-detail-form-plugin',[\n  'angular',\n  'text!./cam-tasklist-task-detail-form-plugin.html',\n], function(\n  angular,\n  template\n) {\n  'use strict';\n\n  var Controller = [\n   '$scope',\n   '$location',\n   '$q',\n   'camAPI',\n   'assignNotification',\n  function (\n    $scope,\n    $location,\n    $q,\n    camAPI,\n    assignNotification\n  ) {\n\n    // setup ///////////////////////////////////////////////////////////\n\n    var Task = camAPI.resource('task');\n\n    var errorHandler = $scope.errorHandler;\n\n    var DEFAULT_OPTIONS = $scope.options = {\n      hideCompleteButton: false,\n      hideLoadVariablesButton: false,\n      disableCompleteButton: false,\n      disableForm: false,\n      disableAddVariableButton: false\n    };\n\n    var taskFormData = $scope.taskData.newChild($scope);\n\n    taskFormData.provide('taskForm', ['task', function(task) {\n      var deferred = $q.defer();\n\n      if (!task || !task.id) {\n        return deferred.resolve(null);\n      }\n\n      Task.form(task.id, function(err, res) {\n\n        if(err) {\n          deferred.reject(err);\n        }\n        else {\n          deferred.resolve(res);\n        }\n      });\n\n      return deferred.promise;\n    }]);\n\n    // observer ///////////////////////////////////////////////////////////\n\n    taskFormData.observe(['task', 'isAssignee', function(task, isAssignee) {\n      $scope.options = angular.copy(DEFAULT_OPTIONS);\n\n      if (task && task.id) {\n        $scope.params = { taskId : task.id };\n      }\n      else {\n        $scope.params = null;\n      }\n\n      $scope.options.disableCompleteButton = !isAssignee;\n      $scope.options.disableForm = !isAssignee;\n      $scope.options.disableAddVariableButton = !isAssignee;\n    }]);\n\n    $scope.taskFormState = taskFormData.observe('taskForm', function(taskForm) {\n      $scope.taskForm = angular.copy(taskForm);\n    });\n\n    // task form /////////////////////////////////////////////////////////////////////////\n\n    function clearTask() {\n      // reseting the location leads that\n      // the taskId will set to null and\n      // the current selected task will\n      // also be set to null, so that the\n      // view gets clear\n      var searchParams = $location.search();\n      delete searchParams.task;\n      delete searchParams.detailsTab;\n      $location.search(searchParams);\n\n      // list of tasks must be reloaded as\n      // well: changed properties on this\n      // task may cause the list to change\n      taskFormData.changed('taskList');\n    }\n\n    // will be called when the form has been submitted\n    $scope.completionCallback = function(err) {\n      if (err) {\n        return errorHandler('COMPLETE_ERROR', err);\n      }\n\n      if($scope.task.processInstanceId) {\n        assignNotification({\n          assignee: $scope.task.assignee,\n          processInstanceId: $scope.task.processInstanceId\n        });\n      } else if($scope.task.caseInstanceId) {\n        assignNotification({\n          assignee: $scope.task.assignee,\n          caseInstanceId: $scope.task.caseInstanceId\n        });\n      }\n\n      clearTask();\n    };\n  }];\n\n  var Configuration = function PluginConfiguration(ViewsProvider) {\n\n    ViewsProvider.registerDefaultView('tasklist.task.detail', {\n      id: 'task-detail-form',\n      label: 'FORM',\n      template: template,\n      controller: Controller,\n      priority: 1000\n    });\n  };\n\n  Configuration.$inject = ['ViewsProvider'];\n\n  return Configuration;\n\n});\n\n","\ndefine('text!scripts/task/plugins/detail/cam-tasklist-task-detail-history-plugin.html',[],function () { return '<div class=\"history-pane\">\\n\\n  <div ng-show=\"!state.$loaded\"\\n       class=\"loader\">\\n    <span class=\"animate-spin glyphicon glyphicon-refresh\"></span>\\n    {{ \\'LOADING\\' | translate }}\\n  </div>\\n\\n  <div ng-hide=\"!state.$loaded\">\\n    <div ng-if=\"!days.length\">\\n      <div class=\"well\">\\n        <span class=\"glyphicon glyphicon-info-sign\"></span>\\n        {{ \\'NO_HISTORY\\' | translate }}\\n      </div>\\n    </div>\\n\\n    <div ng-if=\"days.length\"\\n         class=\"day row\"\\n         ng-repeat=\"day in days | orderBy:\\'-date\\'\">\\n      <div class=\"col-xs-2\">\\n        <div class=\"date-badge\">\\n          <div>\\n            <span class=\"day\">{{ day.date | camDate:\\'day\\' }}</span>\\n            <span class=\"month\">{{ day.date | camDate:\\'monthName\\' }}</span>\\n            <span class=\"year\">{{ day.date | date:\\'yyyy\\' }}</span>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\"col-xs-10\">\\n        <div class=\"instant row\"\\n             ng-repeat=\"event in day.events | orderBy:\\'-time\\'\">\\n          <div class=\"col-xs-2 operation-meta\">\\n            <div class=\"operation-time\"\\n                 tooltip-placement=\"left\"\\n                 tooltip=\"{{ event.time | camDate:\\'long\\' }}\">{{ event.time | date:\\'HH:mm\\' }}</div>\\n            <div class=\"operation-user\"\\n                 tooltip-placement=\"top\"\\n                 tooltip=\"{{ event.userId }}\">{{ event.userId }}</div>\\n          </div>\\n\\n          <div class=\"col-xs-10 operation-detail\">\\n            <div class=\"row\">\\n              <h4 class=\"col-xs-12\">{{ event.type | translate }}</h4>\\n            </div>\\n\\n            <div class=\"row event-body\">\\n              <div class=\"line\"\\n                   ng-repeat=\"subEvent in event.subEvents\"\\n                   ng-if=\"event.type !== \\'Comment\\'\">\\n                <h5 class=\"col-sm-12 col-md-3 event-property\">{{ subEvent.property | translate }}</h5>\\n\\n                <div class=\"col-sm-12 col-md-9\">\\n                  <div class=\"new-value\" ng-if=\"subEvent.newValue\">\\n                    <span ng-if=\"subEvent.propertyIsDate\">{{ subEvent.newValue | camDate }}</span>\\n                    <span ng-if=\"!subEvent.propertyIsDate\">{{ subEvent.newValue }}</span>\\n                  </div>\\n\\n                  <div class=\"original-value\"\\n                       ng-if=\"subEvent.orgValue\">\\n                    <span ng-if=\"subEvent.propertyIsDate\">{{ subEvent.orgValue | camDate }}</span>\\n                    <span ng-if=\"!subEvent.propertyIsDate\">{{ subEvent.orgValue }}</span>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\"col-xs-12\"\\n                   ng-if=\"event.type === \\'Comment\\'\"\\n                   nl2br=\"event.message\" />\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n';});\n\n","define('scripts/task/plugins/detail/cam-tasklist-task-detail-history-plugin',[\n  'jquery',\n  'moment',\n  'text!./cam-tasklist-task-detail-history-plugin.html',\n], function(\n  jquery,\n  moment,\n  template\n) {\n  'use strict';\n\n  var findOrCreateDay = function(days, timestamp) {\n    var day = jquery.grep(days, function(elem) {\n      return moment(elem.date).format('YYYY-MM-DD') === moment(timestamp).format('YYYY-MM-DD');\n    });\n    if(day.length > 0) {\n      return day[0];\n    } else {\n      day = {\n        date: timestamp,\n        events: []\n      };\n      days.push(day);\n      return day;\n    }\n  };\n\n  var findOrCreateParentEvent = function(events, event) {\n    var parentEvent = jquery.grep(events, function(elem) {\n      return elem.operationId === event.operationId;\n    });\n    if(parentEvent.length > 0) {\n      return parentEvent[0];\n    } else {\n      parentEvent = {\n        time: event.timestamp,\n        type: event.operationType,\n        operationId: event.operationId,\n        userId: event.userId,\n        subEvents: []\n      };\n      events.push(parentEvent);\n      return parentEvent;\n    }\n  };\n\n  function isTimestampProperty(propertyName) {\n    return ['dueDate', 'followUpDate'].indexOf(propertyName) !== -1;\n  }\n\n  var Controller = [\n   '$scope',\n   'camAPI',\n   '$q',\n  function (\n    $scope,\n    camAPI,\n    $q\n  ) {\n\n    var History = camAPI.resource('history');\n    var Task = camAPI.resource('task');\n\n    var historyData = $scope.taskData.newChild($scope);\n\n    historyData.provide('history', ['task', function (task) {\n      var deferred = $q.defer();\n\n      if (!task) {\n        return deferred.resolve(null);\n      }\n\n      History.userOperation({taskId : task.id}, function(err, res) {\n        if(err) {\n          deferred.reject(err);\n        }\n        else {\n          deferred.resolve(res);\n        }\n      });\n\n      return deferred.promise;\n    }]);\n\n    historyData.provide('comments', ['task', function (task) {\n      var deferred = $q.defer();\n\n      if (!task) {\n        return deferred.resolve(null);\n      }\n\n      Task.comments(task.id, function(err, res) {\n        if(err) {\n          deferred.reject(err);\n        }\n        else {\n          deferred.resolve(res);\n        }\n      });\n\n      return deferred.promise;\n    }]);\n\n    historyData.provide('orderedHistoryAndCommentsByDay', ['history', 'comments', function (history, comments) {\n      history = history || {};\n      comments = comments || {};\n\n      var days = [],\n          i = 0,\n          day;\n\n      for (var historyEvent; !!(historyEvent = history[i]); i++) {\n        // create object for each day, containing the events for this day\n        day = findOrCreateDay(days, historyEvent.timestamp);\n\n        // create historyEvent object for each operationId\n        var parentEvent = findOrCreateParentEvent(day.events, historyEvent);\n\n        // preprocess the dates to avoid function calls from the template\n        if (isTimestampProperty(historyEvent.property)) {\n          historyEvent.propertyIsDate = true;\n          historyEvent.newValue = historyEvent.newValue ? parseInt(historyEvent.newValue, 10) : null;\n          historyEvent.orgValue = historyEvent.orgValue ? parseInt(historyEvent.orgValue, 10) : null;\n        }\n\n        parentEvent.subEvents.push(historyEvent);\n\n      }\n\n      // reset values\n      i = 0;\n      day = null;\n\n      for (var comment; !!(comment = comments[i]); i++) {\n        day = findOrCreateDay(days, comment.time);\n        comment.type = 'Comment';\n        day.events.push(comment);\n      }\n\n      return days;\n    }]);\n\n    $scope.state = historyData.observe('orderedHistoryAndCommentsByDay', function(days) {\n      $scope.days = days;\n    });\n\n  }];\n\n  var Configuration = function PluginConfiguration(ViewsProvider) {\n    \n    ViewsProvider.registerDefaultView('tasklist.task.detail', {\n      id: 'task-detail-history',\n      label: 'HISTORY',\n      template: template,\n      controller: Controller,\n      priority: 800\n    });\n  };\n\n  Configuration.$inject = ['ViewsProvider'];\n\n  return Configuration;\n\n});\n\n","\ndefine('text!scripts/task/plugins/detail/cam-tasklist-task-detail-diagram-plugin.html',[],function () { return '<div ng-show=\"!processDiagramState.$loaded\"\\n     class=\"loader\">\\n  <span class=\"animate-spin glyphicon glyphicon-refresh\"></span>\\n  {{ \\'LOADING\\' | translate }}\\n</div>\\n\\n<div ng-if=\"processDiagramState.$loaded\">\\n\\n  <div ng-show=\"!processDefinition || !processDiagram.bpmn20xml\"\\n       class=\"well\">\\n    <span class=\"glyphicon glyphicon-info-sign\"></span>\\n    {{ \\'NO_DIAGRAM\\' | translate }}\\n  </div>\\n\\n  <div ng-hide=\"!processDefinition || !processDiagram.bpmn20xml\">\\n    <div class=\"diagram-pane\"\\n         cam-widget-bpmn-viewer\\n         diagram-data=\"processDiagram.bpmn20xml\"\\n         on-load=\"highlightTask()\"\\n         control=\"control\">\\n    </div>\\n  </div>\\n\\n</div>\\n';});\n\n","define('scripts/task/plugins/detail/cam-tasklist-task-detail-diagram-plugin',[\n  'text!./cam-tasklist-task-detail-diagram-plugin.html',\n], function(\n  template\n) {\n  'use strict';\n\n  var Controller = [\n   '$scope',\n   '$q',\n   'camAPI',\n  function (\n    $scope,\n    $q,\n    camAPI\n  ) {\n\n    // setup ///////////////////////////////////////////////////////////\n\n    var ProcessDefinition = camAPI.resource('process-definition');\n    var diagramData = $scope.taskData.newChild($scope);\n\n    // provider ////////////////////////////////////////////////////////\n\n    diagramData.provide('bpmn20xml', ['processDefinition', function (processDefinition) {\n      var deferred = $q.defer();\n\n      if (!processDefinition) {\n        return deferred.resolve(null);\n      }\n\n      ProcessDefinition.xml(processDefinition, function(err, res) {\n        if(err) {\n          deferred.reject(err);\n        }\n        else {\n          deferred.resolve(res);\n        }\n      });\n\n      return deferred.promise;\n    }]);\n\n    diagramData.provide('processDiagram', ['bpmn20xml', 'processDefinition', 'task', function (bpmn20xml, processDefinition, task) {\n      var processDiagram = {};\n\n      processDiagram.processDefinition = processDefinition;\n      processDiagram.task = task;\n      processDiagram.bpmn20xml = (bpmn20xml || {}).bpmn20Xml;\n\n      return processDiagram;\n    }]);\n\n    // observer /////////////////////////////////////////////////////////\n\n    diagramData.observe('processDefinition', function (processDefinition) {\n      $scope.processDefinition = processDefinition;\n    });\n\n    $scope.processDiagramState = diagramData.observe('processDiagram', function (processDiagram) {\n      $scope.processDiagram = processDiagram;\n    });\n\n    $scope.control = {};\n\n    $scope.highlightTask = function() {\n      $scope.control.highlight($scope.processDiagram.task.taskDefinitionKey);\n    };\n\n  }];\n\n  var Configuration = function PluginConfiguration(ViewsProvider) {\n\n    ViewsProvider.registerDefaultView('tasklist.task.detail', {\n      id: 'task-detail-diagram',\n      label: 'DIAGRAM',\n      template: template,\n      controller: Controller,\n      priority: 600\n    });\n  };\n\n  Configuration.$inject = ['ViewsProvider'];\n\n  return Configuration;\n\n});\n\n","\ndefine('text!scripts/task/plugins/detail/cam-tasklist-task-detail-description-plugin.html',[],function () { return '<div class=\"description-pane\">\\n  <div ng-hide=\"task.description\"\\n       class=\"well\">\\n    <span class=\"glyphicon glyphicon-info-sign\"></span>\\n    {{ \\'NO_DESCRIPTION\\' | translate }}\\n  </div>\\n  <div ng-show=\"task.description\">\\n    {{ task.description }}\\n  </div>\\n</div>\\n';});\n\n","define('scripts/task/plugins/detail/cam-tasklist-task-detail-description-plugin',[\n  'text!./cam-tasklist-task-detail-description-plugin.html',\n], function(\n  template\n) {\n  'use strict';\n\n  var Controller = [\n   '$scope',\n  function ($scope) {\n\n  }];\n\n  var Configuration = function PluginConfiguration(ViewsProvider) {\n\n    ViewsProvider.registerDefaultView('tasklist.task.detail', {\n      id: 'task-detail-description',\n      label: 'DESCRIPTION',\n      template: template,\n      controller: Controller,\n      priority: 100\n    });\n  };\n\n  Configuration.$inject = ['ViewsProvider'];\n\n  return Configuration;\n\n});\n\n","\ndefine('text!scripts/task/plugins/action/cam-tasklist-task-action-comment-plugin.html',[],function () { return '<a href\\n   ng-click=\"createComment()\">\\n  {{ \\'COMMENT_CREATE\\' | translate }}\\n  <span class=\"glyphicon glyphicon-plus-sign\"></span>\\n</a>';});\n\n","\ndefine('text!scripts/task/plugins/action/modals/cam-tasklist-comment-form.html',[],function () { return '<form class=\"form form-horizontal\"\\n      name=\"newComment\"\\n      role=\"form\">\\n\\n  <div class=\"modal-header\">\\n    <h3 class=\"modal-title\">\\n      {{ \\'COMMENT_CREATE\\' | translate }}\\n    </h3>\\n  </div>\\n\\n  <div class=\"modal-body\">\\n      <textarea class=\"form-control\"\\n             id=\"comment-form-message\"\\n             ng-model=\"comment.message\"\\n             placeholder=\"{{ \\'COMMENT_MESSAGE_PLACEHOLDER\\' | translate }}\">\\n      </textarea>\\n  </div>\\n\\n  <div class=\"modal-footer\">\\n    <div class=\"row row-action\">\\n      <div class=\"col-xs-12\">\\n        <button class=\"btn btn-xs btn-link\"\\n                type=\"button\"\\n                ng-click=\"$dismiss()\"\\n                translate=\"CLOSE\">Close</button>\\n\\n        <button class=\"btn btn-primary\"\\n                type=\"submit\"\\n                ng-disabled=\"!comment.message\"\\n                ng-click=\"submit()\"\\n                translate=\"SAVE\">Save</button>\\n\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n';});\n\n","define('scripts/task/plugins/action/cam-tasklist-task-action-comment-plugin',[\n  'text!./cam-tasklist-task-action-comment-plugin.html',\n  'text!./modals/cam-tasklist-comment-form.html'\n], function(\n  addCommentTemplate,\n  addCommentFormTemplate\n) {\n  'use strict';\n\n  var Controller = [\n   '$scope',\n   '$modal',\n  function (\n    $scope,\n    $modal\n  ) {\n\n    var commentData = $scope.taskData.newChild($scope);\n\n    commentData.observe('task', function(task) {\n      $scope.task = task;\n    });\n\n    $scope.createComment = function() {\n      $modal.open({\n        // creates a child scope of a provided scope\n        scope: $scope,\n        //TODO: extract filter edit modal class to super style sheet\n        windowClass: 'filter-edit-modal',\n        size: 'lg',\n        template: addCommentFormTemplate,\n        controller: 'camCommentCreateModalCtrl',\n        resolve: {\n          task: function() { return $scope.task; }\n        }\n      }).result.then(function() {\n        commentData.changed('task');\n      });\n\n    };\n\n  }];\n\n  var Configuration = function PluginConfiguration(ViewsProvider) {\n\n    ViewsProvider.registerDefaultView('tasklist.task.action', {\n      id: 'task-action-comment',\n      template: addCommentTemplate,\n      controller: Controller,\n      priority: 100\n    });\n  };\n\n  Configuration.$inject = ['ViewsProvider'];\n\n  return Configuration;\n\n});\n\n","define('scripts/task/plugins/action/modals/cam-tasklist-comment-form',[\n\n], function() {\n  'use strict';\n\n  return [\n    '$scope',\n    '$translate',\n    'Notifications',\n    'camAPI',\n    'task',\n  function(\n    $scope,\n    $translate,\n    Notifications,\n    camAPI,\n    task\n  ) {\n\n    var Task = camAPI.resource('task');\n\n    $scope.comment = { message: '' };\n\n    $scope.$on('$locationChangeSuccess', function() {\n      $scope.$dismiss();\n    });\n\n    function errorNotification(src, err) {\n      $translate(src).then(function(translated) {\n        Notifications.addError({\n          status: translated,\n          message: (err ? err.message : ''),\n          exclusive: true,\n          scope: $scope\n        });\n      });\n    }\n\n    $scope.submit = function() {\n      Task.createComment(task.id, $scope.comment.message, function(err) {\n        if (err) {\n          return errorNotification('COMMENT_SAVE_ERROR', err);\n        }\n\n        $scope.$close();\n      });\n    };\n  }];\n\n});\n\n","define('scripts/task/modals/cam-tasklist-groups-modal',[\n], function(\n) {\n  'use strict';\n\n  return [\n    '$scope',\n    'taskMetaData',\n    'groupsChanged',\n  function(\n    $scope,\n    taskMetaData,\n    groupsChanged\n  ) {\n    // setup //////////////////////////////////////////////\n\n    $scope.taskGroupsData = taskMetaData.newChild($scope);\n\n    $scope.groupsChanged = groupsChanged || function () {};\n\n    $scope.$on('$locationChangeSuccess', function() {\n      $scope.$dismiss();\n    });\n\n  }];\n\n});\n\n","define('scripts/task/index',[\n  'angular',\n  'moment',\n\n  './directives/cam-tasklist-task',\n  './directives/cam-tasklist-task-meta',\n\n  './controller/cam-tasklist-task-action-ctrl',\n  './controller/cam-tasklist-task-groups-ctrl',\n\n  /* detail plugins */\n  './plugins/detail/cam-tasklist-task-detail-form-plugin',\n  './plugins/detail/cam-tasklist-task-detail-history-plugin',\n  './plugins/detail/cam-tasklist-task-detail-diagram-plugin',\n  './plugins/detail/cam-tasklist-task-detail-description-plugin',\n\n  /* action plugins */\n  './plugins/action/cam-tasklist-task-action-comment-plugin',\n\n  /* action plugin controller */\n  './plugins/action/modals/cam-tasklist-comment-form',\n\n  /* modals */\n  './modals/cam-tasklist-groups-modal',\n\n  '../api/index',\n  'angular-bootstrap'\n\n], function(\n  angular,\n  moment,\n\n  taskDirective,\n  taskMetaDirective,\n\n  camTaskActionCtrl,\n  camTaskGroupsCtrl,\n\n  /* detail plugins */\n  camTaskDetailFormPlugin,\n  camTaskDetailHistoryPlugin,\n  camTaskDetailDiagramPlugin,\n  camTaskDetailDescriptionPlugin,\n\n  /* action plugins */\n  camTaskActionCommentPlugin,\n\n  /* action plugin controller */\n  camCommentCreateModalCtrl,\n\n  /* modals */\n  camGroupEditModalCtrl,\n\n  /* API */\n  apiClient\n) {\n  'use strict';\n\n  var taskModule = angular.module('cam.tasklist.task', [\n    apiClient.name,\n    'ui.bootstrap',\n    'cam.tasklist.form',\n    'angularMoment'\n  ]);\n\n  /**\n   * @module cam.tasklist.task\n   */\n\n  /**\n   * @memberof cam.tasklist\n   */\n\n  taskModule.directive('camTasklistTask', taskDirective);\n\n  taskModule.directive('camTasklistTaskMeta', taskMetaDirective);\n\n  taskModule.controller('camTaskActionCtrl', camTaskActionCtrl);\n  taskModule.controller('camTaskGroupsCtrl', camTaskGroupsCtrl);\n\n  /* detail plugins */\n  taskModule.config(camTaskDetailFormPlugin);\n  taskModule.config(camTaskDetailHistoryPlugin);\n  taskModule.config(camTaskDetailDiagramPlugin);\n  taskModule.config(camTaskDetailDescriptionPlugin);\n\n    /* action plugins */\n  taskModule.config(camTaskActionCommentPlugin);\n\n  /* action plugin controller */\n  taskModule.controller('camCommentCreateModalCtrl', camCommentCreateModalCtrl);\n\n  taskModule.controller('camGroupEditModalCtrl', camGroupEditModalCtrl);\n\n  return taskModule;\n});\n\n","\ndefine('text!scripts/process/plugins/action/cam-tasklist-navbar-action-start-process-plugin.html',[],function () { return '<a ng-click=\"open()\"\\n   href>\\n  <span class=\"glyphicon glyphicon-list-alt\"></span>\\n  {{ \\'START_PROCESS\\' | translate }}\\n</a>\\n';});\n\n","\ndefine('text!scripts/process/plugins/action/modals/cam-tasklist-process-start-modal.html',[],function () { return '<div class=\"modal-header\">\\n  <div class=\"row\">\\n    <div class=\"col-xs-6\">\\n      <h3 class=\"modal-title\">{{ \\'START_PROCESS\\' | translate }}</h3>\\n    </div>\\n\\n    <div class=\"col-xs-6\">\\n      <form>\\n        <div class=\"form-group has-feedback\"\\n             ng-show=\"!PROCESS_TO_START_SELECTED\">\\n          <input type=\"text\"\\n                 ng-model=\"page.searchValue\"\\n                 placeholder=\"{{ \\'SEARCH_PROCESS_BY_NAME\\' | translate }}\"\\n                 ng-change=\"lookupProcessDefinitionByName()\"\\n                 class=\"form-control\">\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\"modal-body\">\\n\\n  <div notifications-panel />\\n\\n  <div ng-show=\"!PROCESS_TO_START_SELECTED\">\\n\\n    <div ng-show=\"!processDefinitionState.$loaded || lookupProcessDefinitionByName.$loading\"\\n       class=\"loader\">\\n      <span class=\"animate-spin glyphicon glyphicon-refresh\"></span>\\n      {{ \\'LOADING\\' | translate }}\\n    </div>\\n\\n    <div ng-hide=\"!processDefinitionState.$loaded || lookupProcessDefinitionByName.$loading\">\\n\\n      <div ng-hide=\"page.total\"\\n           class=\"well\">\\n        <span class=\"glyphicon glyphicon-info-sign\"></span>\\n        {{ \\'NO_PROCESS_DEFINITION_AVAILABLE\\' | translate }}\\n      </div>\\n\\n      <div ng-show=\"page.total\" class=\"available-processes\">\\n\\n        <div class=\"text-help\">\\n          <span class=\"glyphicon glyphicon-info-sign\"></span>\\n          {{ \\'CLICK_PROCESS_TO_START\\' | translate }}\\n        </div>\\n\\n        <ul class=\"processes\">\\n          <li ng-repeat=\"processDefinition in processDefinitions\">\\n            <a href ng-click=\"selectProcessDefinition(processDefinition)\">\\n              {{ processDefinition.name || processDefinition.key }}\\n            </a>\\n          </li>\\n        </ul>\\n\\n      </div>\\n\\n      <pagination ng-show=\"page.total > page.size\"\\n                  total-items=\"page.total\"\\n                  items-per-page=\"page.size\"\\n                  max-size=\"5\"\\n                  class=\"pagination-sm\"\\n                  boundary-links=\"true\"\\n                  ng-model=\"page.current\"\\n                  ng-change=\"pageChange()\"\\n                  next-text=\"&rsaquo;\"\\n                  last-text=\"&raquo;\"\\n                  previous-text=\"&lsaquo;\"\\n                  first-text=\"&laquo;\"></pagination>\\n    </div>\\n  </div>\\n\\n  <div ng-if=\"PROCESS_TO_START_SELECTED\">\\n\\n    <div ng-if=\"startFormState.$error\" class=\"alert alert-danger\" role=\"alert\">\\n      <span class=\"glyphicon glyphicon-exclamation-sign\"></span>\\n      <strong class=\"status\">{{ \\'FORM_FAILURE\\' | translate }}</strong>\\n      <span class=\"message\">{{ startFormState.$error.message }}</span>\\n    </div>\\n\\n    <div ng-if=\"startFormState.$loaded && !startFormState.$error\"\\n         cam-tasklist-form\\n         tasklist-form=\"startForm\"\\n         on-form-completion-callback=\"completionCallback\"\\n         on-form-completion=\"registerCompletionHandler\"\\n         on-form-validation=\"notifyFormValidation\"\\n         options=\"options\"\\n         params=\"params\" >\\n    </div>\\n  </div>\\n\\n</div>\\n\\n<div class=\"modal-footer\">\\n  <div ng-if=\"!PROCESS_TO_START_SELECTED\"\\n       class=\"row row-action\">\\n\\n    <div class=\"col-xs-12\">\\n      <button class=\"btn btn-xs btn-link\"\\n              type=\"button\"\\n              ng-click=\"$dismiss()\">\\n        {{ \\'CLOSE\\' | translate }}\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div ng-if=\"PROCESS_TO_START_SELECTED\"\\n       class=\"row\">\\n\\n    <div class=\"col-xs-4 align-left\">\\n      <button class=\"btn btn-xs btn-link\"\\n              type=\"button\"\\n              ng-click=\"back()\">\\n        {{ \\'BACK\\' | translate }}\\n      </button>\\n    </div>\\n\\n    <div class=\"col-xs-8\">\\n      <button class=\"btn btn-xs btn-link\"\\n              type=\"button\"\\n              ng-click=\"$dismiss()\">\\n        {{ \\'CLOSE\\' | translate }}\\n      </button>\\n\\n      <button class=\"btn btn-primary\"\\n              type=\"submit\"\\n              ng-disabled=\"$invalid\"\\n              ng-click=\"startProcessInstance()\">\\n        {{ \\'START\\' | translate }}\\n      </button>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n';});\n\n","define('scripts/process/plugins/action/cam-tasklist-navbar-action-start-process-plugin',[\n  'text!./cam-tasklist-navbar-action-start-process-plugin.html',\n  'text!./modals/cam-tasklist-process-start-modal.html'\n], function(\n  startProcessActionTemplate,\n  template\n) {\n  'use strict';\n\n  var Controller = [\n    '$scope',\n    '$modal',\n    '$q',\n    'camAPI',\n    'dataDepend',\n  function(\n    $scope,\n    $modal,\n    $q,\n    camAPI,\n    dataDepend\n  ) {\n\n    var ProcessDefinition = camAPI.resource('process-definition');\n\n    var processData = $scope.processData = dataDepend.create($scope);\n\n    var DEFAULT_PROCESS_DEFINITION_QUERY = {\n      latest: true,\n      active: true,\n      firstResult: 0,\n      maxResults: 15\n    };\n\n    processData.provide('processDefinitionQuery', DEFAULT_PROCESS_DEFINITION_QUERY);\n\n    processData.provide('processDefinitions', ['processDefinitionQuery', function(processDefinitionQuery) {\n      var deferred = $q.defer();\n\n      ProcessDefinition.list(processDefinitionQuery, function (err, res) {\n        if(err) {\n          deferred.reject(err);\n        }\n        else {\n          deferred.resolve(res);\n        }\n      });\n\n      return deferred.promise;\n\n    }]);\n\n    processData.provide('currentProcessDefinitionId', { id: null });\n\n    processData.provide('startForm', ['currentProcessDefinitionId', function (currentProcessDefinitionId) {\n      var deferred = $q.defer();\n\n      if (!currentProcessDefinitionId.id) {\n        deferred.resolve(null);\n      }\n      else {\n        ProcessDefinition.startForm(currentProcessDefinitionId, function (err, res) {\n          if(err) {\n            deferred.reject(err);\n          }\n          else {\n            deferred.resolve(res);\n          }\n        });\n      }\n\n      return deferred.promise;\n    }]);\n\n    $scope.open = function() {\n      processData.set('processDefinitionQuery', angular.copy(DEFAULT_PROCESS_DEFINITION_QUERY));\n      $modal.open({\n        size: 'lg',\n        controller: 'camProcessStartModalCtrl',\n        template: template,\n        resolve: {\n          processData: function () { return processData; }\n        }\n      }).result.then(function(result) {\n        if ($scope.tasklistApp && $scope.tasklistApp.refreshProvider) {\n          $scope.tasklistApp.refreshProvider.refreshTaskList();\n        }\n      });\n    };\n\n  }];\n\n  var Configuration = function PluginConfiguration(ViewsProvider) {\n\n    ViewsProvider.registerDefaultView('tasklist.navbar.action', {\n      id: 'start-process-action',\n      template: startProcessActionTemplate,\n      controller: Controller,\n      priority: 100\n    });\n  };\n\n  Configuration.$inject = ['ViewsProvider'];\n\n  return Configuration;\n\n});\n\n","define('scripts/process/plugins/action/modals/cam-tasklist-process-start-modal',[\n  'angular'\n], function(\n  angular\n) {\n\n  'use strict';\n\n  return [\n    '$rootScope',\n    '$scope',\n    '$translate',\n    'debounce',\n    'Notifications',\n    'processData',\n    'assignNotification',\n  function(\n    $rootScope,\n    $scope,\n    $translate,\n    debounce,\n    Notifications,\n    processData,\n    assignNotification\n  ) {\n    function errorNotification(src, err) {\n      $translate(src).then(function(translated) {\n        Notifications.addError({\n          status: translated,\n          message: (err ? err.message : ''),\n          scope: $scope\n        });\n      });\n    }\n\n    function successNotification(src) {\n      $translate(src).then(function(translated) {\n        Notifications.addMessage({\n          duration: 3000,\n          status: translated\n        });\n      });\n    }\n\n    // setup ////////////////////////////////////////////////////////////////////////\n\n    $scope.$on('$locationChangeSuccess', function() {\n      $scope.$dismiss();\n    });\n\n    var processStartData = processData.newChild($scope);\n\n    // initially always reset the current selected process definition id to null\n    processStartData.set('currentProcessDefinitionId', { id: null });\n\n    var DEFAULT_OPTIONS = $scope.options = {\n      hideCompleteButton : true,\n      hideLoadVariablesButton: true,\n      disableForm : false,\n      disableAddVariableButton: false\n    };\n\n    $scope.PROCESS_TO_START_SELECTED = false;\n\n    var query = null;\n\n    var page = $scope.page = {\n      total: 0,\n      current: 1,\n      searchValue: null\n    };\n\n    $scope.triggerOnStart = function () {};\n\n    // observe /////////////////////////////////////////////////////////////////////////////////////\n\n    processStartData.observe('processDefinitionQuery', function(_query) {\n      query = angular.copy(_query);\n\n      page.size = _query.maxResults;\n      page.current = (_query.firstResult / page.size) + 1;\n    });\n\n    $scope.startFormState = processStartData.observe('startForm', function (startForm) {\n      $scope.startForm = angular.copy(startForm);\n    });\n\n    $scope.processDefinitionState = processStartData.observe('processDefinitions', function (processDefinitions) {\n\n      page.total = processDefinitions.count;\n\n      $scope.processDefinitions = processDefinitions.items.sort(function(a, b) {\n        var aName = (a.name || a.key).toLowerCase();\n        var bName = (b.name || b.key).toLowerCase();\n        if (aName < bName)\n           return -1;\n        if (aName > bName)\n          return 1;\n        return 0;\n      });\n\n    });\n\n    // select process definition view //////////////////////////////////////////////////////\n\n    $scope.pageChange = function() {\n      query.firstResult = page.size * (page.current - 1);\n      processStartData.set('processDefinitionQuery', query);\n    };\n\n    $scope.lookupProcessDefinitionByName = debounce(function() {\n      var nameLike = page.searchValue;\n\n      if (!nameLike) {\n        delete query.nameLike;\n      }\n      else {\n        query.nameLike = '%' + nameLike + '%';\n      }\n\n      // reset first result of query\n      query.firstResult = 0;\n\n      processStartData.set('processDefinitionQuery', query);\n\n\n    }, 2000);\n\n    $scope.selectProcessDefinition = function(processDefinition) {\n      $scope.PROCESS_TO_START_SELECTED = true;\n\n      var processDefinitionId = processDefinition.id;\n      var processDefinitionKey = processDefinition.key;\n\n      $scope.options = angular.copy(DEFAULT_OPTIONS);\n\n      $scope.params = {\n        processDefinitionId : processDefinitionId,\n        processDefinitionKey : processDefinitionKey\n      };\n\n      processStartData.set('currentProcessDefinitionId', {\n        id: processDefinitionId\n      });\n\n    };\n\n    // start a process view /////////////////////////////////////////////////////////////////\n\n    $scope.$invalid = true;\n\n    $scope.back = function() {\n      $scope.$invalid = true;\n      $scope.PROCESS_TO_START_SELECTED = false;\n      $scope.options = DEFAULT_OPTIONS;\n      processStartData.set('currentProcessDefinitionId', { id: null });\n    };\n\n    var executeAfterDestroy = [];\n    $scope.$on('$destroy', function() {\n      var job;\n      while(!!(job = executeAfterDestroy.pop())) {\n        if(typeof job === \"function\") {\n          job();\n        }\n      }\n    });\n\n    // will be called when the form has been submitted\n    $scope.completionCallback = function(err, result) {\n      if (err) {\n        return errorNotification('PROCESS_START_ERROR', err);\n      }\n\n      executeAfterDestroy.push(function() {\n        successNotification('PROCESS_START_OK');\n        assignNotification({\n          assignee: $rootScope.authentication.name,\n          processInstanceId: result.id\n        });\n      });\n      $scope.$close();\n    };\n\n    // will be called on initialization of the 'form'-directive\n    $scope.registerCompletionHandler = function (fn) {\n      // register a handler when a process should be started\n      $scope.triggerOnStart = fn || function () {};\n    };\n\n    // will be triggered when the user select on 'Start'\n    $scope.startProcessInstance = function () {\n      $scope.triggerOnStart();\n    };\n\n    // will be called the validation state has been changed\n    $scope.notifyFormValidation = function (invalid) {\n      $scope.$invalid = invalid;\n    };\n\n  }];\n\n});\n\n","define('scripts/process/index',[\n  'angular',\n\n    /* action plugins */\n  './plugins/action/cam-tasklist-navbar-action-start-process-plugin',\n\n    /* action plugin controller */\n  './plugins/action/modals/cam-tasklist-process-start-modal'\n\n], function(\n  angular,\n\n  /* action plugins */\n  camNavbarActionStartProcessPlugin,\n\n  /* action plugin controller */\n  camProcessStartModalCtrl\n\n\n) {\n\n  'use strict';\n\n  var processModule = angular.module('cam.tasklist.process', [\n    'cam.tasklist.client',\n    'cam.tasklist.form',\n    'ui.bootstrap'\n  ]);\n\n\n  /* action plugins */\n  processModule.config(camNavbarActionStartProcessPlugin);\n\n  /* action plugin controller */\n  processModule.controller('camProcessStartModalCtrl', camProcessStartModalCtrl);\n\n  return processModule;\n\n});\n\n","define('scripts/navigation/controllers/cam-layout-ctrl',[\n  'angular'\n], function(\n  angular\n) {\n  'use strict';\n  var $ = angular.element;\n  var $bdy = $('body');\n\n  return [\n    '$scope',\n    '$timeout',\n  function(\n    $scope,\n    $timeout\n  ) {\n    $scope.toggleVariableSearch = function($event) {\n      if ($event && $event.preventDefault) {\n        $event.preventDefault();\n      }\n\n      $('.tasks-list').toggleClass('show-search');\n    };\n\n\n\n    function region($event) {\n      return $($event.currentTarget).attr('data-region');\n    }\n\n    function isClosed(target) {\n      return $bdy.hasClass(target +'-column-close');\n    }\n\n    function open(target) {\n      return $bdy.removeClass(target +'-column-close');\n    }\n\n    function close(target) {\n      return $bdy.addClass(target +'-column-close');\n    }\n\n    $scope.toggleRegion = function($event) {\n      if ($event && $event.preventDefault) {\n        $event.preventDefault();\n      }\n\n      var target = region($event);\n\n      // list-column-close is not allowed when task-column-close\n      if (target === 'task') {\n        if(isClosed('list') && !isClosed('task')) {\n          open('list');\n        }\n      }\n\n\n      else if (target === 'list') {\n        if(isClosed('task') && !isClosed('list')) {\n          open('task');\n        }\n      }\n\n      $bdy.toggleClass(target +'-column-close');\n      $timeout(function () {\n        $scope.$root.$broadcast('layout:change');\n      }, 600);\n    };\n\n    $scope.maximizeRegion = function($event) {\n      if ($event && $event.preventDefault) {\n        $event.preventDefault();\n      }\n\n      close('filters');\n      close('list');\n      open('task');\n    };\n\n    $scope.resetRegions = function($event) {\n      if ($event && $event.preventDefault) {\n        $event.preventDefault();\n      }\n\n      open('filters');\n      open('list');\n      open('task');\n    };\n  }];\n});\n\n","define('scripts/navigation/controllers/cam-header-views-ctrl',[],function() {\n  'use strict';\n  return [\n    '$scope',\n    'Views',\n  function($scope, Views) {\n    $scope.navbarVars = { read: [ 'tasklistApp' ] };\n    $scope.navbarActions = Views.getProviders({ component: 'tasklist.navbar.action' });\n  }];\n});\n\n","define('scripts/navigation/index',[\n  'angular',\n  './controllers/cam-layout-ctrl',\n  './controllers/cam-header-views-ctrl',\n  'camunda-commons-ui/util/index'\n], function(\n  angular,\n  camLayoutCtrl,\n  camHeaderViewsCtrl\n) {\n  'use strict';\n\n  var navigationModule = angular.module('cam.tasklist.navigation', [\n    require('camunda-commons-ui/util/index').name,\n    'ui.bootstrap',\n    'cam.tasklist.user'\n  ]);\n\n  navigationModule.controller('camHeaderViewsCtrl', camHeaderViewsCtrl);\n  navigationModule.controller('camLayoutCtrl', camLayoutCtrl);\n\n  return navigationModule;\n});\n\n","\ndefine('text!scripts/form/directives/cam-tasklist-form.html',[],function () { return '<div ng-show=\"tasklistForm && !$loaded\"\\n     class=\"loader\">\\n  <span class=\"animate-spin glyphicon glyphicon-refresh\"></span>\\n  {{ \\'LOADING\\' | translate }}\\n</div>\\n\\n<div ng-if=\"tasklistForm.type\" ng-show=\"tasklistForm && $loaded\" ng-class=\"{ \\'disabled-form\\' : options.disableForm}\">\\n\\n  <div ng-show=\"tasklistForm.$error\" class=\"alert alert-danger\" role=\"alert\">\\n    <span class=\"glyphicon glyphicon-exclamation-sign\"></span>\\n    <strong class=\"status\">{{ \\'FORM_FAILURE\\' | translate }}</strong>\\n    <span class=\"message\">{{ tasklistForm.$error.message | translate }}</span>\\n  </div>\\n\\n  <div ng-switch=\"tasklistForm.type\" ng-show=\"!tasklistForm.$error\">\\n\\n    <div ng-switch-when=\"embedded\">\\n      <div cam-tasklist-form-embedded>\\n      </div>\\n    </div>\\n\\n    <div ng-switch-when=\"external\">\\n      <div cam-tasklist-form-external>\\n      </div>\\n    </div>\\n\\n    <div ng-switch-default>\\n      <div cam-tasklist-form-generic>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\"form-actions\" ng-show=\"showCompleteButton()\">\\n    <button class=\"btn btn-primary\"\\n            type=\"submit\"\\n            ng-click=\"save($event)\"\\n            ng-hide=\"tasklistForm.type === \\'generic\\'\"\\n            tooltip-placement=\"top\"\\n            tooltip=\"{{ \\'SAVE_HINT\\' | translate }}\"\\n            ng-disabled=\"!$dirty\">\\n      {{ \\'SAVE\\' | translate }}\\n    </button>\\n    <button class=\"btn btn-primary\"\\n            type=\"submit\"\\n            ng-click=\"complete()\"\\n            ng-disabled=\"disableCompleteButton()\">\\n      {{ \\'COMPLETE\\' | translate }}\\n    </button>\\n  </div>\\n\\n</div>\\n';});\n\n","define('scripts/form/directives/cam-tasklist-form',[\n  'angular',\n  'text!./cam-tasklist-form.html'\n], function(\n  angular,\n  template\n) {\n  'use strict';\n\n  var EMBEDDED_KEY = 'embedded:',\n      APP_KEY = 'app:',\n      ENGINE_KEY = 'engine:';\n\n  function compact(arr) {\n    var a = [];\n    for (var ay in arr) {\n      if (arr[ay]) {\n        a.push(arr[ay]);\n      }\n    }\n    return a;\n  }\n\n  var noop = function () {};\n\n  return [function(){\n\n    return {\n\n      restrict: 'A',\n\n      scope: {\n        tasklistForm : '=',\n\n        /*\n         * current options are:\n         * - hideCompleteButton: to hide the complete button inside the form directive\n         * - disableCompleteButton: to disable or enable the complete button inside\n         *   the form directive\n         * - disableForm: to disable or enable the form\n         * - disableAddVariableButton: to disable or enable the 'Add Variable' button\n         *   inside a generic form\n         */\n        options: '=',\n\n        /*\n         * contains parameter like taskId, processDefinitionId, processDefinitionKey etc.\n         */\n        params: '=',\n\n        /* will be used to make a callback when the form will be completed */\n        onFormCompletionCallback: '&',\n\n        /*\n         * will be used to register a completion handler, when the completion\n         * will be trigger from the outside of a form\n         */\n        onFormCompletion: '&',\n\n        /*\n         * is a callback which will called when the validation state of the\n         * form changes (pass the flag '$invalid').\n         */\n        onFormValidation: '&'\n      },\n\n      template: template,\n\n      controller: [\n        '$scope',\n        'Uri',\n      function(\n        $scope,\n        Uri\n      ) {\n\n        // setup //////////////////////////////////////////////////////////////////\n\n        $scope.onFormCompletionCallback = $scope.onFormCompletionCallback() || noop;\n        $scope.onFormCompletion = $scope.onFormCompletion() || noop;\n        $scope.onFormValidation = $scope.onFormValidation() || noop;\n        $scope.completionHandler = noop;\n        $scope.saveHandler = noop;\n\n        $scope.$loaded = false;\n\n        // handle tasklist form ///////////////////////////////////////////////////\n\n        $scope.$watch('tasklistForm', function(value) {\n          $scope.$loaded = false;\n          if (value) {\n            parseForm(value);\n          }\n        });\n\n        function parseForm(form) {\n          var key = form.key,\n              applicationContextPath = form.contextPath;\n\n          // structure may be [embedded:][app:]formKey\n\n          if (!key) {\n            form.type = 'generic';\n            return;\n          }\n\n          if (key.indexOf(EMBEDDED_KEY) === 0) {\n            key = key.substring(EMBEDDED_KEY.length);\n            form.type = 'embedded';\n          } else {\n            form.type = 'external';\n          }\n\n          if (key.indexOf(APP_KEY) === 0) {\n            if (applicationContextPath) {\n              key = compact([applicationContextPath, key.substring(APP_KEY.length)])\n                .join('/')\n                // prevents multiple \"/\" in the URI\n                .replace(/\\/([\\/]+)/, '/');\n            }\n          }\n\n          if(key.indexOf(ENGINE_KEY) === 0) {\n            // resolve relative prefix\n            key = Uri.appUri(key);\n          }\n\n          form.key = key;\n        }\n\n        // completion /////////////////////////////////////////////\n\n        var completionCallback = function (err, result)  {\n          $scope.onFormCompletionCallback(err, result);\n        };\n\n        var complete = $scope.complete = function () {\n          $scope.completionHandler(completionCallback);\n        };\n\n        $scope.onFormCompletion(complete);\n\n        $scope.showCompleteButton = function () {\n          return $scope.options &&\n                 !$scope.options.hideCompleteButton &&\n                 $scope.$loaded;\n        };\n\n        $scope.disableCompleteButton = function () {\n          return $scope.$invalid || ($scope.options && $scope.options.disableCompleteButton);\n        };\n\n        // save ///////////////////////////////////////////////////\n\n        var save = $scope.save = function (evt) {\n          $scope.saveHandler(evt);\n        };\n\n        // API ////////////////////////////////////////////////////\n\n        this.notifyFormInitialized = function () {\n          $scope.$loaded = true;\n        };\n\n        this.notifyFormInitializationFailed = function (error) {\n          $scope.tasklistForm.$error = error;\n          // mark the form as initialized\n          this.notifyFormInitialized();\n          // set the '$invalid' flag to true to\n          // not be able to complete a task (or start\n          // a process)\n          this.notifyFormValidated(true);\n        };\n\n        this.notifyFormCompleted = function (err) {\n          $scope.onFormCompletion(err);\n        };\n\n        this.notifyFormValidated = function (invalid) {\n          $scope.$invalid = invalid;\n          $scope.onFormValidation(invalid);\n        };\n\n        this.notifyFormDirty = function (dirty) {\n          $scope.$dirty = dirty;\n        };\n\n\n        this.getOptions = function () {\n          return $scope.options || {};\n        };\n\n        this.getTasklistForm = function () {\n          return $scope.tasklistForm;\n        };\n\n        this.getParams = function () {\n          return $scope.params || {};\n        };\n\n        this.registerCompletionHandler = function(fn) {\n          $scope.completionHandler = fn ||  noop;\n        };\n\n        this.registerSaveHandler = function(fn) {\n          $scope.saveHandler = fn ||  noop;\n        };\n\n\n      }]\n    };\n  }];\n});\n\n","\ndefine('text!scripts/form/directives/cam-tasklist-form-generic.html',[],function () { return '<div class=\"generic-form-fields\">\\n\\n  <div class=\"text-help\">\\n    <span class=\"glyphicon glyphicon-info-sign\"></span>\\n    {{ \\'USE_GENERIC_FORM\\' | translate }}\\n  </div>\\n\\n  <div cam-tasklist-form-generic-variables>\\n  </div>\\n\\n</div>\\n';});\n\n","define('scripts/form/directives/cam-tasklist-form-generic',[\n  'angular',\n  'text!./cam-tasklist-form-generic.html'\n], function(\n  angular,\n  template\n) {\n  'use strict';\n\n  function noop () {}\n\n  return [\n    'CamForm',\n    'camAPI',\n  function(\n    CamForm,\n    camAPI\n  ){\n\n    return {\n\n      restrict: 'A',\n\n      require: '^camTasklistForm',\n\n      scope: true,\n\n      template: template,\n\n      link: function($scope, $element, attrs, formController) {\n        $scope.showBusinessKeyField = !!formController.getParams().processDefinitionId;\n\n        var formElement = $element.find('form');\n        var camForm = null;\n        var form = {\n          '$valid': false,\n          '$invalid': true\n        };\n\n        var $update = false;\n\n        $scope.$watch(function () {\n          return $update;\n        }, function (value) {\n          if (value) {\n            showForm(value, formController.getParams());\n            $update = false;\n          }\n        });\n\n        $scope.$watch(function () {\n          return formController.getTasklistForm();\n        }, function (value) {\n          if (value) {\n            $update = true;\n            $scope.variables = [];\n          }\n        });\n\n        $scope.$watch(function() {\n          return form && form.$valid;\n        }, function(value) {\n          formController.notifyFormValidated(!value);\n        });\n\n        function showForm(tasklistForm, params) {\n          params = angular.copy(params);\n\n          delete params.processDefinitionKey;\n\n          angular.extend(params, {\n            client: camAPI,\n            formElement: formElement,\n            done: done\n          });\n\n          camForm = new CamForm(params);\n        }\n\n        var done = function (err, _camForm) {\n          if (err) {\n            return formController.notifyFormInitializationFailed(err);\n          }\n          camForm = _camForm;\n\n          var formName = _camForm.formElement.attr('name');\n          var camFormScope = _camForm.formElement.scope();\n\n          if (!camFormScope) {\n            return;\n          }\n\n          form = camFormScope[formName];\n          formController.notifyFormInitialized();\n        };\n\n        function clearVariableManager() {\n          var variables = camForm.variableManager.variables;\n          for (var v in variables) {\n            camForm.variableManager.destroyVariable(v);\n          }\n        }\n\n        function clearFields() {\n          camForm.fields = [];\n        }\n\n        var complete = function (callback) {\n\n          function localCallback(error, result) {\n            clearVariableManager();\n            clearFields();\n            return callback(error, result);\n          }\n\n          try {\n            camForm.initializeFieldHandlers();\n          } catch (error) {\n            return localCallback(error);\n          }\n\n          var variables = camForm.variableManager.variables;\n          for (var v in variables) {\n            variables[v].value = null;\n          }\n          camForm.submit(localCallback);\n        };\n\n        formController.registerCompletionHandler(complete);\n\n      }\n    };\n  }];\n});\n\n","\ndefine('text!scripts/form/directives/cam-tasklist-form-generic-variables.html',[],function () { return '<form name=\"generic-form\"\\n      class=\"form-horizontal\">\\n\\n  <div ng-if=\"showBusinessKeyField\"\\n       class=\"form-group\">\\n    <label for=\"business-key-field\"\\n           translate=\"BUSINESS_KEY\"\\n           class=\"control-label col-xs-2\">Business key</label>\\n    <div class=\"col-xs-10\">\\n      <input type=\"text\"\\n             id=\"business-key-field\"\\n             cam-business-key\\n             class=\"form-control\" />\\n    </div>\\n  </div>\\n\\n\\n  <div class=\"form-group labels-left\">\\n    <div class=\"col-xs-2 row-action\">\\n      <a ng-click=\"addVariable()\"\\n         ng-disabled=\"options.disableAddVariableButton\">\\n        <span class=\"hidden-xs hidden-sm\"\\n              translate=\"ADD_VARIABLE\">Add variable</span>\\n        <span class=\"glyphicon glyphicon-plus-sign\"></span>\\n      </a>\\n    </div>\\n\\n\\n\\n    <div class=\"col-xs-10\"\\n         ng-if=\"variables.length\">\\n      <div class=\"row\">\\n        <label class=\"control-label col-xs-4\"\\n               translate=\"NAME\">Name</label>\\n\\n\\n\\n        <label class=\"control-label col-xs-4\"\\n               translate=\"TYPE\">Type</label>\\n\\n\\n\\n        <label class=\"control-label col-xs-4\"\\n               translate=\"VALUE\">Value</label>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n  <div ng-if=\"variables.length\"\\n       ng-repeat=\"(delta, variable) in variables\"\\n       class=\"form-group\"\\n       ng-form=\"repeatForm\">\\n\\n    <div class=\"col-xs-2 row-action\">\\n      <a ng-click=\"removeVariable(delta)\"\\n         ng-if=\"!variable.fixedName\">\\n        <span class=\"hidden-sm hidden-xs\"\\n              translate=\"REMOVE\">Remove</span>\\n        <span class=\"glyphicon glyphicon-minus-sign\"></span>\\n      </a>\\n    </div>\\n\\n\\n\\n    <div class=\"col-xs-10\">\\n      <div class=\"row\">\\n        <div class=\"col-xs-4\">\\n          <input required\\n                 type=\"text\"\\n                 class=\"form-control\"\\n                 placeholder=\"{{ \\'VARIABLE_NAME\\' | translate }}\"\\n                 ng-model=\"variable.name\"\\n                 name=\"name\"\\n                 cam-unique-value=\"{{ getVariableNames() }}\"\\n                 ng-readonly=\"variable.fixedName\" />\\n          <span ng-if=\"repeatForm.name.$invalid && repeatForm.name.$dirty\" class=\"has-error\">\\n            <span ng-if=\"repeatForm.name.$error.required\"\\n                  class=\"help-block\">\\n              {{ \\'REQUIRED_FIELD\\' | translate }}\\n            </span>\\n            <span ng-if=\"repeatForm.name.$error.camUniqueValue\"\\n                  class=\"help-block\">\\n              {{ \\'REQUIRE_UNIQUE_NAME\\' | translate }}\\n            </span>\\n          </span>\\n        </div>\\n\\n\\n\\n        <div class=\"col-xs-4\">\\n          <select required\\n                  ng-disabled=\"!variable.name\"\\n                  class=\"form-control\"\\n                  ng-model=\"variable.type\">\\n\\n            <option disabled\\n                    value=\"\"\\n                    translate=\"VARIABLE_TYPE\">Type</option>\\n\\n            <option value=\"Boolean\">Boolean</option>\\n            <option value=\"Short\">Short</option>\\n            <option value=\"Integer\">Integer</option>\\n            <option value=\"Long\">Long</option>\\n            <option value=\"Double\">Double</option>\\n            <option value=\"String\">String</option>\\n            <option value=\"Date\">Date</option>\\n          </select>\\n        </div>\\n\\n\\n\\n        <div class=\"col-xs-4\"\\n             ng-switch=\"variable.type\">\\n          <input ng-switch-when=\"\"\\n                 readonly\\n                 type=\"text\"\\n                 class=\"form-control\"\\n                 placeholder=\"{{ \\'VARIABLE_VALUE\\' | translate }}\" />\\n\\n\\n          <input ng-switch-when=\"Boolean\"\\n                 class=\"form-control\"\\n                 type=\"checkbox\"\\n                 ng-model=\"variable.value\"\\n                 ng-checked=\"variable.value\"\\n                 cam-variable-name=\"{{ variable.name }}\"\\n                 cam-variable-type=\"{{ variable.type }}\" />\\n\\n\\n          <input ng-switch-default\\n                 class=\"form-control\"\\n                 type=\"{{ variableTypes[variable.type] }}\"\\n                 required\\n                 ng-model=\"variable.value\"\\n                 name=\"value\"\\n                 cam-variable-name=\"{{ variable.name }}\"\\n                 cam-variable-type=\"{{ variable.type }}\"\\n                 placeholder=\"{{ \\'VARIABLE_VALUE\\' | translate }}\" />\\n\\n          <span ng-if=\"repeatForm.value.$invalid && repeatForm.value.$dirty\" class=\"has-error\">\\n            <span ng-if=\"repeatForm.value.$error.required\"\\n                  class=\"help-block\">\\n              {{ \\'REQUIRED_FIELD\\' | translate }}\\n            </span>\\n            <span ng-if=\"repeatForm.value.$error.camVariableType\"\\n                  class=\"help-block\">\\n              Only a {{ variable.type }} value is allowed\\n            </span>\\n          </span>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\"form-group\"\\n       ng-if=\"!options.hideLoadVariablesButton && !variablesLoaded\">\\n    <div class=\"col-xs-2 row-action\">\\n      <a ng-click=\"loadVariables()\">\\n        <span class=\"hidden-sm hidden-xs\"\\n              translate=\"LOAD_VARIABLES\">Load Variables</span>\\n        <span class=\"glyphicon glyphicon-download\"></span>\\n      </a>\\n    </div>\\n  </div>\\n\\n</form>\\n';});\n\n","define('scripts/form/directives/cam-tasklist-form-generic-variables',[\n  'angular',\n  'text!./cam-tasklist-form-generic-variables.html'\n], function(\n  angular,\n  template\n) {\n  'use strict';\n\n  return ['camAPI', 'Notifications', '$translate', function(camAPI, Notifications, $translate){\n\n    return {\n\n      restrict: 'A',\n\n      require: '^camTasklistForm',\n\n      template: template,\n\n      link: function($scope, $element, attrs, formController) {\n\n        var Task = camAPI.resource('task');\n\n        $scope.$watch('tasklistForm', function(value) {\n          $scope.variablesLoaded = false;\n        });\n\n        var emptyVariable = {\n          name:   '',\n          value:  '',\n          type:   ''\n        };\n\n        var variableTypes = $scope.variableTypes = {\n          'Boolean':  'checkbox', // handled via switch in HTML template\n          'Integer':  'text',\n          'Long':     'text',\n          'Short':    'text',\n          'Double':   'text',\n          'String':   'text',\n          'Date':     'text'\n        };\n\n        $scope.addVariable = function() {\n          var newVariable = angular.copy(emptyVariable);\n          $scope.variables.push(newVariable);\n        };\n\n        $scope.removeVariable = function(delta) {\n          var vars = [];\n\n          angular.forEach($scope.variables, function(variable, d) {\n            if (d != delta) {\n              vars.push(variable);\n            }\n          });\n\n          $scope.variables = vars;\n        };\n\n        $scope.getVariableNames = function() {\n          return $scope.variables.map(function(variable) {\n            return variable.name;\n          });\n        };\n\n        $scope.loadVariables = function() {\n          $scope.variablesLoaded = true;\n          Task.formVariables({\n            id: formController.getParams().taskId,\n            deserializeValues: false\n          }, function(err, result) {\n            if(err) {\n              $scope.variablesLoaded = false;\n              return $translate('LOAD_VARIABLES_FAILURE').then(function(translated) {\n                Notifications.addError({\n                  status: translated,\n                  message: err.message,\n                  scope: $scope\n                });\n              });\n            }\n\n            var variableAdded = false;\n            angular.forEach(result, function(value, name) {\n              if(variableTypes[value.type]) {\n                $scope.variables.push({\n                  name : name,\n                  value: value.value,\n                  type:  value.type,\n                  fixedName : true\n                });\n                variableAdded = true;\n              }\n            });\n            if(!variableAdded) {\n              $translate('NO_TASK_VARIABLES').then(function(translated) {\n                Notifications.addMessage({\n                  duration: 5000,\n                  status: translated,\n                  scope: $scope\n                });\n              });\n            }\n          });\n        };\n      }\n    };\n  }];\n});\n\n","\ndefine('text!scripts/form/directives/cam-tasklist-form-embedded.html',[],function () { return '<div class=\"form-container\">\\n</div>';});\n\n","define('scripts/form/directives/cam-tasklist-form-embedded',[\n  'angular',\n  'text!./cam-tasklist-form-embedded.html'\n], function(\n  angular,\n  template\n) {\n  'use strict';\n\n\n  return [\n    'CamForm',\n    'camAPI',\n    '$timeout',\n  function(\n    CamForm,\n    camAPI,\n    $timeout\n  ){\n\n    return {\n\n      restrict: 'A',\n\n      require: '^camTasklistForm',\n\n      scope: true,\n\n      template: template,\n\n      link : function($scope, $element, attrs, formController) {\n\n        var container = $element.find('.form-container');\n        var camForm = null;\n        var form = $scope.form = {\n          '$valid': false,\n          '$invalid': true\n        };\n\n        $scope.$watch('tasklistForm', function (value) {\n          if (value) {\n            showForm(container, value, formController.getParams());\n          }\n        });\n\n        $scope.$watch(function() {\n          return form && form.$valid;\n        }, function(value) {\n          formController.notifyFormValidated(!value);\n        });\n\n        // watch for changes in the form\n        $scope.$watch(function() {\n          return form && form.$dirty;\n        }, function(value) {\n          formController.notifyFormDirty(value);\n        });\n\n        function showForm(container, tasklistForm, params) {\n          var formUrl = tasklistForm.key;\n\n          params = angular.copy(params);\n\n          delete params.processDefinitionKey;\n\n          angular.extend(params, {\n            containerElement: container,\n            client: camAPI,\n            formUrl: formUrl,\n            done: done\n          });\n\n          camForm = new CamForm(params);\n\n        }\n\n        var done = function (err, _camForm) {\n          if (err) {\n            return formController.notifyFormInitializationFailed(err);\n          }\n          camForm = _camForm;\n\n          var formName = _camForm.formElement.attr('name');\n          var camFormScope = _camForm.formElement.scope();\n\n          if (!camFormScope) {\n            return;\n          }\n\n          form = camFormScope[formName];\n          form.$setPristine();\n          formController.notifyFormInitialized();\n        };\n\n        var complete = function (callback) {\n          camForm.submit(callback);\n        };\n\n        var save = function(evt) {\n          form.$setPristine();\n          camForm.store();\n\n          // manually trigger a mouseleave event to make the tooltip disappear\n          $timeout(function(){\n            angular.element(evt.target).triggerHandler($.Event('mouseleave'));\n          });\n        };\n\n        formController.registerCompletionHandler(complete);\n        formController.registerSaveHandler(save);\n\n        $scope.$on('authentication.login.required', function() {\n          save();\n        });\n\n      }\n\n    };\n\n  }];\n\n});\n\n","\ndefine('text!scripts/form/directives/cam-tasklist-form-external.html',[],function () { return '<div class=\"text-help\">\\n  <span class=\"glyphicon glyphicon-info-sign\"></span>\\n  {{ EXTERNAL_FORM_NOTE | translate }}\\n</div>\\n\\n<a ng-href=\"{{ externalFormUrl  }}\"\\n   class=\"external-form\">\\n  {{ \\'EXTERNAL_FORM_LINK\\' |translate }}\\n  <span class=\"glyphicon glyphicon-folder-open\"></span>\\n</a>\\n';});\n\n","define('scripts/form/directives/cam-tasklist-form-external',[\n  'angular',\n  'text!./cam-tasklist-form-external.html'\n], function(\n  angular,\n  template\n) {\n  'use strict';\n\n\n  return [\n    '$location',\n  function($location) {\n\n    return {\n\n      restrict: 'A',\n\n      require: '^camTasklistForm',\n\n      scope: true,\n\n      template: template,\n\n      link : function($scope, $elment, attrs, formController) {\n\n        formController.notifyFormValidated(true);\n\n        $scope.externalFormUrl  = null;\n        $scope.EXTERNAL_FORM_NOTE = null;\n\n        $scope.$watch(function () {\n          return formController.getTasklistForm() && formController.getParams();\n        }, function (value) {\n\n          if (value) {\n\n            var tasklistForm = formController.getTasklistForm();\n            var params = formController.getParams();\n\n            var key = tasklistForm.key;\n\n            var taskId = params.taskId;\n            var processDefinitionKey = params.processDefinitionKey;\n\n            var queryParam = null;\n\n            if (taskId) {\n              queryParam = 'taskId=' + taskId;\n              $scope.EXTERNAL_FORM_NOTE = 'TASK_EXTERNAL_FORM_NOTE';\n\n            } else if (processDefinitionKey) {\n              queryParam = 'processDefinitionKey=' + processDefinitionKey;\n              $scope.EXTERNAL_FORM_NOTE = 'PROCESS_EXTERNAL_FORM_NOTE';\n\n            } else {\n              return formController.notifyFormInitializationFailed({\n                message: 'INIT_EXTERNAL_FORM_FAILED'\n              });\n            }\n\n            var absoluteUrl = $location.absUrl();\n            var url = $location.url();\n\n            // remove everthing after '#/', e.g.:\n            // '.../#/?task=abc&...' ---> '.../#/'\n            absoluteUrl = absoluteUrl.replace(url, '/');\n\n            $scope.externalFormUrl  = encodeURI(key + '?' + queryParam + '&callbackUrl=' + absoluteUrl);\n\n            formController.notifyFormInitialized();\n          }\n\n        });\n\n        $scope.$watch(function () {\n          return formController.getOptions();\n        }, function (options) {\n\n          if (options) {\n            options.hideCompleteButton = true;\n          }\n\n        });\n\n      }\n\n    };\n\n  }];\n\n});\n\n","define('scripts/form/directives/cam-tasklist-unique-value',[], function() {\n  'use strict';\n\n  return [function() {\n\n    return {\n\n      require: 'ngModel',\n\n      link: function($scope, $element, $attrs, ctrl) {\n\n        var validate = function(viewValue) {\n\n          var names = JSON.parse($attrs.camUniqueValue);\n\n          ctrl.$setValidity('camUniqueValue', true );\n\n          if (viewValue) {\n\n            if (ctrl.$pristine) {\n              ctrl.$pristine = false;\n              ctrl.$dirty = true;\n              $element.addClass('ng-dirty');\n              $element.removeClass('ng-pristine');\n            }\n\n            var nameFound = false;\n            for(var i = 0; i < names.length; i++) {\n              if(names[i] === viewValue) {\n                if(nameFound) {\n                  ctrl.$setValidity('camUniqueValue', false );\n                  break;\n                }\n                nameFound = true;\n              }\n            }\n          }\n          return viewValue;\n        };\n\n        ctrl.$parsers.unshift(validate);\n        ctrl.$formatters.push(validate);\n\n        $attrs.$observe('camUniqueValue', function(comparisonModel){\n          return validate(ctrl.$viewValue);\n        });\n      }\n    };\n  }];\n});\n","define('scripts/form/index',[\n  'angular',\n  './directives/cam-tasklist-form',\n  './directives/cam-tasklist-form-generic',\n  './directives/cam-tasklist-form-generic-variables',\n  './directives/cam-tasklist-form-embedded',\n  './directives/cam-tasklist-form-external',\n\n  './directives/cam-tasklist-unique-value'\n], function(\n  angular,\n  camTasklistForm,\n  camTasklistFormGeneric,\n  camTasklistFormGenericVariables,\n  camTasklistFormEmbedded,\n  camTasklistFormExternal,\n  camTasklistUniqueValue\n) {\n  'use strict';\n\n  var formModule = angular.module('cam.tasklist.form', [\n    'ui.bootstrap'\n  ]);\n\n  formModule.directive('camTasklistForm', camTasklistForm);\n  formModule.directive('camTasklistFormGeneric', camTasklistFormGeneric);\n  formModule.directive('camTasklistFormGenericVariables', camTasklistFormGenericVariables);\n  formModule.directive('camTasklistFormEmbedded', camTasklistFormEmbedded);\n  formModule.directive('camTasklistFormExternal', camTasklistFormExternal);\n  formModule.directive('camUniqueValue', camTasklistUniqueValue);\n\n  return formModule;\n});\n\n","\ndefine('text!scripts/filter/directives/cam-tasklist-filters.html',[],function () { return '<div ng-show=\"!state.$loaded && !state.$error\"\\n     class=\"loader\">\\n  <span class=\"animate-spin glyphicon glyphicon-refresh\"></span>\\n  {{ \\'LOADING\\' | translate }}\\n</div>\\n\\n<div ng-show=\"state.$error\" class=\"alert alert-danger\" role=\"alert\">\\n  <span class=\"glyphicon glyphicon-exclamation-sign\"></span>\\n  <strong class=\"status\">{{ \\'FAILURE\\' | translate }}:</strong>\\n  <span class=\"message\">{{ \\'FILTERS_LOADING_FAILURE\\' | translate }}</span>\\n</div>\\n\\n<div ng-show=\"state.$loaded && !state.$error\">\\n\\n  <div ng-hide=\"totalItems\"\\n       class=\"well\">\\n    <span class=\"glyphicon glyphicon-info-sign\"></span>\\n    {{ \\'NO_AVAILABLE_FILTER\\' | translate }}\\n  </div>\\n\\n  <div ng-show=\"totalItems\"\\n       ng-repeat=\"(delta, filter) in filters | orderBy:\\'properties.priority\\'\"\\n       class=\"task-filter-wrapper\"\\n       ng-class=\"{active: isFocused(filter)}\"\\n       ng-style=\"{\\'z-index\\': ((filters.length + 10) - delta) }\">\\n\\n    <div class=\"task-filter\"\\n         ng-style=\"filter.style\"\\n         ng-click=\"focus(filter)\">\\n\\n      <div ng-if=\"isFocused(filter)\"\\n           class=\"counter\">{{ filterCount }}</div>\\n\\n      <a ng-click=\"openModal($event, filter)\"\\n         class=\"edit-filter\">\\n        <span class=\"glyphicon glyphicon-pencil\"></span>\\n        <span class=\"hidden-sm hidden-xs hidden-md\"\\n              translate=\"FILTER_DETAILS\">Filter details</span>\\n      </a>\\n\\n      <h4 class=\"name\"\\n          tooltip=\"{{ filter.properties.description }}\"\\n          tooltip-placement=\"top\">{{ filter.name }}</h4>\\n    </div>\\n  </div>\\n</div>\\n';});\n\n","define('scripts/filter/directives/cam-tasklist-filters',[\n  'text!./cam-tasklist-filters.html',\n  'angular'\n], function(\n  template,\n  angular\n) {\n  'use strict';\n\n  var $ = angular.element;\n  var each = angular.forEach;\n\n  var noop = function () {};\n\n  return [function() {\n\n    return {\n\n      restrict: 'A',\n      scope: {\n        filtersData: '=',\n        openModal: '&'\n      },\n\n      template: template,\n\n      controller: [\n        '$scope',\n        'search',\n      function (\n        $scope,\n        search\n      ) {\n\n        var filtersData = $scope.filtersData = $scope.filtersData.newChild($scope);\n\n        $scope.openModal = $scope.openModal() || noop;\n\n        // observe ////////////////////////////////////////////////////////////////////////////////\n\n        /**\n         * observe the count for the current filter\n         */\n        filtersData.observe('taskList', function(taskList) {\n          $scope.filterCount = taskList.count;\n        });\n\n        /**\n         * observe list of filters to set the background-color on a filter\n         */\n        $scope.state = filtersData.observe('filters', function(filters) {\n\n          $scope.totalItems = filters.length;\n\n          for (var i = 0, filter; !!(filter = filters[i]); i++) {\n            // read background color from properties\n            filter.style = {\n              'border-color': filter.properties.color,\n              'background-color': filter.properties.color\n            };\n\n          }\n\n          $scope.filters = filters;\n\n        });\n\n        filtersData.observe('currentFilter', function (currentFilter) {\n          $scope.currentFilter = currentFilter;\n        });\n\n        // selection ////////////////////////////////////////////////////////////////\n\n        /**\n         * select a filter\n         */\n        $scope.focus = function(filter) {\n          $scope.filterCount = undefined;\n\n          search.updateSilently({\n            filter: filter.id\n          });\n\n          filtersData.changed('currentFilter');\n        };\n\n        /**\n         * returns true if the provided filter is the focused filter\n         */\n        $scope.isFocused = function(filter) {\n          return filter.id === $scope.currentFilter.id;\n        };\n\n      }]\n    };\n  }];\n});\n\n","\ndefine('text!scripts/filter/directives/cam-tasklist-filter-modal-form.html',[],function () { return '<form name=\"filterForm\" role=\"form\">\\n\\n  <accordion close-others=\"true\">\\n\\n    <accordion-group is-open=\"accordion.general\">\\n\\n      <accordion-heading>\\n        {{ \\'FILTER_FORM_BASICS\\' | translate }}\\n        <span class=\"glyphicon glyphicon-exclamation-sign\"\\n              ng-show=\"showHint(\\'filterGeneralForm\\')\"></span>\\n      </accordion-heading>\\n\\n      <div class=\"task-filter-hint text-help\">\\n        <span class=\"glyphicon glyphicon-info-sign\"></span>\\n        {{ \\'FILTER_FORM_BASICS_HINT\\' | translate }}\\n      </div>\\n\\n      <div cam-tasklist-filter-modal-form-general\\n           filter=\"filter\"\\n           accesses=\"accesses\">\\n      </div>\\n\\n    </accordion-group>\\n\\n    <accordion-group is-open=\"accordion.criteria\">\\n      <accordion-heading>\\n        {{ \\'FILTER_FORM_CRITERIA\\' | translate }}\\n        <span class=\"glyphicon glyphicon-exclamation-sign\"\\n              ng-show=\"showHint(\\'filterCriteriaForm\\')\"></span>\\n      </accordion-heading>\\n\\n      <div class=\"task-filter-hint text-help\">\\n        <span class=\"glyphicon glyphicon-info-sign\"></span>\\n        {{ \\'FILTER_FORM_CRITERIA_HINT\\' | translate }}\\n      </div>\\n\\n      <div cam-tasklist-filter-modal-form-criteria\\n           filter=\"filter\"\\n           accesses=\"accesses\">\\n      </div>\\n\\n    </accordion-group>\\n\\n    <accordion-group is-open=\"accordion.permission\">\\n      <accordion-heading>\\n        {{ \\'FILTER_FORM_PERMISSIONS\\' | translate }}\\n        <span class=\"glyphicon glyphicon-exclamation-sign\"\\n              ng-show=\"showHint(\\'filterPermissionForm\\')\"></span>\\n      </accordion-heading>\\n\\n      <div class=\"task-filter-hint text-help\">\\n        <span class=\"glyphicon glyphicon-info-sign\"></span>\\n        {{ \\'FILTER_FORM_PERMISSIONS_HINT\\' | translate }}\\n      </div>\\n\\n      <div cam-tasklist-filter-modal-form-permission\\n           filter=\"filter\"\\n           accesses=\"accesses\"\\n           filter-modal-form-data=\"filterModalFormData\"\\n           is-open=\"accordion.permission\">\\n      </div>\\n\\n    </accordion-group>\\n\\n    <accordion-group is-open=\"accordion.variable\">\\n      <accordion-heading>\\n        {{ \\'FILTER_FORM_VARIABLES\\' | translate }}\\n        <span class=\"glyphicon glyphicon-exclamation-sign\"\\n              ng-show=\"showHint(\\'filterVariableForm\\')\"></span>\\n      </accordion-heading>\\n\\n      <div class=\"task-filter-hint text-help\">\\n        <span class=\"glyphicon glyphicon-info-sign\"></span>\\n        {{ \\'FILTER_FORM_VARIABLES_HINT\\' | translate }}\\n      </div>\\n\\n      <div cam-tasklist-filter-modal-form-variable\\n           filter=\"filter\"\\n           accesses=\"accesses\">\\n      </div>\\n\\n    </accordion-group>\\n\\n  </accordion>\\n\\n</form>\\n\\n';});\n\n","define('scripts/filter/directives/cam-tasklist-filter-modal-form',[\n  'angular',\n  'text!./cam-tasklist-filter-modal-form.html'\n], function(\n  angular,\n  template\n) {\n  'use strict';\n\n  var isArray = angular.isArray;\n\n  var noop = function () {};\n\n  var GENERAL_ACCORDION =       'general',\n      PERMISSION_ACCORDION =    'permission',\n      CRITERIA_ACCORDION =      'criteria',\n      VARIABLE_ACCORDION =      'variable';\n\n  return [function() {\n\n    return {\n\n      restrict: 'A',\n      scope: {\n        filter: '=',\n        filterModalData: '=',\n        registerIsValidProvider: '&',\n        registerPostFilterSavedProvider: '&'\n      },\n\n      template: template,\n\n      controller: [\n        '$scope',\n      function (\n        $scope\n      ) {\n\n        // init ////////////////////////////////////////////////////////////////////////\n\n        var filterModalFormData = $scope.filterModalFormData = $scope.filterModalData.newChild($scope);\n\n        $scope.registerIsValidProvider = $scope.registerIsValidProvider() || noop;\n        $scope.registerPostFilterSavedProvider = $scope.registerPostFilterSavedProvider() || noop;\n\n        var opened = GENERAL_ACCORDION;\n        $scope.accordion = {\n          general       : opened === GENERAL_ACCORDION,\n          permission    : opened === PERMISSION_ACCORDION,\n          criteria      : opened === CRITERIA_ACCORDION,\n          variable      : opened === VARIABLE_ACCORDION\n        };\n\n        // observe //////////////////////////////////////////////////////////////////////\n\n        filterModalFormData.observe('accesses', function(accesses) {\n          $scope.accesses = accesses;\n        });\n\n        // init isValidProvider ////////////////////////////////////////////////////////\n\n        var isValidProvider = function () {\n          return $scope.filterForm.$valid;\n        };\n\n        $scope.registerIsValidProvider(isValidProvider);\n\n        // handle hints ////////////////////////////////////////////////////////////////\n\n        var hintProvider = {};\n        this.registerHintProvider = function (formName, fn) {\n          fn = fn || noop;\n          hintProvider[formName] = fn;\n        };\n\n        $scope.showHint = function (formName) {\n          var provider = hintProvider[formName];\n          return provider && provider();\n        };\n\n        // handle submit after filter has been saved succesfully //////////////////////\n\n        var postFilterSavedProviders = [];\n        this.registerPostFilterSavedProvider = function (provider) {\n          postFilterSavedProviders.push(provider || function (filter, callback) { return callback(); } );\n        };\n\n        var postFilterSavedProvider = function (filter, callback) {\n\n          var count = postFilterSavedProviders.length;\n\n          if (count === 0) {\n            return callback();\n          }\n\n          var errors = [];\n          var localCallback = function (err) {\n            count = count - 1;\n\n            if (err) {\n              if (isArray(err)) {\n                if (err.length) {\n                  errors = errors.concat(err);\n                }\n              }\n              else {\n                errors.push(err);\n              }\n            }\n\n            if (count === 0) {\n              if (errors.length === 1) {\n                return callback(errors[0]);\n              }\n              else if (errors.length) {\n                return callback(errors);\n              }\n              else {\n                callback();\n              }\n            }\n\n          };\n\n          for (var i = 0, provider; !!(provider = postFilterSavedProviders[i]); i++) {\n            provider(filter, localCallback);\n          }\n\n        };\n\n        $scope.registerPostFilterSavedProvider(postFilterSavedProvider);\n\n        // helper ///////////////////////////////////////////////////////////////////////\n\n        this.removeArrayItem = function(arr, delta) {\n          var newArr = [];\n          for (var key in arr) {\n            if (key != delta) {\n              newArr.push(arr[key]);\n            }\n          }\n          return newArr;\n        };\n\n      }]\n\n    };\n\n  }];\n\n});\n\n","\ndefine('text!scripts/filter/directives/cam-tasklist-filter-modal-form-general.html',[],function () { return '<div ng-form class=\"form-horizontal\" role=\"form\" name=\"filterGeneralForm\">\\n\\n  <div class=\"row\">\\n    <div class=\"col-xs-8\">\\n      <div class=\"form-group\">\\n\\n        <label for=\"filterName\"\\n               class=\"col-xs-3 control-label\"\\n               translate=\"FILTER_NAME_LABEL\">Name</label>\\n\\n        <div class=\"col-xs-9\">\\n          <input class=\"form-control\"\\n                 name=\"filterName\"\\n                 ng-model=\"filter.name\"\\n                 type=\"text\"\\n                 required\\n                 placeholder=\"{{ \\'FILTER_NAME_PLACEHOLDER\\' | translate }}\"\\n                 ng-readonly=\"filter.id && !accesses.update\"\\n                 ng-disabled=\"filter.id && !accesses.update\" />\\n\\n          <span ng-if=\"this.filterGeneralForm.filterName.$invalid && this.filterGeneralForm.filterName.$dirty\"\\n                class=\"has-error\">\\n            <span ng-show=\"this.filterGeneralForm.filterName.$error.required\" class=\"help-block\">\\n              {{ \\'REQUIRED_FIELD\\' | translate }}\\n            </span>\\n          </span>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\"col-xs-4\">\\n\\n      <div class=\"form-group\">\\n\\n        <label for=\"filter-form-color\"\\n               class=\"col-xs-6 control-label\"\\n               translate=\"FILTER_COLOR_LABEL\">Color</label>\\n\\n        <div class=\"col-xs-6\">\\n\\n          <input class=\"form-control\"\\n                 name=\"filterColor\"\\n                 ng-model=\"filter.properties.color\"\\n                 ng-pattern=\"/^#([0-9a-f]{6}|[0-9a-f]{3})$/i\"\\n                 type=\"color\"\\n                 ng-readonly=\"filter.id && !accesses.update\"\\n                 ng-disabled=\"filter.id && !accesses.update\" />\\n\\n          <span ng-if=\"this.filterGeneralForm.filterColor.$invalid && this.filterGeneralForm.filterColor.$dirty\"\\n                class=\"has-error\">\\n            <span ng-show=\"this.filterGeneralForm.filterColor.$error.pattern\" class=\"help-block\">\\n              {{ \\'REQUIRED_HEX_COLOR_FIELD\\' | translate }}\\n            </span>\\n          </span>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  <div class=\"row\">\\n    <div class=\"col-xs-8\">\\n      <div class=\"form-group\">\\n\\n        <label for=\"filter-form-description\"\\n               class=\"col-xs-3 control-label\"\\n               translate=\"FILTER_DESCRIPTION_LABEL\">Description</label>\\n\\n        <div class=\"col-xs-9\">\\n          <input class=\"col-xs-9 form-control\"\\n                 name=\"filterDescription\"\\n                 ng-model=\"filter.properties.description\"\\n                 type=\"text\"\\n                 placeholder=\"{{ \\'FILTER_DESCRIPTION_PLACEHOLDER\\' | translate }}\"\\n                 ng-readonly=\"filter.id && !accesses.update\"\\n                 ng-disabled=\"filter.id && !accesses.update\" />\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\"col-xs-4\">\\n      <div class=\"form-group\">\\n\\n        <label for=\"filter-form-priority\"\\n               class=\"col-xs-6 control-label\"\\n               translate=\"FILTER_PRIORITY_LABEL\">Priority</label>\\n\\n        <div class=\"col-xs-6\">\\n          <input class=\"form-control\"\\n                 name=\"filterPriority\"\\n                 ng-model=\"filter.properties.priority\"\\n                 ng-pattern=\"/^-?[\\\\d]+$/\"\\n                 type=\"text\"\\n                 ng-readonly=\"filter.id && !accesses.update\"\\n                 ng-disabled=\"filter.id && !accesses.update\" />\\n\\n\\n          <span ng-if=\"this.filterGeneralForm.filterPriority.$invalid && this.filterGeneralForm.filterPriority.$dirty\"\\n                class=\"has-error\">\\n            <span ng-show=\"this.filterGeneralForm.filterPriority.$error.pattern\" class=\"help-block\">\\n              {{ \\'REQUIRED_INTEGER_FIELD\\' | translate }}\\n            </span>\\n          </span>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\"row\">\\n    <div class=\"col-xs-8\">\\n    </div>\\n\\n    <div class=\"col-xs-4\">\\n      <label for=\"filter-form-refresh\"\\n             class=\"col-xs-6 control-label\">\\n        {{ \\'FILTER_REFRESH_LABEL\\' | translate }}\\n      </label>\\n\\n      <div class=\"col-xs-6\">\\n        <input class=\"form-control\"\\n               name=\"filterRefresh\"\\n               ng-model=\"filter.properties.refresh\"\\n               type=\"checkbox\"\\n               tooltip-append-to-body=\"false\"\\n               tooltip=\"{{ \\'FILTER_REFRESH_TOOLTIP\\' | translate }}\"\\n               ng-disabled=\"filter.id && !accesses.update\" />\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n';});\n\n","define('scripts/filter/directives/cam-tasklist-filter-modal-form-general',[\n  'angular',\n  'text!./cam-tasklist-filter-modal-form-general.html'\n], function(\n  angular,\n  template\n) {\n  'use strict';\n\n  return [function() {\n\n    return {\n\n      restrict: 'A',\n      require: '^camTasklistFilterModalForm',\n      scope: {\n        filter: '=',\n        accesses: '='\n      },\n\n      template: template,\n\n      link: function ($scope, $element, attrs, parentCtrl) {\n\n        // init //////////////////////////////////////////////////////////\n\n        var _form = $scope.filterGeneralForm;\n\n        var controls = [];\n        controls.push(_form.filterColor);\n        controls.push(_form.filterName);\n        controls.push(_form.filterPriority);\n        controls.push(_form.filterDescription);\n        controls.push(_form.filterRefresh);\n\n        // register hint provider ////////////////////////////////////////\n\n        var showHintProvider = function () {\n          for (var i = 0, control; !!(control = controls[i]); i++) {\n            if (control.$dirty && control.$invalid) {\n              return true;\n            }\n          }\n          return false;\n        };\n\n        parentCtrl.registerHintProvider('filterGeneralForm', showHintProvider);\n      }\n\n    };\n\n  }];\n\n});\n\n","\ndefine('text!scripts/filter/directives/cam-tasklist-filter-modal-form-criteria.html',[],function () { return '<div ng-form class=\"form-horizontal\" name=\"filterCriteriaForm\" role=\"form\">\\n\\n  <div class=\"row labels-left\">\\n    <div class=\"col-xs-2 row-action\" ng-show=\"!filter.id || (filter.id && accesses.update)\">\\n      <a ng-click=\"addCriterion()\"\\n         href>\\n        <span class=\"hidden-sm hidden-xs\">{{ \\'FILTER_ADD_CRITERION\\' | translate }}</span>\\n        <span class=\"glyphicon glyphicon-plus-sign\"></span>\\n      </a>\\n    </div>\\n\\n    <div ng-class=\"{ \\'col-xs-10\\': !filter.id || (filter.id && accesses.update) , \\'col-xs-12\\': !(!filter.id || (filter.id && accesses.update)) }\">\\n      <div class=\"form-group\" ng-show=\"query.length\">\\n        <label class=\"col-xs-6 control-label\"\\n               translate=\"FILTER_CRITERIA_KEY\">Key</label>\\n        <label class=\"col-xs-6 control-label\"\\n               translate=\"FILTER_CRITERIA_VALUE\">Value</label>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div ng-repeat=\"(delta, queryParam) in query\" class=\"row\">\\n\\n    <div ng-form name=\"criteriaFieldForm\">\\n      <div ng-init=\"addForm(this.criteriaFieldForm)\"></div>\\n\\n      <div class=\"col-xs-2 row-action\" ng-show=\"!filter.id || (filter.id && accesses.update)\">\\n        <a ng-click=\"removeCriterion(delta)\"\\n           href>\\n          <span class=\"hidden-sm hidden-xs\">{{ \\'FILTER_REMOVE_CRITERION\\' | translate }}</span>\\n          <span class=\"glyphicon glyphicon-minus-sign\"></span>\\n        </a>\\n      </div>\\n\\n      <div ng-class=\"{ \\'col-xs-10\\': !filter.id || (filter.id && accesses.update) , \\'col-xs-12\\': !(!filter.id || (filter.id && accesses.update)) }\">\\n        <div class=\"form-group\">\\n\\n          <div class=\"col-xs-6\">\\n\\n            <select class=\"form-control\"\\n                    ng-model=\"queryParam.key\"\\n                    name=\"queryParamKey\"\\n                    ng-change=\"valueChanged(queryParam, this.criteriaFieldForm.queryParamValue)\"\\n                    cam-unique-value=\"{{ getQueryParamKeys() }}\"\\n                    required\\n                    ng-disabled=\"filter.id && !accesses.update\">\\n              <optgroup ng-repeat=\"criteriaGroup in criteria\"\\n                        label=\"{{ criteriaGroup.group | translate }}\">\\n\\n                <option ng-repeat=\"criterion in criteriaGroup.options\"\\n                        ng-selected=\"criterion.name === getCriterionName(queryParam.key)\"\\n                        ng-value=\"criterion.name\">\\n\\n                  {{ criterion.label | translate }}\\n                  {{ (criterion.expressionSupport ? \\'*\\' : \\'\\') }}\\n\\n                </option>\\n              </optgroup>\\n\\n            </select>\\n            <div ng-if=\"this.criteriaFieldForm.queryParamKey.$invalid && this.criteriaFieldForm.queryParamKey.$dirty\"\\n                    class=\"has-error\">\\n                <span ng-show=\"this.criteriaFieldForm.queryParamKey.$error.required\" class=\"help-block\">\\n                  {{ \\'REQUIRED_FIELD\\' | translate }}\\n                </span>\\n                <span ng-show=\"this.criteriaFieldForm.queryParamKey.$error.camUniqueValue\" class=\"help-block\">\\n                  {{ \\'REQUIRE_UNIQUE_KEY\\' | translate }}\\n                </span>\\n            </div>\\n          </div>\\n\\n          <div class=\"col-xs-6\">\\n\\n            <div ng-if=\"!booleanCriterion[getCriterionName(queryParam.key)]\">\\n              <input class=\"form-control\"\\n                     name=\"queryParamValue\"\\n                     type=\"text\"\\n                     ng-model=\"queryParam.value\"\\n                     ng-change=\"valueChanged(queryParam, this.criteriaFieldForm.queryParamValue)\"\\n                     required\\n                     ng-readonly=\"filter.id && !accesses.update\"\\n                     ng-disabled=\"filter.id && !accesses.update\" />\\n              <span class=\"help-block text-help\"\\n                    ng-show=\"isCriteriaHelpAvailable(queryParam.key)\">\\n                {{ getCriteriaHelp(queryParam.key) | translate }}\\n              </span>\\n\\n              <div ng-if=\"this.criteriaFieldForm.queryParamValue.$invalid && this.criteriaFieldForm.queryParamValue.$dirty\"\\n                   class=\"has-error\">\\n                <span ng-show=\"this.criteriaFieldForm.queryParamValue.$error.required\"\\n                      class=\"help-block\">\\n                  {{ \\'REQUIRED_FIELD\\' | translate }}\\n                </span>\\n                <span ng-show=\"this.criteriaFieldForm.queryParamValue.$error.number\"\\n                      class=\"help-block\">\\n                  {{ \\'REQUIRED_INTEGER_FIELD\\' | translate }}\\n                </span>\\n                <span ng-show=\"this.criteriaFieldForm.queryParamValue.$error.date\"\\n                      class=\"help-block\">\\n                  {{ \\'INVALID_DATE\\' | translate }}\\n                </span>\\n              </div>\\n            </div>\\n\\n            <div ng-if=\"booleanCriterion[getCriterionName(queryParam.key)]\"\\n                 class=\"form-control-static\">\\n              <span class=\"glyphicon glyphicon-ok\"></span>\\n              <input type=\"hidden\"\\n                     name=\"queryParamValue\"\\n                     ng-model=\"queryParam.value\" />\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div ng-if=\"canIncludeAssignedTasks()\"\\n       class=\"row\">\\n    <div class=\"col-xs-10 col-xs-offset-2 checkbox\">\\n      <label>\\n        <input type=\"checkbox\"\\n               class=\"form-control\"\\n               ng-model=\"filter.includeAssignedTasks\" />\\n        {{ \\'FILTER_CRITERIA_INCLUDE_ASSIGNED_TASKS\\' | translate }}\\n      </label>\\n      <div class=\"help-block\"\\n           translate=\"FILTER_CRITERIA_INCLUDE_ASSIGNED_TASKS_HINT\"></div>\\n    </div>\\n  </div>\\n</div>\\n';});\n\n","define('scripts/filter/directives/cam-tasklist-filter-modal-criteria',[],function() {\n  'use strict';\n\n  var dateExpLangHelp = 'E.g.: `${ now() }`, `${ dateTime() }` or `${ dateTime().plusWeeks(2) }`';\n  var userExpLangHelp = 'E.g.: `${ currentUser() }`';\n  var commaSeparatedExps = 'List of values separated by comma or an expression which evaluates to a list. E.g.: `camunda-admin, accounting` or `${ currentUserGroups() }`';\n  var commaSeparatedValues = 'List of values seperated by comma. E.g.: `keyC, keyA, keyB`';\n\n  // yyyy-MM-dd'T'HH:mm:ss\n  var dateRegex = /^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(|\\.[0-9]{0,4})(|Z)$/;\n  var expressionsRegex = /^[\\s]*(\\#|\\$)\\{/;\n  var numberRegex = /^-?[\\d]+$/;\n\n  function isValid(regex, error, exprSupport) {\n\n    return function (value) {\n\n      if (exprSupport) {\n        if (expressionsRegex.test(value)) {\n          return { valid : true };\n        }\n      }\n\n      if (regex.test(value)) {\n        return { valid : true };\n\n      }\n      else {\n        return {\n          valid : false,\n          error: error || 'format'\n        };\n      }\n    };\n  }\n\n  var criteria = [\n    {\n      group: 'Process Instance',\n      options: [\n        {\n          name: 'processInstanceId',\n          label: 'Id'\n        },\n        {\n          name: 'processInstanceBusinessKey',\n          label: 'Business Key'\n        },\n        {\n          name: 'processInstanceBusinessKeyLike',\n          label: 'Business Key Like'\n        }\n      ]\n    },\n    {\n      group: 'Process definition',\n      options: [\n        {\n          name: 'processDefinitionId',\n          label: 'Id'\n        },\n        {\n          name: 'processDefinitionKey',\n          label: 'Key'\n        },\n        {\n          name: 'processDefinitionKeyIn',\n          label: 'Key In',\n          help: commaSeparatedValues\n        },\n        {\n          name: 'processDefinitionName',\n          label: 'Name'\n        },\n        {\n          name: 'processDefinitionNameLike',\n          label: 'Name Like'\n        }\n      ]\n    },\n    {\n      group: 'Case Instance',\n      options: [\n        {\n          name: 'caseInstanceId',\n          label: 'Id'\n        },\n        {\n          name: 'caseInstanceBusinessKey',\n          label: 'Business Key'\n        },\n        {\n          name: 'caseInstanceBusinessKeyLike',\n          label: 'Business Key Like'\n        }\n      ]\n    },\n    {\n      group: 'Case definition',\n      options: [\n        {\n          name: 'caseDefinitionId',\n          label: 'Id'\n        },\n        {\n          name: 'caseDefinitionKey',\n          label: 'Key'\n        },\n        {\n          name: 'caseDefinitionName',\n          label: 'Name'\n        },\n        {\n          name: 'caseDefinitionNameLike',\n          label: 'Name Like'\n        }\n      ]\n    },\n    {\n      group: 'Other',\n      options: [\n        {\n          name: 'active',\n          label: 'Active',\n          bool: true\n        },\n        {\n          name: 'activityInstanceIdIn',\n          label: 'Activity Instance Id In',\n          help: commaSeparatedValues\n        },\n        {\n          name: 'executionId',\n          label: 'Execution Id'\n        }\n      ]\n    },\n    {\n      group: 'User / Group',\n      options: [\n        {\n          name: 'assignee',\n          label: 'Assignee',\n          expressionSupport: true,\n          help: userExpLangHelp\n        },\n        {\n          name: 'assigneeLike',\n          label: 'Assignee Like',\n          expressionSupport: true,\n          help: userExpLangHelp\n        },\n        {\n          name: 'owner',\n          label: 'Owner',\n          expressionSupport: true,\n          help: userExpLangHelp\n        },\n        {\n          name: 'candidateGroup',\n          label: 'Candidate Group',\n          expressionSupport: true,\n          includeAssignedTasksSupport: true\n        },\n        {\n          name: 'candidateGroups',\n          label: 'Candidate Groups',\n          expressionSupport: true,\n          help: commaSeparatedExps,\n          includeAssignedTasksSupport: true\n        },\n        {\n          name: 'candidateUser',\n          label: 'Candidate User',\n          expressionSupport: true,\n          help: userExpLangHelp,\n          includeAssignedTasksSupport: true\n        },\n        {\n          name: 'involvedUser',\n          label: 'Involved User',\n          expressionSupport: true,\n          help: userExpLangHelp\n        },\n        {\n          name: 'unassigned',\n          label: 'Unassigned',\n          bool: true\n        },\n        {\n          name: 'delegationState',\n          label: 'Delegation State'\n        }\n      ]\n    },\n    {\n      group: 'Task',\n      options: [\n        {\n          name: 'taskDefinitionKey',\n          label: 'Definition Key'\n        },\n        {\n          name: 'taskDefinitionKeyIn',\n          label: 'Definition Key In',\n          help: commaSeparatedValues\n        },\n        {\n          name: 'taskDefinitionKeyLike',\n          label: 'Definition Key Like'\n        },\n        {\n          name: 'name',\n          label: 'Name'\n        },\n        {\n          name: 'nameLike',\n          label: 'Name Like'\n        },\n        {\n          name: 'description',\n          label: 'Description'\n        },\n        {\n          name: 'descriptionLike',\n          label: 'Description Like'\n        },\n        {\n          name: 'priority',\n          label: 'Priority',\n          validate: isValid(numberRegex, 'number')\n        },\n        {\n          name: 'maxPriority',\n          label: 'Priority Max',\n          validate: isValid(numberRegex, 'number')\n        },\n        {\n          name: 'minPriority',\n          label: 'Priority Min',\n          validate: isValid(numberRegex, 'number')\n        }\n      ]\n    },\n    {\n      group: 'Dates',\n      validate: isValid(dateRegex, 'date', true),\n      options: [\n        {\n          name: 'createdBefore',\n          label: 'Created Before',\n          expressionSupport: true,\n          help: dateExpLangHelp\n        },\n        {\n          name: 'createdAfter',\n          label: 'Created After',\n          expressionSupport: true,\n          help: dateExpLangHelp\n        },\n        {\n          name: 'dueBefore',\n          label: 'Due Before',\n          expressionSupport: true,\n          help: dateExpLangHelp\n        },\n        {\n          name: 'dueAfter',\n          label: 'Due After',\n          expressionSupport: true,\n          help: dateExpLangHelp\n        },\n        {\n          name: 'followUpAfter',\n          label: 'Follow Up After',\n          expressionSupport: true,\n          help: dateExpLangHelp\n        },\n        {\n          name: 'followUpBefore',\n          label: 'Follow Up Before',\n          expressionSupport: true,\n          help: dateExpLangHelp\n        },\n        {\n          name: 'followUpBeforeOrNotExistent',\n          label: 'Follow Up Before or Not Existent',\n          expressionSupport: true,\n          help: dateExpLangHelp\n        }\n      ]\n    }\n  ];\n  return criteria.map(function (item) {\n    item.name = item.group.toLowerCase().replace(/[^a-z0-9-]+/g, '-');\n    return item;\n  });\n});\n\n","define('scripts/filter/directives/cam-tasklist-filter-modal-form-criteria',[\n  'angular',\n  'text!./cam-tasklist-filter-modal-form-criteria.html',\n  './cam-tasklist-filter-modal-criteria'\n], function(\n  angular,\n  template,\n  criteria\n) {\n  'use strict';\n\n  var each = angular.forEach;\n  var copy = angular.copy;\n\n  var includeAssignedTasksSupport = {};\n  var booleanCriterion            = {};\n  var criteriaExpressionSupport   = {};\n  var criteriaHelp                = {};\n  var criteriaValidator           = {};\n\n  var defaultValidate = function () {\n    return { valid : true };\n  };\n\n  each(criteria, function(group) {\n    each(group.options, function(criterion) {\n      includeAssignedTasksSupport[criterion.name] = criterion.includeAssignedTasksSupport;\n      if (includeAssignedTasksSupport[criterion.name]) {\n        includeAssignedTasksSupport[criterion.name +'Expression'] = true;\n      }\n\n      if (criterion.bool) {\n        booleanCriterion[criterion.name] = true;\n      }\n\n      criteriaExpressionSupport[criterion.name] = criterion.expressionSupport;\n      criteriaHelp[criterion.name]              = criterion.help      || group.help;\n      criteriaValidator[criterion.name]         = criterion.validate  || group.validate || defaultValidate;\n    });\n  });\n\n  return [function() {\n\n    return {\n\n      restrict: 'A',\n      require: '^camTasklistFilterModalForm',\n      scope: {\n        filter: '=',\n        accesses: '='\n      },\n\n      template: template,\n\n      link: function ($scope, $element, attrs, parentCtrl) {\n\n        var emptyCriterion = {\n          key: '',\n          value: ''\n        };\n\n        $scope.criteria = criteria;\n        $scope.criteriaExpressionSupport = criteriaExpressionSupport;\n        $scope.criteriaHelp = criteriaHelp;\n        $scope.booleanCriterion = booleanCriterion;\n\n        $scope.query = $scope.filter.query = $scope.filter.query || [];\n\n        // a little exception to deal with\n        $scope.query = $scope.filter.query = $scope.query.filter(function (item) {\n          if (item.key === 'includeAssignedTasks') {\n            $scope.includeAssignedTasks = $scope.filter.includeAssignedTasks = item.value;\n          }\n          return item.key !== 'includeAssignedTasks';\n        });\n\n        $scope.canIncludeAssignedTasks = function () {\n          for (var q = 0; q < $scope.query.length; q++) {\n            if (includeAssignedTasksSupport[$scope.query[q].key]) {\n              return true;\n            }\n          }\n          return false;\n        };\n\n        $scope.$watch('query', function () {\n          $scope.includeAssignedTasks = $scope.filter.includeAssignedTasks = (\n            $scope.canIncludeAssignedTasks() &&\n            $scope.filter.includeAssignedTasks\n          );\n        }, true);\n\n        // register handler to show or hide the accordion hint /////////////////\n\n        var showHintProvider = function () {\n          for (var i = 0, nestedForm; !!(nestedForm = nestedForms[i]); i++) {\n            var queryParamKey = nestedForm.queryParamKey;\n            var queryParamValue = nestedForm.queryParamValue;\n\n            if (queryParamKey.$dirty && queryParamKey.$invalid) {\n              return true;\n            }\n\n            if (queryParamValue.$dirty && queryParamValue.$invalid) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n\n        parentCtrl.registerHintProvider('filterCriteriaForm', showHintProvider);\n\n        // handles each nested form//////////////////////////////////////////////\n\n        var nestedForms = [];\n        $scope.addForm = function (_form) {\n          nestedForms.push(_form);\n        };\n\n        // criterion interaction ///////////////////////////////////////////////\n\n        $scope.addCriterion = function() {\n          var _emptyCriteria = copy(emptyCriterion);\n          $scope.query.push(_emptyCriteria);\n        };\n\n        $scope.removeCriterion = function(delta) {\n          $scope.filter.query = $scope.query = parentCtrl.removeArrayItem($scope.query, delta);\n          nestedForms = parentCtrl.removeArrayItem(nestedForms, delta);\n        };\n\n        $scope.valueChanged = function(queryParam, control) {\n          control.$setValidity('number', true);\n          control.$setValidity('date', true);\n\n          if (booleanCriterion[queryParam.key]) {\n            queryParam.value = true;\n          }\n\n          else if (queryParam.value) {\n            if (control.$pristine) {\n              control.$setViewValue(queryParam.value);\n            }\n            var key = getCriterionName(queryParam.key);\n            var validationResult = criteriaValidator[key](queryParam.value);\n\n            if (!validationResult.valid) {\n              control.$setValidity(validationResult.error, false);\n            }\n          }\n        };\n\n        // helper //////////////////////////////////////////////////////////////\n\n        $scope.getQueryParamKeys = function() {\n          var result = [];\n\n          for (var i = 0, entry; !!(entry = $scope.query[i]); i++) {\n            var criterionName = getCriterionName(entry.key);\n            result.push(criterionName);\n\n            if (criteriaExpressionSupport[criterionName]) {\n              result.push(criterionName + 'Expression');\n            }\n          }\n\n          return result;\n        };\n\n        var getCriterionName = $scope.getCriterionName = function(name) {\n          if (!name) { return name; }\n          var simple = name.replace('Expression', '');\n          return simple;\n        };\n\n        var getCriteriaHelp = $scope.getCriteriaHelp = function (key) {\n          key = getCriterionName(key);\n\n          return criteriaHelp[key];\n        };\n\n        $scope.isCriteriaHelpAvailable = function (key) {\n          return !!getCriteriaHelp(key);\n        };\n\n      }\n\n    };\n\n  }];\n\n});\n\n","\ndefine('text!scripts/filter/directives/cam-tasklist-filter-modal-form-variable.html',[],function () { return '<div ng-form class=\"form-horizontal\" name=\"filterVariableForm\" role=\"form\">\\n\\n  <div ng-show=\"variables.length > 5\"\\n       class=\"alert alert-warning\"\\n       role=\"alert\">\\n    <span class=\"glyphicon glyphicon-exclamation-sign\"></span>\\n    {{ \\'FILTER_VARIABLES_AMOUNT_WARNING\\' | translate }}\\n  </div>\\n\\n\\n  <div class=\"row labels-left\">\\n    <div class=\"col-xs-12\">\\n      <div class=\"undefined-variable checkbox\">\\n        <label>\\n          <input type=\"checkbox\"\\n                 class=\"form-control\"\\n                 ng-model=\"filter.properties.showUndefinedVariable\" />\\n          {{ \\'FILTER_FORM_VARIABLES_SHOW_UNDEFINED\\' | translate }}\\n        </label>\\n      </div>\\n    </div>\\n\\n    <div class=\"col-xs-2 row-action\" ng-show=\"!filter.id || (filter.id && accesses.update)\">\\n      <a ng-click=\"addVariable()\"\\n         href>\\n        <span class=\"hidden-sm hidden-xs\">{{ \\'FILTER_ADD_VARIABLE\\' | translate }}</span>\\n        <span class=\"glyphicon glyphicon-plus-sign\"></span>\\n      </a>\\n    </div>\\n\\n    <div ng-class=\"{ \\'col-xs-10\\': !filter.id || (filter.id && accesses.update) , \\'col-xs-12\\': !(!filter.id || (filter.id && accesses.update)) }\">\\n      <div class=\"form-group\" ng-show=\"variables.length\">\\n        <label class=\"col-xs-6 control-label\"\\n               translate=\"FILTER_VARIABLE_NAME\">Name</label>\\n        <label class=\"col-xs-6 control-label\"\\n               translate=\"FILTER_VARIABLE_LABEL\">Label</label>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div ng-repeat=\"(delta, variable) in variables\" class=\"row\">\\n\\n    <div ng-form name=\"variableFieldForm\">\\n      <div ng-init=\"addForm(this.variableFieldForm)\"></div>\\n\\n      <div class=\"col-xs-2 row-action\" ng-show=\"!filter.id || (filter.id && accesses.update)\">\\n        <a ng-click=\"removeVariable(delta)\"\\n           href>\\n          <span class=\"hidden-sm hidden-xs\">{{ \\'FILTER_REMOVE_VARIABLE\\' | translate }}</span>\\n          <span class=\"glyphicon glyphicon-minus-sign\"></span>\\n        </a>\\n      </div>\\n\\n\\n      <div ng-class=\"{ \\'col-xs-10\\': !filter.id || (filter.id && accesses.update) , \\'col-xs-12\\': !(!filter.id || (filter.id && accesses.update)) }\">\\n        <div class=\"form-group\">\\n\\n          <div class=\"col-xs-6\">\\n\\n            <input class=\"form-control\"\\n                   type=\"text\"\\n                   name=\"variableName\"\\n                   ng-model=\"variable.name\"\\n                   placeholder=\"{{ \\'FILTER_VARIABLE_NAME_PLACEHOLDER\\' | translate }}\"\\n                   required\\n                   ng-readonly=\"filter.id && !accesses.update\"\\n                   ng-disabled=\"filter.id && !accesses.update\" />\\n\\n              <div ng-if=\"this.variableFieldForm.variableName.$invalid && this.variableFieldForm.variableName.$dirty\"\\n                    class=\"has-error\">\\n                <span ng-show=\"this.variableFieldForm.variableName.$error.required\" class=\"help-block\">\\n                  {{ \\'REQUIRED_FIELD\\' | translate }}\\n                </span>\\n              </div>\\n\\n          </div>\\n\\n          <div class=\"col-xs-6\">\\n            <input class=\"form-control\"\\n                   type=\"text\"\\n                   name=\"variableLabel\"\\n                   ng-model=\"variable.label\"\\n                   placeholder=\"{{ \\'FILTER_VARIABLE_LABEL_PLACEHOLDER\\' | translate }}\"\\n                   required\\n                   ng-readonly=\"filter.id && !accesses.update\"\\n                   ng-disabled=\"filter.id && !accesses.update\" />\\n              <div ng-if=\"this.variableFieldForm.variableLabel.$invalid && this.variableFieldForm.variableLabel.$dirty\"\\n                    class=\"has-error\">\\n                <span ng-show=\"this.variableFieldForm.variableLabel.$error.required\" class=\"help-block\">\\n                  {{ \\'REQUIRED_FIELD\\' | translate }}\\n                </span>\\n              </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n';});\n\n","define('scripts/filter/directives/cam-tasklist-filter-modal-form-variable',[\n  'text!./cam-tasklist-filter-modal-form-variable.html'\n], function(\n  template\n) {\n  'use strict';\n\n  var copy = angular.copy;\n\n  return [function() {\n\n    return {\n\n      restrict: 'A',\n      require: '^camTasklistFilterModalForm',\n      scope: {\n        filter: '=',\n        accesses: '='\n      },\n\n      template: template,\n\n      link: function ($scope, $element, attrs, parentCtrl) {\n\n        var emptyVariable = {\n          name: '',\n          label: ''\n        };\n\n        $scope.filter.properties.showUndefinedVariable  = $scope.filter.properties.showUndefinedVariable || false;\n        $scope.variables = $scope.filter.properties.variables = $scope.filter.properties.variables || [];\n\n        // register handler to show or hide the accordion hint /////////////////\n\n        var showHintProvider = function () {\n          for (var i = 0, nestedForm; !!(nestedForm = nestedForms[i]); i++) {\n            var variableName = nestedForm.variableName;\n            var variableLabel = nestedForm.variableLabel;\n\n            if (variableName.$dirty && variableName.$invalid) {\n              return true;\n            }\n\n            if (variableLabel.$dirty && variableLabel.$invalid) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n\n        parentCtrl.registerHintProvider('filterVariableForm', showHintProvider);\n\n        // handles each nested form //////////////////////////////////////////////\n\n        var nestedForms = [];\n        $scope.addForm = function (_form) {\n          nestedForms.push(_form);\n        };\n\n        // variables interaction /////////////////////////////////////////////////\n\n        $scope.addVariable = function() {\n          var _emptyVariable = copy(emptyVariable);\n          $scope.variables.push(_emptyVariable);\n        };\n\n        $scope.removeVariable = function(delta) {\n          $scope.filter.properties.variables = $scope.variables = parentCtrl.removeArrayItem($scope.variables, delta);\n          nestedForms = parentCtrl.removeArrayItem(nestedForms, delta);\n        };\n\n      }\n\n    };\n\n  }];\n\n});\n\n","\ndefine('text!scripts/filter/directives/cam-tasklist-filter-modal-form-permission.html',[],function () { return '<div ng-form class=\"form-horizontal\" name=\"filterPermissionForm\" role=\"form\">\\n\\n  <div ng-show=\"!authorizationState.$loaded && !authorizationState.$error\"\\n       class=\"loader\">\\n    <span class=\"animate-spin glyphicon glyphicon-refresh\"></span>\\n    {{ \\'LOADING\\' | translate }}\\n  </div>\\n\\n  <div ng-show=\"authorizationState.$error\" class=\"alert alert-danger\" role=\"alert\">\\n    <span class=\"glyphicon glyphicon-exclamation-sign\"></span>\\n    <strong class=\"status\">{{ \\'FAILURE\\' | translate }}:</strong>\\n    <span class=\"message\">{{ \\'FILTER_FORM_PERMISSIONS_LOADING_FAILURE\\' | translate }}</span>\\n  </div>\\n\\n  <div ng-show=\"authorizationState.$loaded && !authorizationState.$error\">\\n\\n    <div class=\"alert alert-warning\">\\n      <span class=\"glyphicon glyphicon-exclamation-sign\"></span>\\n      <span>{{ \\'FILTER_FORM_PERMISSIONS_EDIT_HINT\\' | translate }}</span>\\n    </div>\\n\\n    <div class=\"global-access checkbox form-control-static\"\\n         ng-show=\"!filter.id || (filter.id && accesses.update)\">\\n      <label>\\n        <input type=\"checkbox\"\\n               class=\"form-control\"\\n               ng-model=\"isGlobalReadAuthorization\"\\n               ng-change=\"globalReadAuthorizationChanged()\"\\n               ng-disabled=\"filter.id && !accesses.update\" />\\n         {{ \\'FILTER_FORM_PERMISSIONS_GLOBAL\\' | translate }}\\n      </label>\\n    </div>\\n\\n    <div class=\"user-read-permissions\"\\n         ng-show=\"(!filter.id || (filter.id && accesses.update)) && !isGlobalReadAuthorization\">\\n      <div class=\"form-group labels-left\">\\n\\n        <div class=\"col-xs-2 align-right\">\\n          <button class=\"btn btn-link\"\\n                  ng-click=\"addReadPermission()\"\\n                  type=\"button\"\\n                  ng-disabled=\"disableAddButton()\">\\n            <span class=\"hidden-sm hidden-xs\">{{ \\'ADD_PERMISSION\\' | translate }}</span>\\n            <span class=\"glyphicon glyphicon-plus-sign\"></span>\\n          </button>\\n        </div>\\n\\n        <label class=\"col-xs-2 control-label\">\\n          {{ \\'FILTER_FORM_PERMISSION_GROUP_USER\\' | translate }}\\n        </label>\\n        <label class=\"col-xs-8 control-label\">\\n          {{ \\'FILTER_FORM_PERMISSION_IDENTIFIER\\' | translate }}\\n        </label>\\n      </div>\\n\\n\\n\\n\\n\\n\\n\\n      <div class=\"form-group\"\\n           ng-repeat=\"auth in getReadAuthorizations(authorizations)\">\\n        <div class=\"col-xs-2 row-action\"\\n             ng-show=\"!filter.id || (filter.id && accesses.update)\">\\n          <button class=\"btn btn-link btn-remove\"\\n                  ng-if=\"!isGlobalReadAuthorization\"\\n                  ng-click=\"removeReadPermission(auth)\">\\n            <span class=\"hidden-sm hidden-xs\">\\n              {{ \\'FILTER_FORM_PERMISSIONS_REMOVE\\' | translate }}\\n            </span>\\n            <span class=\"glyphicon glyphicon-minus-sign\"></span>\\n          </button>\\n        </div>\\n\\n        <div class=\"col-xs-2\">\\n          <span class=\"fake-button\">\\n            <span class=\"glyphicon\"\\n                  ng-class=\"\\'glyphicon-\\' + (!!auth.userId ? \\'user\\' : \\'th\\')\"></span>\\n          </span>\\n        </div>\\n\\n        <div class=\"form-control-static\"\\n             ng-class=\"{ \\'col-xs-8\\': !filter.id || (filter.id && accesses.update) , \\'col-xs-10\\': !(!filter.id || (filter.id && accesses.update)) }\">\\n\\n          {{ (auth.userId || auth.groupId) }}\\n        </div>\\n      </div><!-- repeat auth -->\\n\\n      <div class=\"form-group new-permission\"\\n           ng-if=\"showNewPermissionFields\">\\n        <div class=\"col-xs-2 col-xs-offset-2\">\\n          <button class=\"btn btn-default\"\\n                  type=\"button\"\\n                  tooltip-append-to-body=\"false\"\\n                  tooltip=\"{{ \\'FILTER_FORM_PERMISSIONS_IDENTITY_TYPE_TOOLTIP\\' | translate }}: {{ (newPermission.type === \\'user\\' ? \\'FILTER_FORM_PERMISSIONS_IDENTITY_TYPE_USER\\' : \\'FILTER_FORM_PERMISSIONS_IDENTITY_TYPE_GROUP\\') | translate }}\"\\n                  ng-click=\"switchType()\"\\n                  ng-disabled=\"isGlobalReadAuthorization\">\\n            <span class=\"glyphicon\"\\n                  ng-class=\"newPermission.type === \\'user\\' ? \\'glyphicon-user\\' : \\'glyphicon-th\\'\"></span>\\n          </button>\\n        </div>\\n\\n        <div class=\"col-xs-8\">\\n          <input type=\"text\"\\n                 name=\"newPermission\"\\n                 placeholder=\"{{ (newPermission.type === \\'user\\' ? \\'FILTER_FORM_PERMISSIONS_USER_ID\\' : \\'FILTER_FORM_PERMISSIONS_GROUP_ID\\') | translate }}\"\\n                 class=\"form-control\"\\n                 ng-model=\"newPermission.id\"\\n                 ng-change=\"validateNewPermission()\"\\n                 ng-keydown=\"keyPressed($event)\"\\n                 ng-readonly=\"isGlobalReadAuthorization\"\\n                 ng-disabled=\"filter.id && !accesses.update\" />\\n\\n          <div ng-if=\"this.filterPermissionForm.newPermission.$invalid && this.filterPermissionForm.newPermission.$dirty\"\\n               class=\"has-error\">\\n            <span ng-show=\"this.filterPermissionForm.newPermission.$error.required\"\\n                  class=\"help-block\">\\n              {{ \\'REQUIRED_FIELD\\' | translate }}\\n            </span>\\n            <span ng-show=\"this.filterPermissionForm.newPermission.$error.duplicate && newPermission.type === \\'user\\'\"\\n                  class=\"help-block\">\\n              {{ \\'FILTER_FORM_PERMISSIONS_DUPLICATE_USER\\' | translate }}\\n            </span>\\n            <span ng-show=\"this.filterPermissionForm.newPermission.$error.duplicate && newPermission.type === \\'group\\'\"\\n                  class=\"help-block\">\\n              {{ \\'FILTER_FORM_PERMISSIONS_DUPLICATE_GROUP\\' | translate }}\\n            </span>\\n          </div>\\n        </div>\\n      </div><!-- new perm -->\\n    </div>\\n\\n  </div>\\n\\n</div>\\n';});\n\n","define('scripts/filter/directives/cam-tasklist-filter-modal-form-permission',[\n  'angular',\n  'text!./cam-tasklist-filter-modal-form-permission.html'\n], function(\n  angular,\n  template\n) {\n  'use strict';\n\n  var copy = angular.copy;\n\n  var RESOURCE_TYPE = 5;\n\n  return [\n    'camAPI',\n    '$q',\n  function(\n    camAPI,\n    $q\n  ) {\n\n    return {\n\n      restrict: 'A',\n      require: '^camTasklistFilterModalForm',\n      scope: {\n        filter: '=',\n        accesses: '=',\n        filterModalFormData: '=',\n        isOpen: '='\n      },\n\n      template: template,\n\n      link: function ($scope, $element, attrs, parentCtrl) {\n        // by default, the fields for new permission are not shown\n        $scope.showNewPermissionFields = false;\n\n        // if the fields of a new permission are filled and\n        // the \"permission\" accordion part is being closed\n        // this will add the permission\n        // (like if the \"add\" button had been clicked)\n        $scope.$watch('isOpen', function (actual, previous) {\n          if (!$scope.disableAddButton() && !actual && previous) {\n            $scope.addReadPermission();\n          }\n          // hides the new permission fields again\n          $scope.showNewPermissionFields = false;\n        });\n\n        $scope.$on('pre-submit', function () {\n          if (!$scope.disableAddButton()) {\n            $scope.addReadPermission();\n          }\n          // hides the new permission fields again\n          $scope.showNewPermissionFields = false;\n        });\n\n        // init //////////////////////////////////////////////////////////////////////////////\n\n        var Authorization = camAPI.resource('authorization');\n\n        var filterAuthorizationData = $scope.filterModalFormData.newChild($scope);\n\n        var _form = $scope.filterPermissionForm;\n\n        var authorizations = null;\n        var globalAuthorization = null;\n        var groupAuthorizationMap = null;\n        var userAuthorizationMap = null;\n\n        var NEW_DEFAULT_AUTHORIZATION = {\n          resourceType: RESOURCE_TYPE,\n          permissions: [ 'READ' ]\n        };\n\n        var NEW_PERMISSION = {\n          type: 'user',\n          id: null\n        };\n\n        var newPermission = $scope.newPermission = copy(NEW_PERMISSION);\n\n        // register handler to show or hide the accordion hint /////////////////\n\n        var showHintProvider = function () {\n          var control = getNewPermissionField();\n\n          return control && control.$error && control.$error.duplicate;\n        };\n\n        parentCtrl.registerHintProvider('filterPermissionForm', showHintProvider);\n\n        // provide ////////////////////////////////////////////////////////////////////////\n\n        filterAuthorizationData.provide('authorizations', ['filter', function (filter) {\n          var deferred = $q.defer();\n\n          if(!filter || !filter.id) {\n            // no filter\n            deferred.resolve([]);\n\n          }\n          else {\n\n            Authorization.list({\n              resourceType: RESOURCE_TYPE,\n              resourceId: filter.id\n            }, function (err, resp) {\n\n              if(!!err) {\n                deferred.reject(err);\n              }\n              else {\n                deferred.resolve(resp);\n              }\n\n            });\n          }\n\n          return deferred.promise;\n\n        }]);\n\n        // observe ////////////////////////////////////////////////////////////////////////\n\n        $scope.authorizationState = filterAuthorizationData.observe('authorizations', function(_authorizations) {\n          authorizations = $scope.authorizations = copy(_authorizations) || [];\n          initializeAuthorizations(authorizations);\n\n          globalAuthorization = getGlobalAuthorization(authorizations);\n          $scope.isGlobalReadAuthorization = hasReadPermission(globalAuthorization);\n\n          groupAuthorizationMap = getAuthorziationMap(authorizations, 'groupId');\n          userAuthorizationMap = getAuthorziationMap(authorizations, 'userId');\n        });\n\n        // handle global read permission ////////////////////////////////////////////////////\n\n        $scope.globalReadAuthorizationChanged = function () {\n          if ($scope.isGlobalReadAuthorization) {\n\n            if (!globalAuthorization) {\n              globalAuthorization = angular.extend({ userId: '*', type: 0 }, NEW_DEFAULT_AUTHORIZATION);\n              authorizations.push(globalAuthorization);\n            } else {\n              addReadPermissionToAuthorization(globalAuthorization);\n            }\n\n            newPermission.id = null;\n            validateNewPermission();\n          }\n          else {\n\n            if (globalAuthorization) {\n              removeReadPermissionFromAuthorization(globalAuthorization);\n            }\n          }\n        };\n\n        // handle new permission ////////////////////////////////////////////////////////////\n\n        $scope.switchType = function () {\n          newPermission.type = newPermission.type === 'user' ? 'group' : 'user';\n          validateNewPermission();\n        };\n\n        $scope.getReadAuthorizations = function (authorizations) {\n          if (authorizations) {\n            return getAuthorizationsWithReadPermissions(authorizations);\n          }\n        };\n\n        var validateNewPermission = $scope.validateNewPermission = function () {\n          var control = getNewPermissionField();\n          // new permission fields might not be present when this function is called\n          if (!control) { return; }\n\n          control.$setValidity('authorization', true);\n          control.$setValidity('duplicate', true);\n\n          var id = newPermission.id;\n\n          if (id) {\n            var auths = newPermission.type === 'user' ? userAuthorizationMap : groupAuthorizationMap;\n            var auth = auths[id];\n\n            if (auth && hasReadPermission(auth)) {\n              return control.$setValidity('duplicate', false);\n            }\n\n          }\n        };\n\n        $scope.disableAddButton = function () {\n          // when the new permission fields are not yet present,\n          // the \"Add permis.\" is aimed to make them visible\n          // (see addReadPermission below)\n          if (!$scope.showNewPermissionFields) { return false; }\n\n          var control = getNewPermissionField();\n\n          return $scope.isGlobalReadAuthorization || !newPermission.id || (control && control.$error && control.$error.duplicate);\n        };\n\n\n        var addReadPermission = $scope.addReadPermission = function () {\n          // the first click only adds the fields\n          if (!$scope.showNewPermissionFields) {\n            $scope.showNewPermissionFields = true;\n            return;\n          }\n\n          var control = getNewPermissionField();\n\n          var id = newPermission.id;\n\n          var auths = newPermission.type === 'user' ? userAuthorizationMap : groupAuthorizationMap;\n          var auth = auths[id];\n\n          if (auth) {\n            addReadPermissionToAuthorization(auth);\n\n            var _authorizations = authorizations;\n            authorizations = $scope.authorizations = [];\n\n            for (var i = 0, _auth; !!(_auth = _authorizations[i]); i++) {\n              if (_auth !== auth) {\n                authorizations.push(_auth);\n              }\n            }\n\n            authorizations.push(auth);\n          }\n          else {\n            auth = { type : 1 };\n            var prop = newPermission.type === 'user' ? 'userId' : 'groupId';\n            auth[prop] = id;\n\n            angular.extend(auth, NEW_DEFAULT_AUTHORIZATION);\n            authorizations.push(auth);\n            auths[id] = auth;\n          }\n\n          newPermission.id = null;\n\n          control.$setValidity('authorization', true);\n          control.$setPristine();\n        };\n\n        $scope.keyPressed = function ($event) {\n          var keyCode = $event.keyCode;\n\n          if (keyCode === 13) {\n\n            if ($event.preventDefault) {\n              // prevent executing switchType()\n              $event.preventDefault();\n            }\n\n            var control = getNewPermissionField();\n\n            return newPermission.id && control && (!control.$error || !control.$error.duplicate) && addReadPermission();\n          }\n        };\n\n        // remove read permission ///////////////////////////////////////////////////////////\n\n        $scope.removeReadPermission = function (auth) {\n          removeReadPermissionFromAuthorization(auth);\n          validateNewPermission();\n        };\n\n        // submit authorizations //////////////////////////////////////////////////////////\n\n        var errors = [];\n\n        var submitAuthorizations = function (filter, callback) {\n          var actions = [];\n          errors = [];\n\n          if ($scope.isGlobalReadAuthorization) {\n\n            for (var k = 0, auth; !!(auth = authorizations[k]); k++) {\n\n              if (isGrantAuthorization(auth) && hasReadPermission(auth)) {\n                // remove read permission so that the corresponding\n                // authorizations will be updated or deleted\n                removeReadPermissionFromAuthorization(auth);\n              }\n            }\n          }\n\n          for (var i = 0, authorization; !!(authorization = authorizations[i]); i++) {\n            var permissions = authorization.permissions;\n            var $permissions = authorization.$permissions;\n\n            if (isGrantAuthorization(authorization) || isGlobalAuthorization(authorization)) {\n\n              if (authorization.id) {\n\n                // array of permissions is empty -> delete authorization\n                if (!permissions.length && $permissions.length) {\n                  // delete\n                  actions.push({\n                    type: 'delete',\n                    authorization: authorization\n                  });\n                }\n                else {\n\n                  // permissions changed -> update authorization\n                  if (permissions.length !== $permissions.length) {\n                    // update\n                    actions.push({\n                      type: 'update',\n                      authorization: authorization\n                    });\n                  }\n                }\n              }\n              else {\n\n                // authorization.id is null and at least one permission\n                // has been added -> create authorization\n                if (permissions.length) {\n                  // create\n                  actions.push({\n                    type: 'create',\n                    authorization: authorization\n                  });\n                }\n              }\n            }\n          }\n\n          performSubmit(actions, filter).then(function () {\n            if (!errors || !errors.length) {\n              errors = null;\n            }\n\n            if (typeof callback === 'function') {\n              return callback(errors);\n            }\n\n          });\n\n        };\n\n        function performSubmit(actions, filter) {\n          var deferred = $q.defer();\n\n          actions = actions || [];\n          var count = actions.length;\n\n          function submitAction(type, authorization) {\n\n            var $permissions = authorization.$permissions;\n\n            delete authorization.$permissions;\n            delete authorization.$$hashKey;\n\n            authorization.resourceId = authorization.resourceId || filter.id;\n\n            var callback = function (err, resp) {\n              count = count - 1;\n\n              if (!err) {\n\n                if (type === 'create') {\n                  authorization.id = resp.id;\n                  authorization.permissions = copy(resp.permissions ||[]);\n                  authorization.$permissions = copy(resp.permissions || []);\n                }\n                else {\n                  if (type === 'delete') {\n                    authorization.id = null;\n                  }\n\n                  authorization.permissions = copy(authorization.permissions || []);\n                  authorization.$permissions = copy(authorization.permissions || []);\n                }\n              }\n              else {\n                errors.push({\n                  status: 'FILTER_FORM_PERMISSIONS_SAVE_ERROR',\n                  error: err\n                });\n\n                // set $permissions again\n                authorization.$permissions = $permissions;\n              }\n\n              if (count === 0) {\n                deferred.resolve();\n              }\n\n            };\n\n            if (type === 'create') {\n              Authorization.create(authorization, callback);\n            }\n            else if (type === 'update') {\n              Authorization.update(authorization, callback);\n            }\n            else if (type === 'delete') {\n              Authorization.delete(authorization.id, callback);\n            }\n          }\n\n          if (count === 0) {\n            deferred.resolve();\n          }\n\n          for (var i = 0, action; !!(action = actions[i]); i++) {\n            var type = action.type;\n            // do not create a copy of authorization, if there is a\n            // failure during submitting the authorizations, the dialog\n            // stays open and the user could try to save the dialog once\n            // again\n            var authorization = action.authorization;\n\n            submitAction(type, authorization);\n          }\n\n          return deferred.promise;\n        }\n\n        parentCtrl.registerPostFilterSavedProvider(submitAuthorizations);\n\n        // helper /////////////////////////////////////////////////////////////////////////\n\n        function initializeAuthorizations (authorizations) {\n          for (var i = 0, authorization; !!(authorization = authorizations[i]); i++) {\n            // save the original permissions\n            authorization.$permissions = copy(authorization.permissions || []);\n          }\n        }\n\n        function getNewPermissionField () {\n          return _form.newPermission;\n        }\n\n        function isGlobalAuthorization (authorization) {\n          return authorization && authorization.type === 0;\n        }\n\n        function isGrantAuthorization (authorization) {\n          return authorization && authorization.type === 1;\n        }\n\n        function isGlobalUserOrGroupId (authorization) {\n          authorization = authorization || {};\n          var id = authorization.userId || authorization.groupId;\n          return id === '*';\n        }\n\n        function hasProperty (authorization, prop) {\n          return !!authorization[prop];\n        }\n\n        function hasReadPermission(authorization) {\n          if (authorization && authorization.permissions) {\n            var permissions = authorization.permissions;\n            for (var i = 0, perm; !!(perm = permissions[i]); i++) {\n              if (perm === 'READ' || perm === 'ALL') {\n                return true;\n              }\n            }\n          }\n          return false;\n        }\n\n        function getGlobalAuthorization(authorizations) {\n          for (var i = 0, authorization; !!(authorization = authorizations[i]); i++) {\n            if (isGlobalAuthorization(authorization)) {\n              return authorization;\n            }\n          }\n        }\n\n        function getAuthorizationsWithReadPermissions(authorizations) {\n          var result = [];\n\n          for (var i = 0, authorization; !!(authorization = authorizations[i]); i++) {\n\n            if (isGrantAuthorization(authorization)) {\n\n              if (!isGlobalUserOrGroupId(authorization) && hasReadPermission(authorization)) {\n                result.push(authorization);\n              }\n\n            }\n          }\n\n          return result;\n        }\n\n        function getAuthorziationMap(authorizations, criteria) {\n          var _authorizations = getAuthorziations(authorizations, criteria);\n          var obj = {};\n\n          for (var i = 0, authorization; !!(authorization = _authorizations[i]); i++) {\n            var _criteria = authorization[criteria];\n            obj[_criteria] = authorization;\n          }\n\n          return obj;\n        }\n\n        function getAuthorziations(authorizations, criteria) {\n          var result = [];\n\n          for (var i = 0, authorization; !!(authorization = authorizations[i]); i++) {\n\n            if (isGrantAuthorization(authorization)) {\n\n              if (hasProperty(authorization, criteria) && !isGlobalUserOrGroupId(authorization)) {\n                result.push(authorization);\n              }\n\n            }\n\n          }\n\n          return result;\n        }\n\n        function addReadPermissionToAuthorization(authorization) {\n          if (authorization) {\n            var permissions = authorization.permissions;\n\n            if (!permissions || !permissions.length) {\n              authorization.permissions = [ 'READ' ];\n            }\n\n            else if (permissions && permissions.length === 1) {\n              authorization.permissions = authorization.permissions.concat([ 'READ' ]);\n            }\n\n            else {\n              authorization.permissions = [ 'ALL' ];\n            }\n          }\n        }\n\n        function removeReadPermissionFromAuthorization(authorization) {\n          if (authorization) {\n            var permissions = authorization.permissions;\n\n            if (permissions && permissions.length === 1) {\n              var permission = permissions[0];\n\n              if (permission === 'ALL') {\n                authorization.permissions = [ 'UPDATE', 'DELETE' ];\n              }\n              else if (permission === 'READ') {\n                authorization.permissions = [];\n              }\n            }\n            else {\n\n              authorization.permissions = [];\n\n              for (var i = 0, perm; !!(perm = permissions[i]); i++) {\n                if (perm !== 'READ') {\n                  authorization.permissions.push(perm);\n                }\n              }\n\n            }\n          }\n        }\n\n      }\n    };\n\n  }];\n\n});\n\n","\ndefine('text!scripts/filter/modals/cam-tasklist-filter-modal.html',[],function () { return '<div class=\"modal-header\">\\n  <h3 class=\"modal-title\">\\n    {{ (\\n      filter.id && !deletion ?\\n      (accesses.update ? \\'FILTER_EDIT\\' : \\'FILTER_DETAILS\\') :\\n      (deletion ? \\'FILTER_DELETE\\' : \\'FILTER_CREATE\\')\\n    ) | translate }}\\n  </h3>\\n</div>\\n\\n\\n\\n<div class=\"modal-body\">\\n\\n  <div notifications-panel />\\n\\n  <div ng-show=\"!deletion\"\\n       cam-tasklist-filter-modal-form\\n       filter=\"filter\"\\n       filter-modal-data=\"filterModalData\"\\n       register-is-valid-provider=\"registerValidationProvider\"\\n       register-post-filter-saved-provider=\"registerPostFilterSavedProvider\">\\n  </div>\\n\\n  <div ng-show=\"deletion\"\\n       class=\"alert alert-warning\"\\n       role=\"alert\">\\n    <span class=\"glyphicon glyphicon-exclamation-sign\"></span>\\n    {{ \\'FILTER_DELETION_WARNING\\' | translate }}\\n  </div>\\n\\n</div>\\n\\n\\n<div class=\"modal-footer\">\\n\\n  <div class=\"row row-action\">\\n\\n    <div class=\"col-xs-4 align-left\">\\n\\n      <button ng-show=\"!deletion && filter.id && accesses.delete\"\\n              class=\"btn btn-xs btn-link\"\\n              type=\"button\"\\n              ng-click=\"confirmDeletion()\"\\n              translate=\"FILTER_DELETE\">Delete filter</button>\\n\\n\\n      <button ng-show=\"deletion\"\\n              class=\"btn btn-xs btn-link\"\\n              type=\"button\"\\n              ng-click=\"abortDeletion()\"\\n              translate=\"FILTER_EDIT\">Edit filter</button>\\n    </div>\\n\\n    <div class=\"col-xs-8\">\\n      <div class=\"row\">\\n        <div class=\"col-xs-12\">\\n\\n          <button class=\"btn btn-xs btn-link\"\\n                  type=\"button\"\\n                  ng-click=\"$dismiss()\"\\n                  translate=\"CLOSE\">Close</button>\\n\\n          <button ng-if=\"!deletion && (!filter.id || (filter.id && accesses.update))\"\\n                  class=\"btn btn-primary\"\\n                  type=\"submit\"\\n                  ng-disabled=\"!isValid()\"\\n                  ng-click=\"submit()\"\\n                  translate=\"SAVE\">Save</button>\\n\\n\\n          <button ng-if=\"deletion\"\\n                  class=\"btn btn-primary\"\\n                  type=\"submit\"\\n                  ng-click=\"delete()\"\\n                  translate=\"DELETE\">Delete</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n';});\n\n","define('scripts/filter/controllers/cam-tasklist-filters-ctrl',[\n  'text!./../modals/cam-tasklist-filter-modal.html'\n], function(\n  template\n) {\n  'use strict';\n\n  return [\n    '$scope',\n    '$modal',\n    '$q',\n    'camAPI',\n  function(\n    $scope,\n    $modal,\n    $q,\n    camAPI\n  ) {\n\n    var filtersData = $scope.filtersData = $scope.tasklistData.newChild($scope);\n\n    var Filter = camAPI.resource('filter');\n\n    $scope.userCanCreateFilter = false;\n\n    // provide /////////////////////////////////////////////////////////////////////////////////\n\n    filtersData.provide('filterAuthorizations', function() {\n      var deferred = $q.defer();\n\n      Filter.authorizations(function(err, res) {\n        if(err) {\n          deferred.reject(err);\n        }\n        else {\n          deferred.resolve(res);\n        }\n\n      });\n\n      return deferred.promise;\n\n    });\n\n    filtersData.provide('userCanCreateFilter', ['filterAuthorizations', function(filterAuthorizations) {\n      filterAuthorizations = filterAuthorizations || {};\n      var links = filterAuthorizations.links || [];\n\n      for (var i = 0, link; !!(link = links[i]); i++) {\n        if (link.rel === 'create') {\n          return true;\n        }\n      }\n\n      return false;\n\n    }]);\n\n    // observe ////////////////////////////////////////////////////////////////////////////////\n\n    filtersData.observe('userCanCreateFilter', function(userCanCreateFilter) {\n      $scope.userCanCreateFilter = userCanCreateFilter;\n    });\n\n    // open modal /////////////////////////////////////////////////////////////////////////////\n\n    $scope.openModal = function ($event, filter) {\n      $event.stopPropagation();\n\n      $modal.open({\n        windowClass: 'filter-modal',\n        size: 'lg',\n        controller: 'camFilterModalCtrl',\n        template: template,\n        resolve: {\n          'filter': function() { return filter; },\n          'filtersData': function() { return filtersData; }\n        }\n\n      }).result.then(function() {\n        filtersData.changed('filters');\n      }, function () {\n        filtersData.changed('filters');\n      });\n\n    };\n\n  }];\n\n});\n\n","define('scripts/filter/modals/cam-tasklist-filter-modal',[\n  'angular'\n], function(\n  angular\n) {\n  'use strict';\n\n  var copy = angular.copy;\n  var each = angular.forEach;\n  var isArray = angular.isArray;\n  var isObject = angular.isObject;\n\n  var RESOURCE_TYPE = 'Task';\n  var DEFAULT_COLOR = '#EEEEEE';\n\n  var likeExp = /Like$/;\n  function fixLike(key, value) {\n    if (likeExp.test(key)) {\n\n      if (value[0] !== '%') {\n        value = '%' + value;\n      }\n\n      var length = value.length - 1;\n      if (value[length] !== '%') {\n        value = value + '%';\n      }\n\n    }\n    return value;\n  }\n\n  function unfixLike(key, value) {\n    if (likeExp.test(key)) {\n      if (value[0] === '%') {\n        value = value.slice(1, value.length);\n      }\n\n      if (value.slice(-1) === '%') {\n        value = value.slice(0, -1);\n      }\n    }\n    return value;\n  }\n\n  var varExp = /Variables$/;\n  function isQueryVariable(key) {\n    return varExp.test(key);\n  }\n\n  var expressionsExp = /^[\\s]*(\\#|\\$)\\{/;\n  function isExpression(value) {\n    return expressionsExp.test(value);\n  }\n\n  function cleanJson(obj) {\n    each(Object.keys(obj), function(key) {\n      // property with name starting with \"$\" or empty arrays are removed\n      if (key[0] === '$' || (isArray(obj[key]) && !obj[key].length)) {\n        delete obj[key];\n      }\n      else if (isObject(obj[key]) || isArray(obj[key])) {\n        obj[key] = cleanJson(obj[key]);\n      }\n    });\n    return obj;\n  }\n\n  return [\n    '$scope',\n    '$translate',\n    '$q',\n    'Notifications',\n    'camAPI',\n    'filter',\n    'filtersData',\n  function(\n    $scope,\n    $translate,\n    $q,\n    Notifications,\n    camAPI,\n    filter,\n    filtersData\n  ) {\n\n    var Filter = camAPI.resource('filter');\n\n    var filterModalData = $scope.filterModalData = filtersData.newChild($scope);\n\n    $scope.$on('$locationChangeStart', function() {\n      $scope.$dismiss();\n    });\n\n    $scope.deletion = false;\n\n    // init ////////////////////////////////////////////////////////////////////////\n\n    // initialize filter\n    $scope.filter =                        copy(filter || {});\n\n    // initialize filter name\n    $scope.filter.name =                   $scope.filter.name;\n\n    // initialize filter properties\n    $scope.filter.properties =             $scope.filter.properties || {};\n\n    $scope.filter.properties.description = $scope.filter.properties.description;\n    $scope.filter.properties.priority =    parseInt($scope.filter.properties.priority || 0, 10);\n    $scope.filter.properties.color =       $scope.filter.properties.color || DEFAULT_COLOR;\n    $scope.filter.properties.refresh =     $scope.filter.properties.refresh || false;\n    $scope.filter.properties.showUndefinedVariable = $scope.filter.properties.showUndefinedVariable || false;\n\n    var filterId =                         $scope.filter.id;\n\n    // initialize variables\n    $scope.filter.properties.variables =   $scope.filter.properties.variables || [];\n\n    // initialize filter query\n    var _query = $scope.filter.query =     $scope.filter.query || {};\n\n     // transform filter query object into an array\n    var query = [];\n    var queryVariables = [];\n\n    for (var key in _query) {\n      var value = _query[key];\n\n      if (!isQueryVariable(key)) {\n        query.push({\n          key: key,\n          value: unfixLike(key, value)\n        });\n      }\n      else {\n        queryVariables.push({\n          key: key,\n          value: value\n        });\n      }\n    }\n\n    $scope.filter.query = query;\n\n    // provide data ///////////////////////////////////////////////////////////////\n\n    filterModalData.provide('filter', $scope.filter);\n\n    filterModalData.provide('userFilterAccess', ['filter', function (filter) {\n      var deferred = $q.defer();\n\n      if(!filter || !filter.id) {\n        // no filter\n        deferred.resolve({\n          links: []\n        });\n\n      }\n      else {\n        Filter.authorizations(filter.id, function(err, resp) {\n\n          if(!!err) {\n            deferred.reject(err);\n          }\n          else {\n            deferred.resolve(resp);\n          }\n\n        });\n      }\n\n      return deferred.promise;\n\n    }]);\n\n    filterModalData.provide('accesses', ['userFilterAccess', function (access) {\n      var accesses = {};\n      each(access.links, function(link) {\n        accesses[link.rel] = true;\n      });\n      return accesses;\n    }]);\n\n    // observe date //////////////////////////////////////////////////////////\n\n    filterModalData.observe('accesses', function(accesses) {\n      $scope.accesses = accesses;\n    });\n\n    // provider ////////////////////////////////////\n\n    var defaultValidationProvider = function () {\n      return false;\n    };\n\n    $scope.isValid = defaultValidationProvider;\n\n    $scope.registerValidationProvider = function (fn) {\n      $scope.isValid = fn || defaultValidationProvider;\n    };\n\n    var postFilterSavedProvider = function (filter, callback) {\n      return callback();\n    };\n\n    $scope.registerPostFilterSavedProvider = function (fn) {\n      postFilterSavedProvider = fn || postFilterSavedProvider;\n    };\n\n    // submit /////////////////////////////////////\n\n    function errorNotification(src, err, exclusive) {\n      $translate(src).then(function(translated) {\n        Notifications.addError({\n          status: translated,\n          message: (err ? err.message : ''),\n          exclusive: exclusive,\n          scope: $scope\n        });\n      });\n    }\n\n    $scope.submit = function() {\n      $scope.$broadcast('pre-submit');\n\n      // transform query array into a query object\n      var _queryArray = ($scope.filter.query || []).concat(queryVariables);\n      var _queryObj = {};\n\n      for (var i = 0, elem; !!(elem = _queryArray[i]); i++) {\n\n        var key = elem.key;\n        var value = elem.value;\n\n        if (!isQueryVariable(key)) {\n\n          // if key == '...Like' -> value = '%' + value + '%'\n          value = fixLike(key, value);\n\n          if (isExpression(value)) {\n\n            if(key.indexOf('Expression') === -1) {\n              key = key +'Expression';\n            }\n\n          } else {\n            if(key.indexOf('Expression') !== -1) {\n              key = key.slice(0, key.indexOf('Expression'));\n            }\n          }\n\n          // for \"in\" criterion, the values are passed as coma separated list\n          if ((key === 'candidateGroups' || key.slice(-2) === 'In')) {\n            if( typeof value === 'string') {\n              value = value.split(',');\n              for (var v = 0; v < value.length; v++) {\n                if (value[v]) {\n                  value[v] = value[v].trim();\n                }\n              }\n            }\n          } else {\n            value = ''+value;\n          }\n        }\n\n        _queryObj[key] = value;\n      }\n\n      if ($scope.filter.includeAssignedTasks) {\n        _queryObj.includeAssignedTasks = true;\n      }\n\n      var toSave = {\n        id:           filterId,\n        name:         $scope.filter.name,\n        resourceType: RESOURCE_TYPE,\n        query:        _queryObj,\n        properties:   {\n          description:  $scope.filter.properties.description,\n          priority:     parseInt($scope.filter.properties.priority || 0, 10),\n          color:        $scope.filter.properties.color || DEFAULT_COLOR,\n          refresh:      $scope.filter.properties.refresh,\n          variables:    $scope.filter.properties.variables,\n          showUndefinedVariable: $scope.filter.properties.showUndefinedVariable\n        }\n      };\n\n      cleanJson(toSave);\n\n      Filter.save(toSave, function(err, filterResponse) {\n        if (err) {\n          return errorNotification('FILTER_SAVE_ERROR', err, true);\n        }\n\n        toSave.id = filterId = filterId || filterResponse.id;\n\n        postFilterSavedProvider(toSave, function (err) {\n\n          if (err) {\n            if (isArray(err) && err.length) {\n              for (var i = 0, error; !!(error = err[i]); i++) {\n                errorNotification(error.status, error.error, i === 0);\n              }\n            }\n            else {\n              errorNotification(err.status, err.error, true);\n            }\n            return;\n          }\n\n          $scope.$close();\n\n        });\n\n      });\n    };\n\n    // deletion ////////////////////////////////////////////////////////////////////\n\n    $scope.abortDeletion = function() {\n      $scope.deletion = false;\n    };\n\n    $scope.confirmDeletion = function() {\n      $scope.deletion = true;\n    };\n\n    $scope.delete = function() {\n      Filter.delete($scope.filter.id, function(err) {\n        if (err) {\n          return errorNotification('FILTER_DELETION_ERROR', err, true);\n        }\n\n        $scope.$close();\n\n      });\n    };\n\n  }];\n\n});\n\n","/**\n * @module  cam.tasklist.filter\n * @belongsto cam.tasklist\n *\n * Filters are predefined filters for tasks.\n */\n\n\n\ndefine('scripts/filter/index',[\n  'angular',\n\n  /* directives */\n  './directives/cam-tasklist-filters',\n  './directives/cam-tasklist-filter-modal-form',\n  './directives/cam-tasklist-filter-modal-form-general',\n  './directives/cam-tasklist-filter-modal-form-criteria',\n  './directives/cam-tasklist-filter-modal-form-variable',\n  './directives/cam-tasklist-filter-modal-form-permission',\n\n  /* controllers */\n  './controllers/cam-tasklist-filters-ctrl',\n\n  /* modals */\n  './modals/cam-tasklist-filter-modal',\n\n], function(\n  angular,\n\n  /* directives */\n  camTasklistFilters,\n  camTasklistFilterModalForm,\n  camTasklistFilterModalFormGeneral,\n  camTasklistFilterModalFormCriteria,\n  camTasklistFilterModalFormVariable,\n  camTasklistFilterModalFormPermission,\n\n  /* controllers */\n  camTasklistFiltersCtrl,\n\n  /* modals */\n  camTasklistFilterModal\n) {\n  'use strict';\n\n  var filterModule = angular.module('cam.tasklist.filter', [\n    'ui.bootstrap',\n  ]);\n\n  /* directives */\n  filterModule.directive('camTasklistFilters', camTasklistFilters);\n  filterModule.directive('camTasklistFilterModalForm', camTasklistFilterModalForm);\n  filterModule.directive('camTasklistFilterModalFormGeneral', camTasklistFilterModalFormGeneral);\n  filterModule.directive('camTasklistFilterModalFormCriteria', camTasklistFilterModalFormCriteria);\n  filterModule.directive('camTasklistFilterModalFormVariable', camTasklistFilterModalFormVariable);\n  filterModule.directive('camTasklistFilterModalFormPermission', camTasklistFilterModalFormPermission);\n\n  /* controllers */\n  filterModule.controller('camFiltersCtrl', camTasklistFiltersCtrl);\n\n\n  /* modals */\n  filterModule.controller('camFilterModalCtrl', camTasklistFilterModal);\n\n  return filterModule;\n});\n\n","define('camunda-tasklist-ui', [\n  'camunda-commons-ui',\n  'camunda-bpm-sdk-js',\n  'angular-data-depend',\n\n  'scripts/config/date',\n  'scripts/config/routes',\n  'scripts/config/locales',\n  'scripts/config/tooltip',\n  'scripts/config/uris',\n\n  'scripts/controller/cam-tasklist-app-ctrl',\n  'scripts/controller/cam-tasklist-view-ctrl',\n  'scripts/services/cam-tasklist-assign-notification',\n  'scripts/services/cam-tasklist-configuration',\n\n  'scripts/user/index',\n  'scripts/variable/index',\n  'scripts/tasklist/index',\n  'scripts/task/index',\n  'scripts/process/index',\n  'scripts/navigation/index',\n  'scripts/form/index',\n  'scripts/filter/index',\n  'scripts/api/index',\n\n  'text!scripts/index.html'\n], function() {\n  'use strict';\n  /**\n   * @namespace cam\n   */\n\n  /**\n   * @module cam.tasklist\n   */\n\n\n  var pluginPackages = window.PLUGIN_PACKAGES || [];\n  var pluginDependencies = window.PLUGIN_DEPENDENCIES || [];\n\n  require.config({\n    packages: pluginPackages\n  });\n\n  var tasklistApp;\n\n  var deps = [\n    'camunda-commons-ui'\n  ].concat(pluginDependencies.map(function(plugin) {\n    return plugin.requirePackageName;\n  }));\n\n\n  function bootstrapApp() {\n    var angular = require('angular');\n    var $ = angular.element;\n\n    $(document).ready(function() {\n      angular.bootstrap(document, [\n        'cam.tasklist',\n        'cam.embedded.forms',\n        'cam.tasklist.custom'\n      ]);\n\n      setTimeout(function() {\n        var $aufocused = $('[autofocus]');\n        if ($aufocused.length) {\n          $aufocused[0].focus();\n        }\n      }, 300);\n    });\n  }\n\n\n  function loaded() {\n    var angular = require('angular');\n\n    function parseUriConfig() {\n      var $baseTag = angular.element('base');\n      var config = {};\n      var names = ['href', 'app-root', 'admin-api', 'tasklist-api', 'engine-api'];\n      for(var i = 0; i < names.length; i++) {\n        config[names[i]] = $baseTag.attr(names[i]);\n      }\n      return config;\n    }\n\n    var ngDeps = [\n      'cam.commons',\n      'pascalprecht.translate',\n      'ngRoute',\n      'dataDepend',\n      require('scripts/user/index').name,\n      require('scripts/variable/index').name,\n      require('scripts/tasklist/index').name,\n      require('scripts/task/index').name,\n      require('scripts/process/index').name,\n      require('scripts/navigation/index').name,\n      require('scripts/form/index').name,\n      require('scripts/filter/index').name,\n      require('scripts/api/index').name,\n    ].concat(pluginDependencies.map(function(el){\n      return el.ngModuleName;\n    }));\n\n    var uriConfig = parseUriConfig();\n\n    tasklistApp = angular.module('cam.tasklist', ngDeps);\n\n    tasklistApp.factory('assignNotification', require('scripts/services/cam-tasklist-assign-notification'));\n    tasklistApp.provider('configuration', require('scripts/services/cam-tasklist-configuration'));\n\n    require('scripts/config/locales')(tasklistApp, uriConfig['app-root']);\n    require('scripts/config/uris')(tasklistApp, uriConfig);\n\n\n    tasklistApp.config(require('scripts/config/routes'));\n    tasklistApp.config(require('scripts/config/date'));\n    tasklistApp.config(require('scripts/config/tooltip'));\n\n    tasklistApp.controller('camTasklistAppCtrl', require('scripts/controller/cam-tasklist-app-ctrl'));\n    tasklistApp.controller('camTasklistViewCtrl', require('scripts/controller/cam-tasklist-view-ctrl'));\n\n\n    // The `cam.tasklist` AngularJS module is now available but not yet bootstraped,\n    // it is the right moment to load plugins\n    if (typeof window.camTasklistConf !== 'undefined' && window.camTasklistConf.customScripts) {\n      var custom = window.camTasklistConf.customScripts || {};\n\n      // copy the relevant RequireJS configuration in a empty object\n      // see: http://requirejs.org/docs/api.html#config\n      var conf = {};\n      [\n        'baseUrl',\n        'paths',\n        'bundles',\n        'shim',\n        'map',\n        'config',\n        'packages',\n        // 'nodeIdCompat',\n        'waitSeconds',\n        'context',\n        // 'deps', // not relevant in this case\n        'callback',\n        'enforceDefine',\n        'xhtml',\n        'urlArgs',\n        'scriptType'\n        // 'skipDataMain' // not relevant either\n      ].forEach(function (prop) {\n        if (custom[prop]) {\n          conf[prop] = custom[prop];\n        }\n      });\n\n      // configure RequireJS\n      require.config(conf);\n\n      // load the dependencies and bootstrap the AngularJS application\n      require(custom.deps || [], function() {\n\n        // create a AngularJS module (with possible AngularJS module dependencies)\n        // on which the custom scripts can register their\n        // directives, controllers, services and all when loaded\n        angular.module('cam.tasklist.custom', custom.ngDeps);\n\n        bootstrapApp.apply(this, arguments);\n      });\n    }\n    else {\n      // for consistency, also create a empty module\n      angular.module('cam.tasklist.custom', []);\n\n      // make sure that we are at the end of the require-js callback queue.\n      // Why? => the plugins will also execute require(..) which will place new\n      // entries into the queue.  if we bootstrap the angular app\n      // synchronously, the plugins' require callbacks will not have been\n      // executed yet and the angular modules provided by those plugins will\n      // not have been defined yet. Placing a new require call here will put\n      // the bootstrapping of the angular app at the end of the queue\n      require([], function() {\n        bootstrapApp();\n      });\n    }\n  }\n\n\n  /* live-reload\n  // loads livereload client library (without breaking other scripts execution)\n  require(['jquery'], function($) {\n    $('body').append('<script src=\"//' + location.hostname + ':LIVERELOAD_PORT/livereload.js?snipver=1\"></script>');\n  });\n  /* */\n\n  // and load the dependencies\n  require(deps, loaded);\n});\n\n"]}